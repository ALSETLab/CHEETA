#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
       1                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       2                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(192,36)
_dummy
_derdummy
combiTimeTable7.nout
combiTimeTable7.y[1]
combiTimeTable7.y[2]
combiTimeTable7.y[3]
combiTimeTable7.y[4]
combiTimeTable7.y[5]
combiTimeTable7.tableOnFile
combiTimeTable7.table[1, 1]
combiTimeTable7.table[1, 2]
combiTimeTable7.table[1, 3]
combiTimeTable7.table[1, 4]
combiTimeTable7.table[1, 5]
combiTimeTable7.table[1, 6]
combiTimeTable7.table[2, 1]
combiTimeTable7.table[2, 2]
combiTimeTable7.table[2, 3]
combiTimeTable7.table[2, 4]
combiTimeTable7.table[2, 5]
combiTimeTable7.table[2, 6]
combiTimeTable7.table[3, 1]
combiTimeTable7.table[3, 2]
combiTimeTable7.table[3, 3]
combiTimeTable7.table[3, 4]
combiTimeTable7.table[3, 5]
combiTimeTable7.table[3, 6]
combiTimeTable7.table[4, 1]
combiTimeTable7.table[4, 2]
combiTimeTable7.table[4, 3]
combiTimeTable7.table[4, 4]
combiTimeTable7.table[4, 5]
combiTimeTable7.table[4, 6]
combiTimeTable7.table[5, 1]
combiTimeTable7.table[5, 2]
combiTimeTable7.table[5, 3]
combiTimeTable7.table[5, 4]
combiTimeTable7.table[5, 5]
combiTimeTable7.table[5, 6]
combiTimeTable7.table[6, 1]
combiTimeTable7.table[6, 2]
combiTimeTable7.table[6, 3]
combiTimeTable7.table[6, 4]
combiTimeTable7.table[6, 5]
combiTimeTable7.table[6, 6]
combiTimeTable7.table[7, 1]
combiTimeTable7.table[7, 2]
combiTimeTable7.table[7, 3]
combiTimeTable7.table[7, 4]
combiTimeTable7.table[7, 5]
combiTimeTable7.table[7, 6]
combiTimeTable7.table[8, 1]
combiTimeTable7.table[8, 2]
combiTimeTable7.table[8, 3]
combiTimeTable7.table[8, 4]
combiTimeTable7.table[8, 5]
combiTimeTable7.table[8, 6]
combiTimeTable7.table[9, 1]
combiTimeTable7.table[9, 2]
combiTimeTable7.table[9, 3]
combiTimeTable7.table[9, 4]
combiTimeTable7.table[9, 5]
combiTimeTable7.table[9, 6]
combiTimeTable7.table[10, 1]
combiTimeTable7.table[10, 2]
combiTimeTable7.table[10, 3]
combiTimeTable7.table[10, 4]
combiTimeTable7.table[10, 5]
combiTimeTable7.table[10, 6]
combiTimeTable7.verboseRead
combiTimeTable7.columns[1]
combiTimeTable7.columns[2]
combiTimeTable7.columns[3]
combiTimeTable7.columns[4]
combiTimeTable7.columns[5]
combiTimeTable7.smoothness
combiTimeTable7.extrapolation
combiTimeTable7.timeScale
combiTimeTable7.offset[1]
combiTimeTable7.startTime
combiTimeTable7.shiftTime
combiTimeTable7.timeEvents
combiTimeTable7.verboseExtrapolation
combiTimeTable7.t_min
combiTimeTable7.t_max
combiTimeTable7.t_minScaled
combiTimeTable7.t_maxScaled
combiTimeTable7.p_offset[1]
combiTimeTable7.p_offset[2]
combiTimeTable7.p_offset[3]
combiTimeTable7.p_offset[4]
combiTimeTable7.p_offset[5]
combiTimeTable7.tableID.id
combiTimeTable7.nextTimeEvent
combiTimeTable7.nextTimeEventScaled
combiTimeTable7.timeScaled
combiTimeTable8.nout
combiTimeTable8.y[1]
combiTimeTable8.y[2]
combiTimeTable8.y[3]
combiTimeTable8.y[4]
combiTimeTable8.y[5]
combiTimeTable8.tableOnFile
combiTimeTable8.table[1, 1]
combiTimeTable8.table[1, 2]
combiTimeTable8.table[1, 3]
combiTimeTable8.table[1, 4]
combiTimeTable8.table[1, 5]
combiTimeTable8.table[1, 6]
combiTimeTable8.table[2, 1]
combiTimeTable8.table[2, 2]
combiTimeTable8.table[2, 3]
combiTimeTable8.table[2, 4]
combiTimeTable8.table[2, 5]
combiTimeTable8.table[2, 6]
combiTimeTable8.table[3, 1]
combiTimeTable8.table[3, 2]
combiTimeTable8.table[3, 3]
combiTimeTable8.table[3, 4]
combiTimeTable8.table[3, 5]
combiTimeTable8.table[3, 6]
combiTimeTable8.table[4, 1]
combiTimeTable8.table[4, 2]
combiTimeTable8.table[4, 3]
combiTimeTable8.table[4, 4]
combiTimeTable8.table[4, 5]
combiTimeTable8.table[4, 6]
combiTimeTable8.table[5, 1]
combiTimeTable8.table[5, 2]
combiTimeTable8.table[5, 3]
combiTimeTable8.table[5, 4]
combiTimeTable8.table[5, 5]
combiTimeTable8.table[5, 6]
combiTimeTable8.table[6, 1]
combiTimeTable8.table[6, 2]
combiTimeTable8.table[6, 3]
combiTimeTable8.table[6, 4]
combiTimeTable8.table[6, 5]
combiTimeTable8.table[6, 6]
combiTimeTable8.table[7, 1]
combiTimeTable8.table[7, 2]
combiTimeTable8.table[7, 3]
combiTimeTable8.table[7, 4]
combiTimeTable8.table[7, 5]
combiTimeTable8.table[7, 6]
combiTimeTable8.table[8, 1]
combiTimeTable8.table[8, 2]
combiTimeTable8.table[8, 3]
combiTimeTable8.table[8, 4]
combiTimeTable8.table[8, 5]
combiTimeTable8.table[8, 6]
combiTimeTable8.table[9, 1]
combiTimeTable8.table[9, 2]
combiTimeTable8.table[9, 3]
combiTimeTable8.table[9, 4]
combiTimeTable8.table[9, 5]
combiTimeTable8.table[9, 6]
combiTimeTable8.table[10, 1]
combiTimeTable8.table[10, 2]
combiTimeTable8.table[10, 3]
combiTimeTable8.table[10, 4]
combiTimeTable8.table[10, 5]
combiTimeTable8.table[10, 6]
combiTimeTable8.verboseRead
combiTimeTable8.columns[1]
combiTimeTable8.columns[2]
combiTimeTable8.columns[3]
combiTimeTable8.columns[4]
combiTimeTable8.columns[5]
combiTimeTable8.smoothness
combiTimeTable8.extrapolation
combiTimeTable8.timeScale
combiTimeTable8.offset[1]
combiTimeTable8.startTime
combiTimeTable8.shiftTime
combiTimeTable8.timeEvents
combiTimeTable8.verboseExtrapolation
combiTimeTable8.t_min
combiTimeTable8.t_max
combiTimeTable8.t_minScaled
combiTimeTable8.t_maxScaled
combiTimeTable8.p_offset[1]
combiTimeTable8.p_offset[2]
combiTimeTable8.p_offset[3]
combiTimeTable8.p_offset[4]
combiTimeTable8.p_offset[5]
combiTimeTable8.tableID.id
combiTimeTable8.nextTimeEvent
combiTimeTable8.nextTimeEventScaled
combiTimeTable8.timeScaled
CPUtime
EventCounter

double initialValue(192,6)
 -2       1                       0                       0                
  2     0   # _dummy
 -2       0                       0                       0                
  3     0   # _derdummy
 -2       5                       1                 1.0000000000000000E+100
  6   258   # combiTimeTable7.nout
 -2 2.0013609635012996E-005       0                       0                
  6   256   # combiTimeTable7.y[1]
 -2 6.0080697609690811E-004       0                       0                
  6   256   # combiTimeTable7.y[2]
 -2 1.0026739169832404E-003       0                       0                
  6   256   # combiTimeTable7.y[3]
 -2 2.0013609635012998E-003       0                       0                
  6   256   # combiTimeTable7.y[4]
 -2 3.4554599617942557E+001       0                       0                
  6   256   # combiTimeTable7.y[5]
 -2       0                       0                       0                
  6   257   # combiTimeTable7.tableOnFile
 -2 2.7725330690000000E-001       0                       0                
  6   256   # combiTimeTable7.table[1, 1]
 -2 2.6000000000000000E+006       0                       0                
  6   256   # combiTimeTable7.table[1, 2]
 -2 7.8000000000000000E+007       0                       0                
  6   256   # combiTimeTable7.table[1, 3]
 -2 1.3000000000000000E+008       0                       0                
  6   256   # combiTimeTable7.table[1, 4]
 -2 2.6000000000000000E+008       0                       0                
  6   256   # combiTimeTable7.table[1, 5]
 -2 1.2455959799999999E+002       0                       0                
  6   256   # combiTimeTable7.table[1, 6]
 -2 3.7641248789999998E-001       0                       0                
  6   256   # combiTimeTable7.table[2, 1]
 -2    5420                       0                       0                
  6   256   # combiTimeTable7.table[2, 2]
 -2 1.6300000000000000E+005       0                       0                
  6   256   # combiTimeTable7.table[2, 3]
 -2 2.7100000000000000E+005       0                       0                
  6   256   # combiTimeTable7.table[2, 4]
 -2 5.4200000000000000E+005       0                       0                
  6   256   # combiTimeTable7.table[2, 5]
 -2 9.1746585400000001E+001       0                       0                
  6   256   # combiTimeTable7.table[2, 6]
 -2 5.7332874670000000E-001       0                       0                
  6   256   # combiTimeTable7.table[3, 1]
 -2 1.2001900000000001E+000       0                       0                
  6   256   # combiTimeTable7.table[3, 2]
 -2      36                       0                       0                
  6   256   # combiTimeTable7.table[3, 3]
 -2      60                       0                       0                
  6   256   # combiTimeTable7.table[3, 4]
 -2     120                       0                       0                
  6   256   # combiTimeTable7.table[3, 5]
 -2 6.0235180360000001E+001       0                       0                
  6   256   # combiTimeTable7.table[3, 6]
 -2 6.9496566869999998E-001       0                       0                
  6   256   # combiTimeTable7.table[4, 1]
 -2 4.7378999999999998E-002       0                       0                
  6   256   # combiTimeTable7.table[4, 2]
 -2 1.4199999999999999E+000       0                       0                
  6   256   # combiTimeTable7.table[4, 3]
 -2 2.3700000000000001E+000       0                       0                
  6   256   # combiTimeTable7.table[4, 4]
 -2 4.7400000000000002E+000       0                       0                
  6   256   # combiTimeTable7.table[4, 5]
 -2 4.9692469740000000E+001       0                       0                
  6   256   # combiTimeTable7.table[4, 6]
 -2 7.2316514919999997E-001       0                       0                
  6   256   # combiTimeTable7.table[5, 1]
 -2 5.4960000000000000E-003       0                       0                
  6   256   # combiTimeTable7.table[5, 2]
 -2 3.4599999999999997E-001       0                       0                
  6   256   # combiTimeTable7.table[5, 3]
 -2 5.7699999999999996E-001       0                       0                
  6   256   # combiTimeTable7.table[5, 4]
 -2 1.1499999999999999E+000       0                       0                
  6   256   # combiTimeTable7.table[5, 5]
 -2 4.7754735549999999E+001       0                       0                
  6   256   # combiTimeTable7.table[5, 6]
 -2 7.7254677770000002E-001       0                       0                
  6   256   # combiTimeTable7.table[6, 1]
 -2 3.0820200000000000E-003       0                       0                
  6   256   # combiTimeTable7.table[6, 2]
 -2 9.2499999999999999E-002       0                       0                
  6   256   # combiTimeTable7.table[6, 3]
 -2 1.5400000000000000E-001       0                       0                
  6   256   # combiTimeTable7.table[6, 4]
 -2 3.0800000000000000E-001       0                       0                
  6   256   # combiTimeTable7.table[6, 5]
 -2 4.4702225749999997E+001       0                       0                
  6   256   # combiTimeTable7.table[6, 6]
 -2 8.2158467250000000E-001       0                       0                
  6   256   # combiTimeTable7.table[7, 1]
 -2 8.9982599999999995E-004       0                       0                
  6   256   # combiTimeTable7.table[7, 2]
 -2 2.7000000000000000E-002       0                       0                
  6   256   # combiTimeTable7.table[7, 3]
 -2 4.4999999999999998E-002       0                       0                
  6   256   # combiTimeTable7.table[7, 4]
 -2 8.9999999999999997E-002       0                       0                
  6   256   # combiTimeTable7.table[7, 5]
 -2 4.2034085609999998E+001       0                       0                
  6   256   # combiTimeTable7.table[7, 6]
 -2 8.7109531520000005E-001       0                       0                
  6   256   # combiTimeTable7.table[8, 1]
 -2 2.7926500000000000E-004       0                       0                
  6   256   # combiTimeTable7.table[8, 2]
 -2 8.3800000000000003E-003       0                       0                
  6   256   # combiTimeTable7.table[8, 3]
 -2 1.4000000000000000E-002       0                       0                
  6   256   # combiTimeTable7.table[8, 4]
 -2 2.7900000000000001E-002       0                       0                
  6   256   # combiTimeTable7.table[8, 5]
 -2 3.9644984719999997E+001       0                       0                
  6   256   # combiTimeTable7.table[8, 6]
 -2 9.7057224939999998E-001       0                       0                
  6   256   # combiTimeTable7.table[9, 1]
 -2 3.2100000000000001E-005       0                       0                
  6   256   # combiTimeTable7.table[9, 2]
 -2 9.6400000000000001E-004       0                       0                
  6   256   # combiTimeTable7.table[9, 3]
 -2 1.6100000000000001E-003       0                       0                
  6   256   # combiTimeTable7.table[9, 4]
 -2 3.2100000000000002E-003       0                       0                
  6   256   # combiTimeTable7.table[9, 5]
 -2 3.5581648330000000E+001       0                       0                
  6   256   # combiTimeTable7.table[9, 6]
 -2 1.0195114089999999E+000       0                       0                
  6   256   # combiTimeTable7.table[10, 1]
 -2 1.2000000000000000E-005       0                       0                
  6   256   # combiTimeTable7.table[10, 2]
 -2 3.6000000000000002E-004       0                       0                
  6   256   # combiTimeTable7.table[10, 3]
 -2 5.9999999999999995E-004       0                       0                
  6   256   # combiTimeTable7.table[10, 4]
 -2 1.1999999999999999E-003       0                       0                
  6   256   # combiTimeTable7.table[10, 5]
 -2 3.3873638040000003E+001       0                       0                
  6   256   # combiTimeTable7.table[10, 6]
 -2       1                       0                       0                
  6   257   # combiTimeTable7.verboseRead
 -2       2                       0                       0                
  6   258   # combiTimeTable7.columns[1]
 -2       3                       0                       0                
  6   258   # combiTimeTable7.columns[2]
 -2       4                       0                       0                
  6   258   # combiTimeTable7.columns[3]
 -2       5                       0                       0                
  6   258   # combiTimeTable7.columns[4]
 -2       6                       0                       0                
  6   258   # combiTimeTable7.columns[5]
 -2       1                       1                       5                
  6   258   # combiTimeTable7.smoothness
 -2       2                       1                       4                
  6   258   # combiTimeTable7.extrapolation
 -2       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # combiTimeTable7.timeScale
 -2       0                       0                       0                
  6   256   # combiTimeTable7.offset[1]
 -2       0                       0                       0                
  6   256   # combiTimeTable7.startTime
 -2       0                       0                       0                
  6   256   # combiTimeTable7.shiftTime
 -2       1                       1                       3                
  6   258   # combiTimeTable7.timeEvents
 -2       0                       0                       0                
  6   257   # combiTimeTable7.verboseExtrapolation
 -2 2.7725330690000000E-001       0                       0                
  6   256   # combiTimeTable7.t_min
 -2 1.0195114089999999E+000       0                       0                
  6   256   # combiTimeTable7.t_max
 -2 2.7725330690000000E-001       0                       0                
  6   256   # combiTimeTable7.t_minScaled
 -2 1.0195114089999999E+000       0                       0                
  6   256   # combiTimeTable7.t_maxScaled
 -2       0                       0                       0                
  6  1280   # combiTimeTable7.p_offset[1]
 -2       0                       0                       0                
  6  1280   # combiTimeTable7.p_offset[2]
 -2       0                       0                       0                
  6  1280   # combiTimeTable7.p_offset[3]
 -2       0                       0                       0                
  6  1280   # combiTimeTable7.p_offset[4]
 -2       0                       0                       0                
  6  1280   # combiTimeTable7.p_offset[5]
 -2       0                       0                       0                
  6  1282   # combiTimeTable7.tableID.id
 -2 1.0195114089999999E+000       0                       0                
  6  1352   # combiTimeTable7.nextTimeEvent
 -2 1.0195114089999999E+000       0                       0                
  6  1352   # combiTimeTable7.nextTimeEventScaled
 -2       1                       0                       0                
  6  1280   # combiTimeTable7.timeScaled
 -2       5                       1                 1.0000000000000000E+100
  6   258   # combiTimeTable8.nout
 -2 1.0182658258483320E-002       0                       0                
  6   256   # combiTimeTable8.y[1]
 -2 3.0526562793285028E-001       0                       0                
  6   256   # combiTimeTable8.y[2]
 -2 5.0930981753924442E-001       0                       0                
  6   256   # combiTimeTable8.y[3]
 -2 1.0164235739389347E+000       0                       0                
  6   256   # combiTimeTable8.y[4]
 -2 4.6958957423957777E+001       0                       0                
  6   256   # combiTimeTable8.y[5]
 -2       0                       0                       0                
  6   257   # combiTimeTable8.tableOnFile
 -2 2.7725330690000000E-001       0                       0                
  6   256   # combiTimeTable8.table[1, 1]
 -2 3.4100000000000001E+023       0                       0                
  6   256   # combiTimeTable8.table[1, 2]
 -2 1.0199999999999999E+025       0                       0                
  6   256   # combiTimeTable8.table[1, 3]
 -2 1.6999999999999999E+025       0                       0                
  6   256   # combiTimeTable8.table[1, 4]
 -2 3.4099999999999999E+025       0                       0                
  6   256   # combiTimeTable8.table[1, 5]
 -2 8.4138621730000000E+002       0                       0                
  6   256   # combiTimeTable8.table[1, 6]
 -2 3.7641248789999998E-001       0                       0                
  6   256   # combiTimeTable8.table[2, 1]
 -2 2.9200000000000000E+014       0                       0                
  6   256   # combiTimeTable8.table[2, 2]
 -2 8.7700000000000000E+015       0                       0                
  6   256   # combiTimeTable8.table[2, 3]
 -2 1.4600000000000000E+016       0                       0                
  6   256   # combiTimeTable8.table[2, 4]
 -2 2.9200000000000000E+016       0                       0                
  6   256   # combiTimeTable8.table[2, 5]
 -2 3.1471172280000002E+002       0                       0                
  6   256   # combiTimeTable8.table[2, 6]
 -2 5.7332874670000000E-001       0                       0                
  6   256   # combiTimeTable8.table[3, 1]
 -2 2.6965300000000000E+005       0                       0                
  6   256   # combiTimeTable8.table[3, 2]
 -2 8.0900000000000000E+006       0                       0                
  6   256   # combiTimeTable8.table[3, 3]
 -2 1.3500000000000000E+007       0                       0                
  6   256   # combiTimeTable8.table[3, 4]
 -2 2.7000000000000000E+007       0                       0                
  6   256   # combiTimeTable8.table[3, 5]
 -2 1.1121613450000000E+002       0                       0                
  6   256   # combiTimeTable8.table[3, 6]
 -2 6.9496566869999998E-001       0                       0                
  6   256   # combiTimeTable8.table[4, 1]
 -2 9.8907700000000000E+002       0                       0                
  6   256   # combiTimeTable8.table[4, 2]
 -2   29700                       0                       0                
  6   256   # combiTimeTable8.table[4, 3]
 -2   49500                       0                       0                
  6   256   # combiTimeTable8.table[4, 4]
 -2   98900                       0                       0                
  6   256   # combiTimeTable8.table[4, 5]
 -2 8.4265363559999997E+001       0                       0                
  6   256   # combiTimeTable8.table[4, 6]
 -2 7.2316514919999997E-001       0                       0                
  6   256   # combiTimeTable8.table[5, 1]
 -2 1.0046899999999999E+002       0                       0                
  6   256   # combiTimeTable8.table[5, 2]
 -2    3010                       0                       0                
  6   256   # combiTimeTable8.table[5, 3]
 -2    5020                       0                       0                
  6   256   # combiTimeTable8.table[5, 4]
 -2   10000                       0                       0                
  6   256   # combiTimeTable8.table[5, 5]
 -2 7.5160326699999999E+001       0                       0                
  6   256   # combiTimeTable8.table[5, 6]
 -2 7.7254677770000002E-001       0                       0                
  6   256   # combiTimeTable8.table[6, 1]
 -2 1.2884000000000000E+001       0                       0                
  6   256   # combiTimeTable8.table[6, 2]
 -2     387                       0                       0                
  6   256   # combiTimeTable8.table[6, 3]
 -2     644                       0                       0                
  6   256   # combiTimeTable8.table[6, 4]
 -2    1290                       0                       0                
  6   256   # combiTimeTable8.table[6, 5]
 -2 6.7825186049999999E+001       0                       0                
  6   256   # combiTimeTable8.table[6, 6]
 -2 8.2158467250000000E-001       0                       0                
  6   256   # combiTimeTable8.table[7, 1]
 -2 2.0128499999999998E+000       0                       0                
  6   256   # combiTimeTable8.table[7, 2]
 -2 6.0399999999999999E+001       0                       0                
  6   256   # combiTimeTable8.table[7, 3]
 -2     101                       0                       0                
  6   256   # combiTimeTable8.table[7, 4]
 -2     201                       0                       0                
  6   256   # combiTimeTable8.table[7, 5]
 -2 6.1812719080000001E+001       0                       0                
  6   256   # combiTimeTable8.table[7, 6]
 -2 8.7109531520000005E-001       0                       0                
  6   256   # combiTimeTable8.table[8, 1]
 -2 3.6951400000000001E-001       0                       0                
  6   256   # combiTimeTable8.table[8, 2]
 -2 1.1100000000000000E+001       0                       0                
  6   256   # combiTimeTable8.table[8, 3]
 -2 1.8500000000000000E+001       0                       0                
  6   256   # combiTimeTable8.table[8, 4]
 -2      37                       0                       0                
  6   256   # combiTimeTable8.table[8, 5]
 -2 5.6789667260000002E+001       0                       0                
  6   256   # combiTimeTable8.table[8, 6]
 -2 9.7057224939999998E-001       0                       0                
  6   256   # combiTimeTable8.table[9, 1]
 -2 1.8342000000000001E-002       0                       0                
  6   256   # combiTimeTable8.table[9, 2]
 -2 5.5000000000000004E-001       0                       0                
  6   256   # combiTimeTable8.table[9, 3]
 -2 9.1700000000000004E-001       0                       0                
  6   256   # combiTimeTable8.table[9, 4]
 -2 1.8300000000000001E+000       0                       0                
  6   256   # combiTimeTable8.table[9, 5]
 -2 4.8871928580000002E+001       0                       0                
  6   256   # combiTimeTable8.table[9, 6]
 -2 1.0195114089999999E+000       0                       0                
  6   256   # combiTimeTable8.table[10, 1]
 -2 4.7727899999999998E-003       0                       0                
  6   256   # combiTimeTable8.table[10, 2]
 -2 1.4299999999999999E-001       0                       0                
  6   256   # combiTimeTable8.table[10, 3]
 -2 2.3899999999999999E-001       0                       0                
  6   256   # combiTimeTable8.table[10, 4]
 -2 4.7699999999999998E-001       0                       0                
  6   256   # combiTimeTable8.table[10, 5]
 -2 4.5690604870000001E+001       0                       0                
  6   256   # combiTimeTable8.table[10, 6]
 -2       1                       0                       0                
  6   257   # combiTimeTable8.verboseRead
 -2       2                       0                       0                
  6   258   # combiTimeTable8.columns[1]
 -2       3                       0                       0                
  6   258   # combiTimeTable8.columns[2]
 -2       4                       0                       0                
  6   258   # combiTimeTable8.columns[3]
 -2       5                       0                       0                
  6   258   # combiTimeTable8.columns[4]
 -2       6                       0                       0                
  6   258   # combiTimeTable8.columns[5]
 -2       1                       1                       5                
  6   258   # combiTimeTable8.smoothness
 -2       2                       1                       4                
  6   258   # combiTimeTable8.extrapolation
 -2       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # combiTimeTable8.timeScale
 -2       0                       0                       0                
  6   256   # combiTimeTable8.offset[1]
 -2       0                       0                       0                
  6   256   # combiTimeTable8.startTime
 -2       0                       0                       0                
  6   256   # combiTimeTable8.shiftTime
 -2       1                       1                       3                
  6   258   # combiTimeTable8.timeEvents
 -2       0                       0                       0                
  6   257   # combiTimeTable8.verboseExtrapolation
 -2 2.7725330690000000E-001       0                       0                
  6   256   # combiTimeTable8.t_min
 -2 1.0195114089999999E+000       0                       0                
  6   256   # combiTimeTable8.t_max
 -2 2.7725330690000000E-001       0                       0                
  6   256   # combiTimeTable8.t_minScaled
 -2 1.0195114089999999E+000       0                       0                
  6   256   # combiTimeTable8.t_maxScaled
 -2       0                       0                       0                
  6  1280   # combiTimeTable8.p_offset[1]
 -2       0                       0                       0                
  6  1280   # combiTimeTable8.p_offset[2]
 -2       0                       0                       0                
  6  1280   # combiTimeTable8.p_offset[3]
 -2       0                       0                       0                
  6  1280   # combiTimeTable8.p_offset[4]
 -2       0                       0                       0                
  6  1280   # combiTimeTable8.p_offset[5]
 -2       1                       0                       0                
  6  1282   # combiTimeTable8.tableID.id
 -2 1.0195114089999999E+000       0                       0                
  6  1352   # combiTimeTable8.nextTimeEvent
 -2 1.0195114089999999E+000       0                       0                
  6  1352   # combiTimeTable8.nextTimeEventScaled
 -2       1                       0                       0                
  6  1280   # combiTimeTable8.timeScaled
 -2 4.3481429999999999E-001       0                       0                
  4   256   # CPUtime
 -2      22                       0                       0                
  4   256   # EventCounter


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(192,110)
dummy
derdummy
Number of outputs [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Time scale of first table column [s]
Offsets of output signals
Output = offset for time < startTime [s]
Shift time of first table column [s]
Time event handling of table interpolation [:#(type=Modelica.Blocks.Types.TimeEvents)]
= true, if warning messages are to be printed if time is outside the table definition range [:#(type=Boolean)]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table [1]
Maximum (scaled) abscissa value defined in table [1]
Offsets of output signals
Offsets of output signals
Offsets of output signals
Offsets of output signals
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant [1]
Scaled time [1]
Number of outputs [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Time scale of first table column [s]
Offsets of output signals
Output = offset for time < startTime [s]
Shift time of first table column [s]
Time event handling of table interpolation [:#(type=Modelica.Blocks.Types.TimeEvents)]
= true, if warning messages are to be printed if time is outside the table definition range [:#(type=Boolean)]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table [1]
Maximum (scaled) abscissa value defined in table [1]
Offsets of output signals
Offsets of output signals
Offsets of output signals
Offsets of output signals
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant [1]
Scaled time [1]
[s]


