#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
      10                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(3121,83)
pi
m
simplifiedFuelCell.constantVoltage.V
simplifiedFuelCell.constantVoltage.n.v
simplifiedFuelCell.resistor.R
simplifiedFuelCell.resistor.T_ref
simplifiedFuelCell.resistor.alpha
simplifiedFuelCell.resistor.v
simplifiedFuelCell.resistor.useHeatPort
simplifiedFuelCell.resistor.T
simplifiedFuelCell.resistor.LossPower
simplifiedFuelCell.resistor.R_actual
simplifiedFuelCell.pin_p.v
simplifiedFuelCell.pin_p.i
simplifiedFuelCell.R
simplifiedFuelCell.L
simplifiedFuelCell.V
simplifiedFuelCell.constantVoltage1.V
simplifiedFuelCell.constantVoltage1.p.v
simplifiedFuelCell.ground.p.v
simplifiedFuelCell.ground.p.i
simplifiedFuelCell.resistor1.R
simplifiedFuelCell.resistor1.T_ref
simplifiedFuelCell.resistor1.alpha
simplifiedFuelCell.resistor1.v
simplifiedFuelCell.resistor1.useHeatPort
simplifiedFuelCell.resistor1.T
simplifiedFuelCell.resistor1.LossPower
simplifiedFuelCell.resistor1.R_actual
simplifiedFuelCell.pin_p1.v
simplifiedFuelCell.pin_p1.i
inverter2.useConstantEnable
inverter2.constantEnable
inverter2.m
inverter2.fire_p[1]
inverter2.fire_p[2]
inverter2.fire_p[3]
inverter2.enableLogic.useConstantEnable
inverter2.enableLogic.constantEnable
inverter2.enableLogic.m
inverter2.enableLogic.enableConstantSource.k
inverter2.enableLogic.booleanReplicator.nout
inverter2.fire_n[1]
inverter2.fire_n[2]
inverter2.fire_n[3]
inverter2.RonTransistor
inverter2.GoffTransistor
inverter2.VkneeTransistor
inverter2.RonDiode
inverter2.GoffDiode
inverter2.VkneeDiode
inverter2.dc_p.v
inverter2.dc_p.i
inverter2.dc_n.v
inverter2.dc_n.i
inverter2.vDC
inverter2.powerDC
inverter2.ac.m
inverter2.ac.pin[1].v
inverter2.ac.pin[1].i
inverter2.ac.pin[2].v
inverter2.ac.pin[2].i
inverter2.ac.pin[3].v
inverter2.ac.pin[3].i
inverter2.powerAC[1]
inverter2.powerAC[2]
inverter2.powerAC[3]
inverter2.powerTotalAC
inverter2.useHeatPort
inverter2.T
inverter2.LossPower
inverter2.T_heatPort
inverter2.transistor_p.m
inverter2.transistor_p.v[1]
inverter2.transistor_p.v[2]
inverter2.transistor_p.v[3]
inverter2.transistor_p.i[1]
inverter2.transistor_p.i[2]
inverter2.transistor_p.i[3]
inverter2.transistor_p.plug_p.m
inverter2.transistor_p.plug_n.m
inverter2.transistor_p.Ron[1]
inverter2.transistor_p.Ron[2]
inverter2.transistor_p.Ron[3]
inverter2.transistor_p.Goff[1]
inverter2.transistor_p.Goff[2]
inverter2.transistor_p.Goff[3]
inverter2.transistor_p.Vknee[1]
inverter2.transistor_p.Vknee[2]
inverter2.transistor_p.Vknee[3]
inverter2.transistor_p.mh
inverter2.transistor_p.useHeatPort
inverter2.transistor_p.T[1]
inverter2.transistor_p.T[2]
inverter2.transistor_p.T[3]
inverter2.transistor_p.fire[1]
inverter2.transistor_p.fire[2]
inverter2.transistor_p.fire[3]
inverter2.transistor_p.idealGTOThyristor[1].v
inverter2.transistor_p.idealGTOThyristor[1].Ron
inverter2.transistor_p.idealGTOThyristor[1].Goff
inverter2.transistor_p.idealGTOThyristor[1].Vknee
inverter2.transistor_p.idealGTOThyristor[1].useHeatPort
inverter2.transistor_p.idealGTOThyristor[1].T
inverter2.transistor_p.idealGTOThyristor[1].LossPower
inverter2.transistor_p.idealGTOThyristor[1].off
inverter2.transistor_p.idealGTOThyristor[1].s
inverter2.transistor_p.idealGTOThyristor[1].unitVoltage
inverter2.transistor_p.idealGTOThyristor[1].unitCurrent
inverter2.transistor_p.idealGTOThyristor[2].v
inverter2.transistor_p.idealGTOThyristor[2].Ron
inverter2.transistor_p.idealGTOThyristor[2].Goff
inverter2.transistor_p.idealGTOThyristor[2].Vknee
inverter2.transistor_p.idealGTOThyristor[2].useHeatPort
inverter2.transistor_p.idealGTOThyristor[2].T
inverter2.transistor_p.idealGTOThyristor[2].LossPower
inverter2.transistor_p.idealGTOThyristor[2].off
inverter2.transistor_p.idealGTOThyristor[2].s
inverter2.transistor_p.idealGTOThyristor[2].unitVoltage
inverter2.transistor_p.idealGTOThyristor[2].unitCurrent
inverter2.transistor_p.idealGTOThyristor[3].v
inverter2.transistor_p.idealGTOThyristor[3].Ron
inverter2.transistor_p.idealGTOThyristor[3].Goff
inverter2.transistor_p.idealGTOThyristor[3].Vknee
inverter2.transistor_p.idealGTOThyristor[3].useHeatPort
inverter2.transistor_p.idealGTOThyristor[3].T
inverter2.transistor_p.idealGTOThyristor[3].LossPower
inverter2.transistor_p.idealGTOThyristor[3].off
inverter2.transistor_p.idealGTOThyristor[3].s
inverter2.transistor_p.idealGTOThyristor[3].unitVoltage
inverter2.transistor_p.idealGTOThyristor[3].unitCurrent
inverter2.diode_p.m
inverter2.diode_p.v[1]
inverter2.diode_p.v[2]
inverter2.diode_p.v[3]
inverter2.diode_p.i[1]
inverter2.diode_p.i[2]
inverter2.diode_p.i[3]
inverter2.diode_p.plug_p.m
inverter2.diode_p.plug_n.m
inverter2.diode_p.Ron[1]
inverter2.diode_p.Ron[2]
inverter2.diode_p.Ron[3]
inverter2.diode_p.Goff[1]
inverter2.diode_p.Goff[2]
inverter2.diode_p.Goff[3]
inverter2.diode_p.Vknee[1]
inverter2.diode_p.Vknee[2]
inverter2.diode_p.Vknee[3]
inverter2.diode_p.mh
inverter2.diode_p.useHeatPort
inverter2.diode_p.T[1]
inverter2.diode_p.T[2]
inverter2.diode_p.T[3]
inverter2.diode_p.idealDiode[1].v
inverter2.diode_p.idealDiode[1].Ron
inverter2.diode_p.idealDiode[1].Goff
inverter2.diode_p.idealDiode[1].Vknee
inverter2.diode_p.idealDiode[1].useHeatPort
inverter2.diode_p.idealDiode[1].T
inverter2.diode_p.idealDiode[1].LossPower
inverter2.diode_p.idealDiode[1].off
inverter2.diode_p.idealDiode[1].s
inverter2.diode_p.idealDiode[1].unitVoltage
inverter2.diode_p.idealDiode[1].unitCurrent
inverter2.diode_p.idealDiode[2].v
inverter2.diode_p.idealDiode[2].Ron
inverter2.diode_p.idealDiode[2].Goff
inverter2.diode_p.idealDiode[2].Vknee
inverter2.diode_p.idealDiode[2].useHeatPort
inverter2.diode_p.idealDiode[2].T
inverter2.diode_p.idealDiode[2].LossPower
inverter2.diode_p.idealDiode[2].off
inverter2.diode_p.idealDiode[2].s
inverter2.diode_p.idealDiode[2].unitVoltage
inverter2.diode_p.idealDiode[2].unitCurrent
inverter2.diode_p.idealDiode[3].v
inverter2.diode_p.idealDiode[3].Ron
inverter2.diode_p.idealDiode[3].Goff
inverter2.diode_p.idealDiode[3].Vknee
inverter2.diode_p.idealDiode[3].useHeatPort
inverter2.diode_p.idealDiode[3].T
inverter2.diode_p.idealDiode[3].LossPower
inverter2.diode_p.idealDiode[3].off
inverter2.diode_p.idealDiode[3].s
inverter2.diode_p.idealDiode[3].unitVoltage
inverter2.diode_p.idealDiode[3].unitCurrent
inverter2.star_p.m
inverter2.star_p.plug_p.m
inverter2.star_p.plug_p.pin[1].i
inverter2.star_p.plug_p.pin[2].i
inverter2.star_p.plug_p.pin[3].i
inverter2.transistor_n.m
inverter2.transistor_n.v[1]
inverter2.transistor_n.v[2]
inverter2.transistor_n.v[3]
inverter2.transistor_n.i[1]
inverter2.transistor_n.i[2]
inverter2.transistor_n.i[3]
inverter2.transistor_n.plug_p.m
inverter2.transistor_n.plug_n.m
inverter2.transistor_n.Ron[1]
inverter2.transistor_n.Ron[2]
inverter2.transistor_n.Ron[3]
inverter2.transistor_n.Goff[1]
inverter2.transistor_n.Goff[2]
inverter2.transistor_n.Goff[3]
inverter2.transistor_n.Vknee[1]
inverter2.transistor_n.Vknee[2]
inverter2.transistor_n.Vknee[3]
inverter2.transistor_n.mh
inverter2.transistor_n.useHeatPort
inverter2.transistor_n.T[1]
inverter2.transistor_n.T[2]
inverter2.transistor_n.T[3]
inverter2.transistor_n.fire[1]
inverter2.transistor_n.fire[2]
inverter2.transistor_n.fire[3]
inverter2.transistor_n.idealGTOThyristor[1].v
inverter2.transistor_n.idealGTOThyristor[1].Ron
inverter2.transistor_n.idealGTOThyristor[1].Goff
inverter2.transistor_n.idealGTOThyristor[1].Vknee
inverter2.transistor_n.idealGTOThyristor[1].useHeatPort
inverter2.transistor_n.idealGTOThyristor[1].T
inverter2.transistor_n.idealGTOThyristor[1].LossPower
inverter2.transistor_n.idealGTOThyristor[1].off
inverter2.transistor_n.idealGTOThyristor[1].s
inverter2.transistor_n.idealGTOThyristor[1].unitVoltage
inverter2.transistor_n.idealGTOThyristor[1].unitCurrent
inverter2.transistor_n.idealGTOThyristor[2].v
inverter2.transistor_n.idealGTOThyristor[2].Ron
inverter2.transistor_n.idealGTOThyristor[2].Goff
inverter2.transistor_n.idealGTOThyristor[2].Vknee
inverter2.transistor_n.idealGTOThyristor[2].useHeatPort
inverter2.transistor_n.idealGTOThyristor[2].T
inverter2.transistor_n.idealGTOThyristor[2].LossPower
inverter2.transistor_n.idealGTOThyristor[2].off
inverter2.transistor_n.idealGTOThyristor[2].s
inverter2.transistor_n.idealGTOThyristor[2].unitVoltage
inverter2.transistor_n.idealGTOThyristor[2].unitCurrent
inverter2.transistor_n.idealGTOThyristor[3].v
inverter2.transistor_n.idealGTOThyristor[3].Ron
inverter2.transistor_n.idealGTOThyristor[3].Goff
inverter2.transistor_n.idealGTOThyristor[3].Vknee
inverter2.transistor_n.idealGTOThyristor[3].useHeatPort
inverter2.transistor_n.idealGTOThyristor[3].T
inverter2.transistor_n.idealGTOThyristor[3].LossPower
inverter2.transistor_n.idealGTOThyristor[3].off
inverter2.transistor_n.idealGTOThyristor[3].s
inverter2.transistor_n.idealGTOThyristor[3].unitVoltage
inverter2.transistor_n.idealGTOThyristor[3].unitCurrent
inverter2.diode_n.m
inverter2.diode_n.v[1]
inverter2.diode_n.v[2]
inverter2.diode_n.v[3]
inverter2.diode_n.i[1]
inverter2.diode_n.i[2]
inverter2.diode_n.i[3]
inverter2.diode_n.plug_p.m
inverter2.diode_n.plug_n.m
inverter2.diode_n.Ron[1]
inverter2.diode_n.Ron[2]
inverter2.diode_n.Ron[3]
inverter2.diode_n.Goff[1]
inverter2.diode_n.Goff[2]
inverter2.diode_n.Goff[3]
inverter2.diode_n.Vknee[1]
inverter2.diode_n.Vknee[2]
inverter2.diode_n.Vknee[3]
inverter2.diode_n.mh
inverter2.diode_n.useHeatPort
inverter2.diode_n.T[1]
inverter2.diode_n.T[2]
inverter2.diode_n.T[3]
inverter2.diode_n.idealDiode[1].v
inverter2.diode_n.idealDiode[1].Ron
inverter2.diode_n.idealDiode[1].Goff
inverter2.diode_n.idealDiode[1].Vknee
inverter2.diode_n.idealDiode[1].useHeatPort
inverter2.diode_n.idealDiode[1].T
inverter2.diode_n.idealDiode[1].LossPower
inverter2.diode_n.idealDiode[1].off
inverter2.diode_n.idealDiode[1].s
inverter2.diode_n.idealDiode[1].unitVoltage
inverter2.diode_n.idealDiode[1].unitCurrent
inverter2.diode_n.idealDiode[2].v
inverter2.diode_n.idealDiode[2].Ron
inverter2.diode_n.idealDiode[2].Goff
inverter2.diode_n.idealDiode[2].Vknee
inverter2.diode_n.idealDiode[2].useHeatPort
inverter2.diode_n.idealDiode[2].T
inverter2.diode_n.idealDiode[2].LossPower
inverter2.diode_n.idealDiode[2].off
inverter2.diode_n.idealDiode[2].s
inverter2.diode_n.idealDiode[2].unitVoltage
inverter2.diode_n.idealDiode[2].unitCurrent
inverter2.diode_n.idealDiode[3].v
inverter2.diode_n.idealDiode[3].Ron
inverter2.diode_n.idealDiode[3].Goff
inverter2.diode_n.idealDiode[3].Vknee
inverter2.diode_n.idealDiode[3].useHeatPort
inverter2.diode_n.idealDiode[3].T
inverter2.diode_n.idealDiode[3].LossPower
inverter2.diode_n.idealDiode[3].off
inverter2.diode_n.idealDiode[3].s
inverter2.diode_n.idealDiode[3].unitVoltage
inverter2.diode_n.idealDiode[3].unitCurrent
inverter2.star_n.m
inverter2.star_n.plug_p.m
inverter2.star_n.plug_p.pin[1].i
inverter2.star_n.plug_p.pin[2].i
inverter2.star_n.plug_p.pin[3].i
dcdc.RonTransistor
dcdc.GoffTransistor
dcdc.VkneeTransistor
dcdc.RonDiode
dcdc.GoffDiode
dcdc.VkneeDiode
dcdc.vDC1
dcdc.powerDC1
dcdc.dc_p2.v
dcdc.vDC2
dcdc.powerDC2
dcdc.useHeatPort
dcdc.T
dcdc.LossPower
dcdc.T_heatPort
dcdc.useConstantEnable
dcdc.constantEnable
dcdc.m
dcdc.enableLogic.useConstantEnable
dcdc.enableLogic.constantEnable
dcdc.enableLogic.m
dcdc.enableLogic.enableConstantSource.k
dcdc.enableLogic.booleanReplicator.nout
dcdc.andCondition_p.y
dcdc.fire_p
dcdc.transistor.v
dcdc.transistor.i
dcdc.transistor.Ron
dcdc.transistor.Goff
dcdc.transistor.Vknee
dcdc.transistor.useHeatPort
dcdc.transistor.T
dcdc.transistor.LossPower
dcdc.transistor.off
dcdc.transistor.s
dcdc.transistor.unitVoltage
dcdc.transistor.unitCurrent
dcdc.diode.v
dcdc.diode.Ron
dcdc.diode.Goff
dcdc.diode.Vknee
dcdc.diode.useHeatPort
dcdc.diode.T
dcdc.diode.LossPower
dcdc.diode.off
dcdc.diode.s
dcdc.diode.unitVoltage
dcdc.diode.unitCurrent
signalPWM2.useConstantDutyCycle
signalPWM2.constantDutyCycle
signalPWM2.f
signalPWM2.startTime
signalPWM2.notFire
signalPWM2.const.k
signalPWM2.limiter.uMax
signalPWM2.limiter.uMin
signalPWM2.limiter.strict
signalPWM2.limiter.homotopyType
signalPWM2.limiter.limitsAtInit
signalPWM2.limiter.y
signalPWM2.greaterEqual.u1
signalPWM2.greaterEqual.u2
signalPWM2.zeroOrderHold.samplePeriod
signalPWM2.zeroOrderHold.startTime
signalPWM2.zeroOrderHold.sampleTrigger
signalPWM2.zeroOrderHold.firstTrigger
signalPWM2.zeroOrderHold.ySample
signalPWM2.sawtooth.amplitude
signalPWM2.sawtooth.period
signalPWM2.sawtooth.nperiod
signalPWM2.sawtooth.offset
signalPWM2.sawtooth.startTime
signalPWM2.sawtooth.T_start
signalPWM2.sawtooth.count
threePhaseMotor.m
threePhaseMotor.wref
threePhaseMotor.aimc.m
threePhaseMotor.aimc.p
threePhaseMotor.aimc.fsNominal
threePhaseMotor.aimc.TsOperational
threePhaseMotor.aimc.Rs
threePhaseMotor.aimc.TsRef
threePhaseMotor.aimc.alpha20s
threePhaseMotor.aimc.Lszero
threePhaseMotor.aimc.Lssigma
threePhaseMotor.aimc.Jr
threePhaseMotor.aimc.useSupport
threePhaseMotor.aimc.Js
threePhaseMotor.aimc.useThermalPort
threePhaseMotor.aimc.frictionParameters.PRef
threePhaseMotor.aimc.frictionParameters.wRef
threePhaseMotor.aimc.frictionParameters.power_w
threePhaseMotor.aimc.frictionParameters.tauRef
threePhaseMotor.aimc.frictionParameters.linear
threePhaseMotor.aimc.frictionParameters.wLinear
threePhaseMotor.aimc.frictionParameters.tauLinear
threePhaseMotor.aimc.phiMechanical
threePhaseMotor.aimc.tauElectrical
threePhaseMotor.aimc.inertiaRotor.J
threePhaseMotor.aimc.inertiaRotor.stateSelect
threePhaseMotor.aimc.inertiaStator.flange_a.tau
threePhaseMotor.aimc.inertiaStator.flange_b.tau
threePhaseMotor.aimc.inertiaStator.J
threePhaseMotor.aimc.inertiaStator.stateSelect
threePhaseMotor.aimc.inertiaStator.der(phi)
threePhaseMotor.aimc.inertiaStator.w
threePhaseMotor.aimc.inertiaStator.der(w)
threePhaseMotor.aimc.inertiaStator.a
threePhaseMotor.aimc.fixed.phi0
threePhaseMotor.aimc.friction.flange.tau
threePhaseMotor.aimc.friction.support.tau
threePhaseMotor.aimc.friction.phi
threePhaseMotor.aimc.friction.tau
threePhaseMotor.aimc.friction.frictionParameters.PRef
threePhaseMotor.aimc.friction.frictionParameters.wRef
threePhaseMotor.aimc.friction.frictionParameters.power_w
threePhaseMotor.aimc.friction.frictionParameters.tauRef
threePhaseMotor.aimc.friction.frictionParameters.linear
threePhaseMotor.aimc.friction.frictionParameters.wLinear
threePhaseMotor.aimc.friction.frictionParameters.tauLinear
threePhaseMotor.aimc.friction.useHeatPort
threePhaseMotor.aimc.friction.heatPort.T
threePhaseMotor.aimc.friction.heatPort.Q_flow
threePhaseMotor.aimc.friction.lossPower
threePhaseMotor.aimc.internalSupport.tau
threePhaseMotor.aimc.statorCoreParameters.m
threePhaseMotor.aimc.statorCoreParameters.PRef
threePhaseMotor.aimc.statorCoreParameters.VRef
threePhaseMotor.aimc.statorCoreParameters.wRef
threePhaseMotor.aimc.statorCoreParameters.ratioHysteresis
threePhaseMotor.aimc.statorCoreParameters.GcRef
threePhaseMotor.aimc.statorCoreParameters.wMin
threePhaseMotor.aimc.strayLoadParameters.PRef
threePhaseMotor.aimc.strayLoadParameters.IRef
threePhaseMotor.aimc.strayLoadParameters.wRef
threePhaseMotor.aimc.strayLoadParameters.power_w
threePhaseMotor.aimc.strayLoadParameters.tauRef
threePhaseMotor.aimc.powerBalance.powerStator
threePhaseMotor.aimc.powerBalance.powerMechanical
threePhaseMotor.aimc.powerBalance.powerInertiaStator
threePhaseMotor.aimc.powerBalance.powerInertiaRotor
threePhaseMotor.aimc.powerBalance.lossPowerTotal
threePhaseMotor.aimc.powerBalance.lossPowerStatorWinding
threePhaseMotor.aimc.powerBalance.lossPowerStatorCore
threePhaseMotor.aimc.powerBalance.lossPowerRotorCore
threePhaseMotor.aimc.powerBalance.lossPowerStrayLoad
threePhaseMotor.aimc.powerBalance.lossPowerFriction
threePhaseMotor.aimc.powerBalance.lossPowerRotorWinding
threePhaseMotor.aimc.vs[1]
threePhaseMotor.aimc.vs[2]
threePhaseMotor.aimc.vs[3]
threePhaseMotor.aimc.i_0_s
threePhaseMotor.aimc.der(i_0_s)
threePhaseMotor.aimc.idq_sr[1]
threePhaseMotor.aimc.der(idq_sr[1])
threePhaseMotor.aimc.idq_sr[2]
threePhaseMotor.aimc.der(idq_sr[2])
threePhaseMotor.aimc.idq_rs[1]
threePhaseMotor.aimc.idq_rs[2]
threePhaseMotor.aimc.der(idq_rs[1])
threePhaseMotor.aimc.der(idq_rs[2])
threePhaseMotor.aimc.idq_rr[1]
threePhaseMotor.aimc.der(idq_rr[1])
threePhaseMotor.aimc.idq_rr[2]
threePhaseMotor.aimc.der(idq_rr[2])
threePhaseMotor.aimc.plug_sp.m
threePhaseMotor.aimc.plug_sn.m
threePhaseMotor.aimc.plug_sn.pin[1].v
threePhaseMotor.aimc.rs.m
threePhaseMotor.aimc.rs.v[1]
threePhaseMotor.aimc.rs.v[2]
threePhaseMotor.aimc.rs.v[3]
threePhaseMotor.aimc.rs.plug_p.m
threePhaseMotor.aimc.rs.plug_n.m
threePhaseMotor.aimc.rs.plug_n.pin[1].v
threePhaseMotor.aimc.rs.plug_n.pin[2].v
threePhaseMotor.aimc.rs.plug_n.pin[3].v
threePhaseMotor.aimc.rs.R[1]
threePhaseMotor.aimc.rs.R[2]
threePhaseMotor.aimc.rs.R[3]
threePhaseMotor.aimc.rs.T_ref[1]
threePhaseMotor.aimc.rs.T_ref[2]
threePhaseMotor.aimc.rs.T_ref[3]
threePhaseMotor.aimc.rs.alpha[1]
threePhaseMotor.aimc.rs.alpha[2]
threePhaseMotor.aimc.rs.alpha[3]
threePhaseMotor.aimc.rs.mh
threePhaseMotor.aimc.rs.useHeatPort
threePhaseMotor.aimc.rs.T[1]
threePhaseMotor.aimc.rs.T[2]
threePhaseMotor.aimc.rs.T[3]
threePhaseMotor.aimc.rs.resistor[1].R
threePhaseMotor.aimc.rs.resistor[1].T_ref
threePhaseMotor.aimc.rs.resistor[1].alpha
threePhaseMotor.aimc.rs.resistor[1].v
threePhaseMotor.aimc.rs.resistor[1].useHeatPort
threePhaseMotor.aimc.rs.resistor[1].T
threePhaseMotor.aimc.rs.resistor[1].LossPower
threePhaseMotor.aimc.rs.resistor[1].R_actual
threePhaseMotor.aimc.rs.resistor[2].R
threePhaseMotor.aimc.rs.resistor[2].T_ref
threePhaseMotor.aimc.rs.resistor[2].alpha
threePhaseMotor.aimc.rs.resistor[2].v
threePhaseMotor.aimc.rs.resistor[2].useHeatPort
threePhaseMotor.aimc.rs.resistor[2].T
threePhaseMotor.aimc.rs.resistor[2].LossPower
threePhaseMotor.aimc.rs.resistor[2].R_actual
threePhaseMotor.aimc.rs.resistor[3].R
threePhaseMotor.aimc.rs.resistor[3].T_ref
threePhaseMotor.aimc.rs.resistor[3].alpha
threePhaseMotor.aimc.rs.resistor[3].v
threePhaseMotor.aimc.rs.resistor[3].useHeatPort
threePhaseMotor.aimc.rs.resistor[3].T
threePhaseMotor.aimc.rs.resistor[3].LossPower
threePhaseMotor.aimc.rs.resistor[3].R_actual
threePhaseMotor.aimc.lssigma.L[1]
threePhaseMotor.aimc.lssigma.L[2]
threePhaseMotor.aimc.lssigma.v_[1]
threePhaseMotor.aimc.lssigma.v_[2]
threePhaseMotor.aimc.lssigma.i_[1]
threePhaseMotor.aimc.lssigma.i_[2]
threePhaseMotor.aimc.lssigma.der(i_[1])
threePhaseMotor.aimc.lssigma.der(i_[2])
threePhaseMotor.aimc.lssigma.spacePhasor_a.v_[1]
threePhaseMotor.aimc.lssigma.spacePhasor_a.v_[2]
threePhaseMotor.aimc.lszero.v
threePhaseMotor.aimc.lszero.i
threePhaseMotor.aimc.lszero.der(i)
threePhaseMotor.aimc.lszero.p.v
threePhaseMotor.aimc.lszero.p.i
threePhaseMotor.aimc.lszero.n.v
threePhaseMotor.aimc.lszero.n.i
threePhaseMotor.aimc.lszero.L
threePhaseMotor.aimc.statorCore.coreParameters.m
threePhaseMotor.aimc.statorCore.coreParameters.PRef
threePhaseMotor.aimc.statorCore.coreParameters.VRef
threePhaseMotor.aimc.statorCore.coreParameters.wRef
threePhaseMotor.aimc.statorCore.coreParameters.ratioHysteresis
threePhaseMotor.aimc.statorCore.coreParameters.GcRef
threePhaseMotor.aimc.statorCore.coreParameters.wMin
threePhaseMotor.aimc.statorCore.m
threePhaseMotor.aimc.statorCore.turnsRatio
threePhaseMotor.aimc.statorCore.useHeatPort
threePhaseMotor.aimc.statorCore.heatPort.T
threePhaseMotor.aimc.statorCore.heatPort.Q_flow
threePhaseMotor.aimc.statorCore.lossPower
threePhaseMotor.aimc.statorCore.spacePhasor.i_[1]
threePhaseMotor.aimc.statorCore.spacePhasor.i_[2]
threePhaseMotor.aimc.statorCore.Gc
threePhaseMotor.aimc.statorCore.wLimit
threePhaseMotor.aimc.spacePhasorS.m
threePhaseMotor.aimc.spacePhasorS.turnsRatio
threePhaseMotor.aimc.spacePhasorS.v[1]
threePhaseMotor.aimc.spacePhasorS.v[2]
threePhaseMotor.aimc.spacePhasorS.v[3]
threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[1, 1]
threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[1, 2]
threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[1, 3]
threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[2, 1]
threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[2, 2]
threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[2, 3]
threePhaseMotor.aimc.spacePhasorS.InverseTransformation[1, 1]
threePhaseMotor.aimc.spacePhasorS.InverseTransformation[1, 2]
threePhaseMotor.aimc.spacePhasorS.InverseTransformation[2, 1]
threePhaseMotor.aimc.spacePhasorS.InverseTransformation[2, 2]
threePhaseMotor.aimc.spacePhasorS.InverseTransformation[3, 1]
threePhaseMotor.aimc.spacePhasorS.InverseTransformation[3, 2]
threePhaseMotor.aimc.spacePhasorS.plug_p.m
threePhaseMotor.aimc.spacePhasorS.plug_n.m
threePhaseMotor.aimc.spacePhasorS.zero.v
threePhaseMotor.aimc.spacePhasorS.zero.i
threePhaseMotor.aimc.spacePhasorS.ground.v
threePhaseMotor.aimc.spacePhasorS.ground.i
threePhaseMotor.aimc.strayLoad.m
threePhaseMotor.aimc.strayLoad.v[1]
threePhaseMotor.aimc.strayLoad.v[2]
threePhaseMotor.aimc.strayLoad.v[3]
threePhaseMotor.aimc.strayLoad.plug_p.m
threePhaseMotor.aimc.strayLoad.plug_n.m
threePhaseMotor.aimc.strayLoad.flange.tau
threePhaseMotor.aimc.strayLoad.support.tau
threePhaseMotor.aimc.strayLoad.phi
threePhaseMotor.aimc.strayLoad.tau
threePhaseMotor.aimc.strayLoad.strayLoadParameters.PRef
threePhaseMotor.aimc.strayLoad.strayLoadParameters.IRef
threePhaseMotor.aimc.strayLoad.strayLoadParameters.wRef
threePhaseMotor.aimc.strayLoad.strayLoadParameters.power_w
threePhaseMotor.aimc.strayLoad.strayLoadParameters.tauRef
threePhaseMotor.aimc.strayLoad.useHeatPort
threePhaseMotor.aimc.strayLoad.heatPort.T
threePhaseMotor.aimc.strayLoad.heatPort.Q_flow
threePhaseMotor.aimc.strayLoad.lossPower
threePhaseMotor.aimc.strayLoad.iRMS
threePhaseMotor.aimc.thermalAmbient.m
threePhaseMotor.aimc.thermalAmbient.useTemperatureInputs
threePhaseMotor.aimc.thermalAmbient.TDefault
threePhaseMotor.aimc.thermalAmbient.Ts
threePhaseMotor.aimc.thermalAmbient.Q_flowStatorWinding
threePhaseMotor.aimc.thermalAmbient.Q_flowStatorCore
threePhaseMotor.aimc.thermalAmbient.Q_flowRotorCore
threePhaseMotor.aimc.thermalAmbient.Q_flowStrayLoad
threePhaseMotor.aimc.thermalAmbient.Q_flowFriction
threePhaseMotor.aimc.thermalAmbient.thermalPort.m
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStatorCore.T
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortRotorCore.T
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.T
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortFriction.T
threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortFriction.Q_flow
threePhaseMotor.aimc.thermalAmbient.temperatureStatorCore.T
threePhaseMotor.aimc.thermalAmbient.temperatureStatorCore.port.T
threePhaseMotor.aimc.thermalAmbient.temperatureStatorCore.port.Q_flow
threePhaseMotor.aimc.thermalAmbient.temperatureRotorCore.T
threePhaseMotor.aimc.thermalAmbient.temperatureRotorCore.port.T
threePhaseMotor.aimc.thermalAmbient.temperatureRotorCore.port.Q_flow
threePhaseMotor.aimc.thermalAmbient.temperatureStrayLoad.T
threePhaseMotor.aimc.thermalAmbient.temperatureStrayLoad.port.T
threePhaseMotor.aimc.thermalAmbient.temperatureStrayLoad.port.Q_flow
threePhaseMotor.aimc.thermalAmbient.temperatureFriction.T
threePhaseMotor.aimc.thermalAmbient.temperatureFriction.port.T
threePhaseMotor.aimc.thermalAmbient.temperatureFriction.port.Q_flow
threePhaseMotor.aimc.thermalAmbient.constTs.k
threePhaseMotor.aimc.thermalAmbient.thermalCollectorStator.m
threePhaseMotor.aimc.thermalAmbient.Tr
threePhaseMotor.aimc.thermalAmbient.Q_flowTotal
threePhaseMotor.aimc.thermalAmbient.constTr.k
threePhaseMotor.aimc.pi
threePhaseMotor.aimc.internalThermalPort.m
threePhaseMotor.aimc.internalThermalPort.heatPortStatorWinding[1].Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortStatorWinding[2].Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortStatorWinding[3].Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortStatorCore.T
threePhaseMotor.aimc.internalThermalPort.heatPortStatorCore.Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortRotorCore.T
threePhaseMotor.aimc.internalThermalPort.heatPortRotorCore.Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortStrayLoad.T
threePhaseMotor.aimc.internalThermalPort.heatPortStrayLoad.Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortFriction.T
threePhaseMotor.aimc.internalThermalPort.heatPortFriction.Q_flow
threePhaseMotor.aimc.internalThermalPort.heatPortRotorWinding.Q_flow
threePhaseMotor.aimc.airGapS.Lm
threePhaseMotor.aimc.airGapS.m
threePhaseMotor.aimc.airGapS.p
threePhaseMotor.aimc.airGapS.gamma
threePhaseMotor.aimc.airGapS.der(gamma)
threePhaseMotor.aimc.airGapS.psi_ms[1]
threePhaseMotor.aimc.airGapS.psi_ms[2]
threePhaseMotor.aimc.airGapS.der(psi_ms[1])
threePhaseMotor.aimc.airGapS.der(psi_ms[2])
threePhaseMotor.aimc.airGapS.psi_mr[1]
threePhaseMotor.aimc.airGapS.psi_mr[2]
threePhaseMotor.aimc.airGapS.der(psi_mr[1])
threePhaseMotor.aimc.airGapS.der(psi_mr[2])
threePhaseMotor.aimc.airGapS.RotationMatrix[1, 1]
threePhaseMotor.aimc.airGapS.RotationMatrix[1, 2]
threePhaseMotor.aimc.airGapS.RotationMatrix[2, 1]
threePhaseMotor.aimc.airGapS.RotationMatrix[2, 2]
threePhaseMotor.aimc.airGapS.der(RotationMatrix[1, 1])
threePhaseMotor.aimc.airGapS.der(RotationMatrix[1, 2])
threePhaseMotor.aimc.airGapS.der(RotationMatrix[2, 1])
threePhaseMotor.aimc.airGapS.der(RotationMatrix[2, 2])
threePhaseMotor.aimc.airGapS.i_ms[1]
threePhaseMotor.aimc.airGapS.i_ms[2]
threePhaseMotor.aimc.airGapS.der(i_ms[1])
threePhaseMotor.aimc.airGapS.der(i_ms[2])
threePhaseMotor.aimc.airGapS.L[1, 1]
threePhaseMotor.aimc.airGapS.L[1, 2]
threePhaseMotor.aimc.airGapS.L[2, 1]
threePhaseMotor.aimc.airGapS.L[2, 2]
threePhaseMotor.aimc.Lm
threePhaseMotor.aimc.Lrsigma
threePhaseMotor.aimc.Rr
threePhaseMotor.aimc.TrRef
threePhaseMotor.aimc.alpha20r
threePhaseMotor.aimc.TrOperational
threePhaseMotor.aimc.squirrelCageR.Lrsigma
threePhaseMotor.aimc.squirrelCageR.Rr
threePhaseMotor.aimc.squirrelCageR.T_ref
threePhaseMotor.aimc.squirrelCageR.alpha
threePhaseMotor.aimc.squirrelCageR.useHeatPort
threePhaseMotor.aimc.squirrelCageR.T
threePhaseMotor.aimc.squirrelCageR.Rr_actual
threePhaseMotor.terminalBox.m
threePhaseMotor.terminalBox.plug_sp.m
threePhaseMotor.terminalBox.plug_sn.m
threePhaseMotor.terminalBox.star.m
threePhaseMotor.terminalBox.star.plug_p.m
threePhaseMotor.terminalBox.star.pin_n.i
threePhaseMotor.terminalBox.plugSupply.m
threePhaseMotor.terminalBox.starpoint.i
threePhaseMotor.flange1.tau
threePhaseMotor.aimcData.m
threePhaseMotor.aimcData.Jr
threePhaseMotor.aimcData.Js
threePhaseMotor.aimcData.p
threePhaseMotor.aimcData.fsNominal
threePhaseMotor.aimcData.Rs
threePhaseMotor.aimcData.TsRef
threePhaseMotor.aimcData.alpha20s
threePhaseMotor.aimcData.effectiveStatorTurns
threePhaseMotor.aimcData.Lszero
threePhaseMotor.aimcData.Lssigma
threePhaseMotor.aimcData.frictionParameters.PRef
threePhaseMotor.aimcData.frictionParameters.wRef
threePhaseMotor.aimcData.frictionParameters.power_w
threePhaseMotor.aimcData.frictionParameters.tauRef
threePhaseMotor.aimcData.frictionParameters.linear
threePhaseMotor.aimcData.frictionParameters.wLinear
threePhaseMotor.aimcData.frictionParameters.tauLinear
threePhaseMotor.aimcData.statorCoreParameters.m
threePhaseMotor.aimcData.statorCoreParameters.PRef
threePhaseMotor.aimcData.statorCoreParameters.VRef
threePhaseMotor.aimcData.statorCoreParameters.wRef
threePhaseMotor.aimcData.statorCoreParameters.ratioHysteresis
threePhaseMotor.aimcData.statorCoreParameters.GcRef
threePhaseMotor.aimcData.statorCoreParameters.wMin
threePhaseMotor.aimcData.strayLoadParameters.PRef
threePhaseMotor.aimcData.strayLoadParameters.IRef
threePhaseMotor.aimcData.strayLoadParameters.wRef
threePhaseMotor.aimcData.strayLoadParameters.power_w
threePhaseMotor.aimcData.strayLoadParameters.tauRef
threePhaseMotor.aimcData.Lm
threePhaseMotor.aimcData.Lrsigma
threePhaseMotor.aimcData.Rr
threePhaseMotor.aimcData.TrRef
threePhaseMotor.aimcData.alpha20r
threePhaseMotor.plug_p1.m
threePhaseMotor.rpm
signalPWM[1].useConstantDutyCycle
signalPWM[1].constantDutyCycle
signalPWM[1].f
signalPWM[1].startTime
signalPWM[1].limiter.uMax
signalPWM[1].limiter.uMin
signalPWM[1].limiter.strict
signalPWM[1].limiter.homotopyType
signalPWM[1].limiter.limitsAtInit
signalPWM[1].limiter.y
signalPWM[1].greaterEqual.u1
signalPWM[1].greaterEqual.u2
signalPWM[1].zeroOrderHold.samplePeriod
signalPWM[1].zeroOrderHold.startTime
signalPWM[1].zeroOrderHold.sampleTrigger
signalPWM[1].zeroOrderHold.firstTrigger
signalPWM[1].zeroOrderHold.ySample
signalPWM[1].sawtooth.amplitude
signalPWM[1].sawtooth.period
signalPWM[1].sawtooth.nperiod
signalPWM[1].sawtooth.offset
signalPWM[1].sawtooth.startTime
signalPWM[1].sawtooth.T_start
signalPWM[1].sawtooth.count
signalPWM[2].useConstantDutyCycle
signalPWM[2].constantDutyCycle
signalPWM[2].f
signalPWM[2].startTime
signalPWM[2].limiter.uMax
signalPWM[2].limiter.uMin
signalPWM[2].limiter.strict
signalPWM[2].limiter.homotopyType
signalPWM[2].limiter.limitsAtInit
signalPWM[2].limiter.y
signalPWM[2].greaterEqual.u1
signalPWM[2].greaterEqual.u2
signalPWM[2].zeroOrderHold.samplePeriod
signalPWM[2].zeroOrderHold.startTime
signalPWM[2].zeroOrderHold.sampleTrigger
signalPWM[2].zeroOrderHold.firstTrigger
signalPWM[2].zeroOrderHold.ySample
signalPWM[2].sawtooth.amplitude
signalPWM[2].sawtooth.period
signalPWM[2].sawtooth.nperiod
signalPWM[2].sawtooth.offset
signalPWM[2].sawtooth.startTime
signalPWM[2].sawtooth.T_start
signalPWM[2].sawtooth.count
signalPWM[3].useConstantDutyCycle
signalPWM[3].constantDutyCycle
signalPWM[3].f
signalPWM[3].startTime
signalPWM[3].limiter.uMax
signalPWM[3].limiter.uMin
signalPWM[3].limiter.strict
signalPWM[3].limiter.homotopyType
signalPWM[3].limiter.limitsAtInit
signalPWM[3].limiter.y
signalPWM[3].greaterEqual.u1
signalPWM[3].greaterEqual.u2
signalPWM[3].zeroOrderHold.samplePeriod
signalPWM[3].zeroOrderHold.startTime
signalPWM[3].zeroOrderHold.sampleTrigger
signalPWM[3].zeroOrderHold.firstTrigger
signalPWM[3].zeroOrderHold.ySample
signalPWM[3].sawtooth.amplitude
signalPWM[3].sawtooth.period
signalPWM[3].sawtooth.nperiod
signalPWM[3].sawtooth.offset
signalPWM[3].sawtooth.startTime
signalPWM[3].sawtooth.T_start
signalPWM[3].sawtooth.count
variableSpeedDrive_ThreePhase.speedSensor.flange.phi
variableSpeedDrive_ThreePhase.speedSensor.flange.der(phi)
variableSpeedDrive_ThreePhase.speedSensor.flange.tau
variableSpeedDrive_ThreePhase.currentController.k
variableSpeedDrive_ThreePhase.currentController.T
variableSpeedDrive_ThreePhase.currentController.initType
variableSpeedDrive_ThreePhase.currentController.x_start
variableSpeedDrive_ThreePhase.currentController.y_start
variableSpeedDrive_ThreePhase.currentController.u
variableSpeedDrive_ThreePhase.currentController.x
variableSpeedDrive_ThreePhase.currentController.der(x)
variableSpeedDrive_ThreePhase.flange1.tau
variableSpeedDrive_ThreePhase.y1[1]
variableSpeedDrive_ThreePhase.const.k
variableSpeedDrive_ThreePhase.wref
variableSpeedDrive_ThreePhase.T
variableSpeedDrive_ThreePhase.k
fan.inertia.flange_b.tau
fan.inertia.J
fan.inertia.stateSelect
fan.inertia.w
fan.inertia.der(w)
fan.J
fan.deltaPhi
inverter1.useConstantEnable
inverter1.constantEnable
inverter1.m
inverter1.fire_p[1]
inverter1.fire_p[2]
inverter1.fire_p[3]
inverter1.enableLogic.useConstantEnable
inverter1.enableLogic.constantEnable
inverter1.enableLogic.m
inverter1.enableLogic.enableConstantSource.k
inverter1.enableLogic.booleanReplicator.nout
inverter1.fire_n[1]
inverter1.fire_n[2]
inverter1.fire_n[3]
inverter1.RonTransistor
inverter1.GoffTransistor
inverter1.VkneeTransistor
inverter1.RonDiode
inverter1.GoffDiode
inverter1.VkneeDiode
inverter1.dc_p.v
inverter1.dc_n.v
inverter1.vDC
inverter1.powerDC
inverter1.ac.m
inverter1.ac.pin[1].v
inverter1.ac.pin[1].i
inverter1.ac.pin[2].v
inverter1.ac.pin[2].i
inverter1.ac.pin[3].v
inverter1.ac.pin[3].i
inverter1.powerAC[1]
inverter1.powerAC[2]
inverter1.powerAC[3]
inverter1.powerTotalAC
inverter1.useHeatPort
inverter1.T
inverter1.LossPower
inverter1.T_heatPort
inverter1.transistor_p.m
inverter1.transistor_p.v[1]
inverter1.transistor_p.v[2]
inverter1.transistor_p.v[3]
inverter1.transistor_p.i[1]
inverter1.transistor_p.i[2]
inverter1.transistor_p.i[3]
inverter1.transistor_p.plug_p.m
inverter1.transistor_p.plug_n.m
inverter1.transistor_p.Ron[1]
inverter1.transistor_p.Ron[2]
inverter1.transistor_p.Ron[3]
inverter1.transistor_p.Goff[1]
inverter1.transistor_p.Goff[2]
inverter1.transistor_p.Goff[3]
inverter1.transistor_p.Vknee[1]
inverter1.transistor_p.Vknee[2]
inverter1.transistor_p.Vknee[3]
inverter1.transistor_p.mh
inverter1.transistor_p.useHeatPort
inverter1.transistor_p.T[1]
inverter1.transistor_p.T[2]
inverter1.transistor_p.T[3]
inverter1.transistor_p.fire[1]
inverter1.transistor_p.fire[2]
inverter1.transistor_p.fire[3]
inverter1.transistor_p.idealGTOThyristor[1].v
inverter1.transistor_p.idealGTOThyristor[1].Ron
inverter1.transistor_p.idealGTOThyristor[1].Goff
inverter1.transistor_p.idealGTOThyristor[1].Vknee
inverter1.transistor_p.idealGTOThyristor[1].useHeatPort
inverter1.transistor_p.idealGTOThyristor[1].T
inverter1.transistor_p.idealGTOThyristor[1].LossPower
inverter1.transistor_p.idealGTOThyristor[1].off
inverter1.transistor_p.idealGTOThyristor[1].s
inverter1.transistor_p.idealGTOThyristor[1].unitVoltage
inverter1.transistor_p.idealGTOThyristor[1].unitCurrent
inverter1.transistor_p.idealGTOThyristor[2].v
inverter1.transistor_p.idealGTOThyristor[2].Ron
inverter1.transistor_p.idealGTOThyristor[2].Goff
inverter1.transistor_p.idealGTOThyristor[2].Vknee
inverter1.transistor_p.idealGTOThyristor[2].useHeatPort
inverter1.transistor_p.idealGTOThyristor[2].T
inverter1.transistor_p.idealGTOThyristor[2].LossPower
inverter1.transistor_p.idealGTOThyristor[2].off
inverter1.transistor_p.idealGTOThyristor[2].s
inverter1.transistor_p.idealGTOThyristor[2].unitVoltage
inverter1.transistor_p.idealGTOThyristor[2].unitCurrent
inverter1.transistor_p.idealGTOThyristor[3].v
inverter1.transistor_p.idealGTOThyristor[3].Ron
inverter1.transistor_p.idealGTOThyristor[3].Goff
inverter1.transistor_p.idealGTOThyristor[3].Vknee
inverter1.transistor_p.idealGTOThyristor[3].useHeatPort
inverter1.transistor_p.idealGTOThyristor[3].T
inverter1.transistor_p.idealGTOThyristor[3].LossPower
inverter1.transistor_p.idealGTOThyristor[3].off
inverter1.transistor_p.idealGTOThyristor[3].s
inverter1.transistor_p.idealGTOThyristor[3].unitVoltage
inverter1.transistor_p.idealGTOThyristor[3].unitCurrent
inverter1.diode_p.m
inverter1.diode_p.v[1]
inverter1.diode_p.v[2]
inverter1.diode_p.v[3]
inverter1.diode_p.i[1]
inverter1.diode_p.i[2]
inverter1.diode_p.i[3]
inverter1.diode_p.plug_p.m
inverter1.diode_p.plug_n.m
inverter1.diode_p.Ron[1]
inverter1.diode_p.Ron[2]
inverter1.diode_p.Ron[3]
inverter1.diode_p.Goff[1]
inverter1.diode_p.Goff[2]
inverter1.diode_p.Goff[3]
inverter1.diode_p.Vknee[1]
inverter1.diode_p.Vknee[2]
inverter1.diode_p.Vknee[3]
inverter1.diode_p.mh
inverter1.diode_p.useHeatPort
inverter1.diode_p.T[1]
inverter1.diode_p.T[2]
inverter1.diode_p.T[3]
inverter1.diode_p.idealDiode[1].v
inverter1.diode_p.idealDiode[1].Ron
inverter1.diode_p.idealDiode[1].Goff
inverter1.diode_p.idealDiode[1].Vknee
inverter1.diode_p.idealDiode[1].useHeatPort
inverter1.diode_p.idealDiode[1].T
inverter1.diode_p.idealDiode[1].LossPower
inverter1.diode_p.idealDiode[1].off
inverter1.diode_p.idealDiode[1].s
inverter1.diode_p.idealDiode[1].unitVoltage
inverter1.diode_p.idealDiode[1].unitCurrent
inverter1.diode_p.idealDiode[2].v
inverter1.diode_p.idealDiode[2].Ron
inverter1.diode_p.idealDiode[2].Goff
inverter1.diode_p.idealDiode[2].Vknee
inverter1.diode_p.idealDiode[2].useHeatPort
inverter1.diode_p.idealDiode[2].T
inverter1.diode_p.idealDiode[2].LossPower
inverter1.diode_p.idealDiode[2].off
inverter1.diode_p.idealDiode[2].s
inverter1.diode_p.idealDiode[2].unitVoltage
inverter1.diode_p.idealDiode[2].unitCurrent
inverter1.diode_p.idealDiode[3].v
inverter1.diode_p.idealDiode[3].Ron
inverter1.diode_p.idealDiode[3].Goff
inverter1.diode_p.idealDiode[3].Vknee
inverter1.diode_p.idealDiode[3].useHeatPort
inverter1.diode_p.idealDiode[3].T
inverter1.diode_p.idealDiode[3].LossPower
inverter1.diode_p.idealDiode[3].off
inverter1.diode_p.idealDiode[3].s
inverter1.diode_p.idealDiode[3].unitVoltage
inverter1.diode_p.idealDiode[3].unitCurrent
inverter1.star_p.m
inverter1.star_p.plug_p.m
inverter1.star_p.plug_p.pin[1].i
inverter1.star_p.plug_p.pin[2].i
inverter1.star_p.plug_p.pin[3].i
inverter1.transistor_n.m
inverter1.transistor_n.v[1]
inverter1.transistor_n.v[2]
inverter1.transistor_n.v[3]
inverter1.transistor_n.i[1]
inverter1.transistor_n.i[2]
inverter1.transistor_n.i[3]
inverter1.transistor_n.plug_p.m
inverter1.transistor_n.plug_n.m
inverter1.transistor_n.Ron[1]
inverter1.transistor_n.Ron[2]
inverter1.transistor_n.Ron[3]
inverter1.transistor_n.Goff[1]
inverter1.transistor_n.Goff[2]
inverter1.transistor_n.Goff[3]
inverter1.transistor_n.Vknee[1]
inverter1.transistor_n.Vknee[2]
inverter1.transistor_n.Vknee[3]
inverter1.transistor_n.mh
inverter1.transistor_n.useHeatPort
inverter1.transistor_n.T[1]
inverter1.transistor_n.T[2]
inverter1.transistor_n.T[3]
inverter1.transistor_n.fire[1]
inverter1.transistor_n.fire[2]
inverter1.transistor_n.fire[3]
inverter1.transistor_n.idealGTOThyristor[1].v
inverter1.transistor_n.idealGTOThyristor[1].Ron
inverter1.transistor_n.idealGTOThyristor[1].Goff
inverter1.transistor_n.idealGTOThyristor[1].Vknee
inverter1.transistor_n.idealGTOThyristor[1].useHeatPort
inverter1.transistor_n.idealGTOThyristor[1].T
inverter1.transistor_n.idealGTOThyristor[1].LossPower
inverter1.transistor_n.idealGTOThyristor[1].off
inverter1.transistor_n.idealGTOThyristor[1].s
inverter1.transistor_n.idealGTOThyristor[1].unitVoltage
inverter1.transistor_n.idealGTOThyristor[1].unitCurrent
inverter1.transistor_n.idealGTOThyristor[2].v
inverter1.transistor_n.idealGTOThyristor[2].Ron
inverter1.transistor_n.idealGTOThyristor[2].Goff
inverter1.transistor_n.idealGTOThyristor[2].Vknee
inverter1.transistor_n.idealGTOThyristor[2].useHeatPort
inverter1.transistor_n.idealGTOThyristor[2].T
inverter1.transistor_n.idealGTOThyristor[2].LossPower
inverter1.transistor_n.idealGTOThyristor[2].off
inverter1.transistor_n.idealGTOThyristor[2].s
inverter1.transistor_n.idealGTOThyristor[2].unitVoltage
inverter1.transistor_n.idealGTOThyristor[2].unitCurrent
inverter1.transistor_n.idealGTOThyristor[3].v
inverter1.transistor_n.idealGTOThyristor[3].Ron
inverter1.transistor_n.idealGTOThyristor[3].Goff
inverter1.transistor_n.idealGTOThyristor[3].Vknee
inverter1.transistor_n.idealGTOThyristor[3].useHeatPort
inverter1.transistor_n.idealGTOThyristor[3].T
inverter1.transistor_n.idealGTOThyristor[3].LossPower
inverter1.transistor_n.idealGTOThyristor[3].off
inverter1.transistor_n.idealGTOThyristor[3].s
inverter1.transistor_n.idealGTOThyristor[3].unitVoltage
inverter1.transistor_n.idealGTOThyristor[3].unitCurrent
inverter1.diode_n.m
inverter1.diode_n.v[1]
inverter1.diode_n.v[2]
inverter1.diode_n.v[3]
inverter1.diode_n.i[1]
inverter1.diode_n.i[2]
inverter1.diode_n.i[3]
inverter1.diode_n.plug_p.m
inverter1.diode_n.plug_n.m
inverter1.diode_n.Ron[1]
inverter1.diode_n.Ron[2]
inverter1.diode_n.Ron[3]
inverter1.diode_n.Goff[1]
inverter1.diode_n.Goff[2]
inverter1.diode_n.Goff[3]
inverter1.diode_n.Vknee[1]
inverter1.diode_n.Vknee[2]
inverter1.diode_n.Vknee[3]
inverter1.diode_n.mh
inverter1.diode_n.useHeatPort
inverter1.diode_n.T[1]
inverter1.diode_n.T[2]
inverter1.diode_n.T[3]
inverter1.diode_n.idealDiode[1].v
inverter1.diode_n.idealDiode[1].Ron
inverter1.diode_n.idealDiode[1].Goff
inverter1.diode_n.idealDiode[1].Vknee
inverter1.diode_n.idealDiode[1].useHeatPort
inverter1.diode_n.idealDiode[1].T
inverter1.diode_n.idealDiode[1].LossPower
inverter1.diode_n.idealDiode[1].off
inverter1.diode_n.idealDiode[1].s
inverter1.diode_n.idealDiode[1].unitVoltage
inverter1.diode_n.idealDiode[1].unitCurrent
inverter1.diode_n.idealDiode[2].v
inverter1.diode_n.idealDiode[2].Ron
inverter1.diode_n.idealDiode[2].Goff
inverter1.diode_n.idealDiode[2].Vknee
inverter1.diode_n.idealDiode[2].useHeatPort
inverter1.diode_n.idealDiode[2].T
inverter1.diode_n.idealDiode[2].LossPower
inverter1.diode_n.idealDiode[2].off
inverter1.diode_n.idealDiode[2].s
inverter1.diode_n.idealDiode[2].unitVoltage
inverter1.diode_n.idealDiode[2].unitCurrent
inverter1.diode_n.idealDiode[3].v
inverter1.diode_n.idealDiode[3].Ron
inverter1.diode_n.idealDiode[3].Goff
inverter1.diode_n.idealDiode[3].Vknee
inverter1.diode_n.idealDiode[3].useHeatPort
inverter1.diode_n.idealDiode[3].T
inverter1.diode_n.idealDiode[3].LossPower
inverter1.diode_n.idealDiode[3].off
inverter1.diode_n.idealDiode[3].s
inverter1.diode_n.idealDiode[3].unitVoltage
inverter1.diode_n.idealDiode[3].unitCurrent
inverter1.star_n.m
inverter1.star_n.plug_p.m
inverter1.star_n.plug_p.pin[1].i
inverter1.star_n.plug_p.pin[2].i
inverter1.star_n.plug_p.pin[3].i
dcdc1.RonTransistor
dcdc1.GoffTransistor
dcdc1.VkneeTransistor
dcdc1.RonDiode
dcdc1.GoffDiode
dcdc1.VkneeDiode
dcdc1.dc_p1.v
dcdc1.dc_p1.i
dcdc1.dc_n1.v
dcdc1.dc_n1.i
dcdc1.iDC1
dcdc1.powerDC1
dcdc1.dc_p2.v
dcdc1.dc_n2.v
dcdc1.powerDC2
dcdc1.useHeatPort
dcdc1.T
dcdc1.LossPower
dcdc1.T_heatPort
dcdc1.useConstantEnable
dcdc1.constantEnable
dcdc1.m
dcdc1.enableLogic.useConstantEnable
dcdc1.enableLogic.constantEnable
dcdc1.enableLogic.m
dcdc1.enableLogic.enableConstantSource.k
dcdc1.enableLogic.booleanReplicator.nout
dcdc1.andCondition_p.y
dcdc1.fire_p
dcdc1.transistor.n.v
dcdc1.transistor.Ron
dcdc1.transistor.Goff
dcdc1.transistor.Vknee
dcdc1.transistor.useHeatPort
dcdc1.transistor.T
dcdc1.transistor.LossPower
dcdc1.transistor.off
dcdc1.transistor.s
dcdc1.transistor.unitVoltage
dcdc1.transistor.unitCurrent
dcdc1.diode.v
dcdc1.diode.Ron
dcdc1.diode.Goff
dcdc1.diode.Vknee
dcdc1.diode.useHeatPort
dcdc1.diode.T
dcdc1.diode.LossPower
dcdc1.diode.off
dcdc1.diode.s
dcdc1.diode.unitVoltage
dcdc1.diode.unitCurrent
signalPWM1.useConstantDutyCycle
signalPWM1.constantDutyCycle
signalPWM1.f
signalPWM1.startTime
signalPWM1.notFire
signalPWM1.const.k
signalPWM1.limiter.uMax
signalPWM1.limiter.uMin
signalPWM1.limiter.strict
signalPWM1.limiter.homotopyType
signalPWM1.limiter.limitsAtInit
signalPWM1.limiter.y
signalPWM1.greaterEqual.u1
signalPWM1.greaterEqual.u2
signalPWM1.zeroOrderHold.samplePeriod
signalPWM1.zeroOrderHold.startTime
signalPWM1.zeroOrderHold.sampleTrigger
signalPWM1.zeroOrderHold.firstTrigger
signalPWM1.zeroOrderHold.ySample
signalPWM1.sawtooth.amplitude
signalPWM1.sawtooth.period
signalPWM1.sawtooth.nperiod
signalPWM1.sawtooth.offset
signalPWM1.sawtooth.startTime
signalPWM1.sawtooth.T_start
signalPWM1.sawtooth.count
threePhaseMotor1.m
threePhaseMotor1.wref
threePhaseMotor1.aimc.m
threePhaseMotor1.aimc.p
threePhaseMotor1.aimc.fsNominal
threePhaseMotor1.aimc.TsOperational
threePhaseMotor1.aimc.Rs
threePhaseMotor1.aimc.TsRef
threePhaseMotor1.aimc.alpha20s
threePhaseMotor1.aimc.Lszero
threePhaseMotor1.aimc.Lssigma
threePhaseMotor1.aimc.Jr
threePhaseMotor1.aimc.useSupport
threePhaseMotor1.aimc.Js
threePhaseMotor1.aimc.useThermalPort
threePhaseMotor1.aimc.frictionParameters.PRef
threePhaseMotor1.aimc.frictionParameters.wRef
threePhaseMotor1.aimc.frictionParameters.power_w
threePhaseMotor1.aimc.frictionParameters.tauRef
threePhaseMotor1.aimc.frictionParameters.linear
threePhaseMotor1.aimc.frictionParameters.wLinear
threePhaseMotor1.aimc.frictionParameters.tauLinear
threePhaseMotor1.aimc.phiMechanical
threePhaseMotor1.aimc.tauElectrical
threePhaseMotor1.aimc.inertiaRotor.J
threePhaseMotor1.aimc.inertiaRotor.stateSelect
threePhaseMotor1.aimc.inertiaStator.flange_a.tau
threePhaseMotor1.aimc.inertiaStator.flange_b.tau
threePhaseMotor1.aimc.inertiaStator.J
threePhaseMotor1.aimc.inertiaStator.stateSelect
threePhaseMotor1.aimc.inertiaStator.der(phi)
threePhaseMotor1.aimc.inertiaStator.w
threePhaseMotor1.aimc.inertiaStator.der(w)
threePhaseMotor1.aimc.inertiaStator.a
threePhaseMotor1.aimc.fixed.phi0
threePhaseMotor1.aimc.friction.flange.tau
threePhaseMotor1.aimc.friction.support.tau
threePhaseMotor1.aimc.friction.phi
threePhaseMotor1.aimc.friction.tau
threePhaseMotor1.aimc.friction.frictionParameters.PRef
threePhaseMotor1.aimc.friction.frictionParameters.wRef
threePhaseMotor1.aimc.friction.frictionParameters.power_w
threePhaseMotor1.aimc.friction.frictionParameters.tauRef
threePhaseMotor1.aimc.friction.frictionParameters.linear
threePhaseMotor1.aimc.friction.frictionParameters.wLinear
threePhaseMotor1.aimc.friction.frictionParameters.tauLinear
threePhaseMotor1.aimc.friction.useHeatPort
threePhaseMotor1.aimc.friction.heatPort.T
threePhaseMotor1.aimc.friction.heatPort.Q_flow
threePhaseMotor1.aimc.friction.lossPower
threePhaseMotor1.aimc.internalSupport.tau
threePhaseMotor1.aimc.statorCoreParameters.m
threePhaseMotor1.aimc.statorCoreParameters.PRef
threePhaseMotor1.aimc.statorCoreParameters.VRef
threePhaseMotor1.aimc.statorCoreParameters.wRef
threePhaseMotor1.aimc.statorCoreParameters.ratioHysteresis
threePhaseMotor1.aimc.statorCoreParameters.GcRef
threePhaseMotor1.aimc.statorCoreParameters.wMin
threePhaseMotor1.aimc.strayLoadParameters.PRef
threePhaseMotor1.aimc.strayLoadParameters.IRef
threePhaseMotor1.aimc.strayLoadParameters.wRef
threePhaseMotor1.aimc.strayLoadParameters.power_w
threePhaseMotor1.aimc.strayLoadParameters.tauRef
threePhaseMotor1.aimc.powerBalance.powerStator
threePhaseMotor1.aimc.powerBalance.powerMechanical
threePhaseMotor1.aimc.powerBalance.powerInertiaStator
threePhaseMotor1.aimc.powerBalance.powerInertiaRotor
threePhaseMotor1.aimc.powerBalance.lossPowerTotal
threePhaseMotor1.aimc.powerBalance.lossPowerStatorWinding
threePhaseMotor1.aimc.powerBalance.lossPowerStatorCore
threePhaseMotor1.aimc.powerBalance.lossPowerRotorCore
threePhaseMotor1.aimc.powerBalance.lossPowerStrayLoad
threePhaseMotor1.aimc.powerBalance.lossPowerFriction
threePhaseMotor1.aimc.powerBalance.lossPowerRotorWinding
threePhaseMotor1.aimc.vs[1]
threePhaseMotor1.aimc.vs[2]
threePhaseMotor1.aimc.vs[3]
threePhaseMotor1.aimc.i_0_s
threePhaseMotor1.aimc.der(i_0_s)
threePhaseMotor1.aimc.idq_sr[1]
threePhaseMotor1.aimc.der(idq_sr[1])
threePhaseMotor1.aimc.idq_sr[2]
threePhaseMotor1.aimc.der(idq_sr[2])
threePhaseMotor1.aimc.idq_rs[1]
threePhaseMotor1.aimc.idq_rs[2]
threePhaseMotor1.aimc.der(idq_rs[1])
threePhaseMotor1.aimc.der(idq_rs[2])
threePhaseMotor1.aimc.idq_rr[1]
threePhaseMotor1.aimc.der(idq_rr[1])
threePhaseMotor1.aimc.idq_rr[2]
threePhaseMotor1.aimc.der(idq_rr[2])
threePhaseMotor1.aimc.plug_sp.m
threePhaseMotor1.aimc.plug_sn.m
threePhaseMotor1.aimc.plug_sn.pin[1].v
threePhaseMotor1.aimc.rs.m
threePhaseMotor1.aimc.rs.v[1]
threePhaseMotor1.aimc.rs.v[2]
threePhaseMotor1.aimc.rs.v[3]
threePhaseMotor1.aimc.rs.plug_p.m
threePhaseMotor1.aimc.rs.plug_n.m
threePhaseMotor1.aimc.rs.plug_n.pin[1].v
threePhaseMotor1.aimc.rs.plug_n.pin[2].v
threePhaseMotor1.aimc.rs.plug_n.pin[3].v
threePhaseMotor1.aimc.rs.R[1]
threePhaseMotor1.aimc.rs.R[2]
threePhaseMotor1.aimc.rs.R[3]
threePhaseMotor1.aimc.rs.T_ref[1]
threePhaseMotor1.aimc.rs.T_ref[2]
threePhaseMotor1.aimc.rs.T_ref[3]
threePhaseMotor1.aimc.rs.alpha[1]
threePhaseMotor1.aimc.rs.alpha[2]
threePhaseMotor1.aimc.rs.alpha[3]
threePhaseMotor1.aimc.rs.mh
threePhaseMotor1.aimc.rs.useHeatPort
threePhaseMotor1.aimc.rs.T[1]
threePhaseMotor1.aimc.rs.T[2]
threePhaseMotor1.aimc.rs.T[3]
threePhaseMotor1.aimc.rs.resistor[1].R
threePhaseMotor1.aimc.rs.resistor[1].T_ref
threePhaseMotor1.aimc.rs.resistor[1].alpha
threePhaseMotor1.aimc.rs.resistor[1].v
threePhaseMotor1.aimc.rs.resistor[1].useHeatPort
threePhaseMotor1.aimc.rs.resistor[1].T
threePhaseMotor1.aimc.rs.resistor[1].LossPower
threePhaseMotor1.aimc.rs.resistor[1].R_actual
threePhaseMotor1.aimc.rs.resistor[2].R
threePhaseMotor1.aimc.rs.resistor[2].T_ref
threePhaseMotor1.aimc.rs.resistor[2].alpha
threePhaseMotor1.aimc.rs.resistor[2].v
threePhaseMotor1.aimc.rs.resistor[2].useHeatPort
threePhaseMotor1.aimc.rs.resistor[2].T
threePhaseMotor1.aimc.rs.resistor[2].LossPower
threePhaseMotor1.aimc.rs.resistor[2].R_actual
threePhaseMotor1.aimc.rs.resistor[3].R
threePhaseMotor1.aimc.rs.resistor[3].T_ref
threePhaseMotor1.aimc.rs.resistor[3].alpha
threePhaseMotor1.aimc.rs.resistor[3].v
threePhaseMotor1.aimc.rs.resistor[3].useHeatPort
threePhaseMotor1.aimc.rs.resistor[3].T
threePhaseMotor1.aimc.rs.resistor[3].LossPower
threePhaseMotor1.aimc.rs.resistor[3].R_actual
threePhaseMotor1.aimc.lssigma.L[1]
threePhaseMotor1.aimc.lssigma.L[2]
threePhaseMotor1.aimc.lssigma.v_[1]
threePhaseMotor1.aimc.lssigma.v_[2]
threePhaseMotor1.aimc.lssigma.i_[1]
threePhaseMotor1.aimc.lssigma.i_[2]
threePhaseMotor1.aimc.lssigma.der(i_[1])
threePhaseMotor1.aimc.lssigma.der(i_[2])
threePhaseMotor1.aimc.lssigma.spacePhasor_a.v_[1]
threePhaseMotor1.aimc.lssigma.spacePhasor_a.v_[2]
threePhaseMotor1.aimc.lszero.v
threePhaseMotor1.aimc.lszero.i
threePhaseMotor1.aimc.lszero.der(i)
threePhaseMotor1.aimc.lszero.p.v
threePhaseMotor1.aimc.lszero.p.i
threePhaseMotor1.aimc.lszero.n.v
threePhaseMotor1.aimc.lszero.n.i
threePhaseMotor1.aimc.lszero.L
threePhaseMotor1.aimc.statorCore.coreParameters.m
threePhaseMotor1.aimc.statorCore.coreParameters.PRef
threePhaseMotor1.aimc.statorCore.coreParameters.VRef
threePhaseMotor1.aimc.statorCore.coreParameters.wRef
threePhaseMotor1.aimc.statorCore.coreParameters.ratioHysteresis
threePhaseMotor1.aimc.statorCore.coreParameters.GcRef
threePhaseMotor1.aimc.statorCore.coreParameters.wMin
threePhaseMotor1.aimc.statorCore.m
threePhaseMotor1.aimc.statorCore.turnsRatio
threePhaseMotor1.aimc.statorCore.useHeatPort
threePhaseMotor1.aimc.statorCore.heatPort.T
threePhaseMotor1.aimc.statorCore.heatPort.Q_flow
threePhaseMotor1.aimc.statorCore.lossPower
threePhaseMotor1.aimc.statorCore.spacePhasor.i_[1]
threePhaseMotor1.aimc.statorCore.spacePhasor.i_[2]
threePhaseMotor1.aimc.statorCore.Gc
threePhaseMotor1.aimc.statorCore.wLimit
threePhaseMotor1.aimc.spacePhasorS.m
threePhaseMotor1.aimc.spacePhasorS.turnsRatio
threePhaseMotor1.aimc.spacePhasorS.v[1]
threePhaseMotor1.aimc.spacePhasorS.v[2]
threePhaseMotor1.aimc.spacePhasorS.v[3]
threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[1, 1]
threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[1, 2]
threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[1, 3]
threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[2, 1]
threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[2, 2]
threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[2, 3]
threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[1, 1]
threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[1, 2]
threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[2, 1]
threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[2, 2]
threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[3, 1]
threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[3, 2]
threePhaseMotor1.aimc.spacePhasorS.plug_p.m
threePhaseMotor1.aimc.spacePhasorS.plug_n.m
threePhaseMotor1.aimc.spacePhasorS.zero.v
threePhaseMotor1.aimc.spacePhasorS.zero.i
threePhaseMotor1.aimc.spacePhasorS.ground.v
threePhaseMotor1.aimc.spacePhasorS.ground.i
threePhaseMotor1.aimc.strayLoad.m
threePhaseMotor1.aimc.strayLoad.v[1]
threePhaseMotor1.aimc.strayLoad.v[2]
threePhaseMotor1.aimc.strayLoad.v[3]
threePhaseMotor1.aimc.strayLoad.plug_p.m
threePhaseMotor1.aimc.strayLoad.plug_n.m
threePhaseMotor1.aimc.strayLoad.flange.tau
threePhaseMotor1.aimc.strayLoad.support.tau
threePhaseMotor1.aimc.strayLoad.phi
threePhaseMotor1.aimc.strayLoad.tau
threePhaseMotor1.aimc.strayLoad.strayLoadParameters.PRef
threePhaseMotor1.aimc.strayLoad.strayLoadParameters.IRef
threePhaseMotor1.aimc.strayLoad.strayLoadParameters.wRef
threePhaseMotor1.aimc.strayLoad.strayLoadParameters.power_w
threePhaseMotor1.aimc.strayLoad.strayLoadParameters.tauRef
threePhaseMotor1.aimc.strayLoad.useHeatPort
threePhaseMotor1.aimc.strayLoad.heatPort.T
threePhaseMotor1.aimc.strayLoad.heatPort.Q_flow
threePhaseMotor1.aimc.strayLoad.lossPower
threePhaseMotor1.aimc.strayLoad.iRMS
threePhaseMotor1.aimc.thermalAmbient.m
threePhaseMotor1.aimc.thermalAmbient.useTemperatureInputs
threePhaseMotor1.aimc.thermalAmbient.TDefault
threePhaseMotor1.aimc.thermalAmbient.Ts
threePhaseMotor1.aimc.thermalAmbient.Q_flowStatorWinding
threePhaseMotor1.aimc.thermalAmbient.Q_flowStatorCore
threePhaseMotor1.aimc.thermalAmbient.Q_flowRotorCore
threePhaseMotor1.aimc.thermalAmbient.Q_flowStrayLoad
threePhaseMotor1.aimc.thermalAmbient.Q_flowFriction
threePhaseMotor1.aimc.thermalAmbient.thermalPort.m
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStatorCore.T
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortRotorCore.T
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.T
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortFriction.T
threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortFriction.Q_flow
threePhaseMotor1.aimc.thermalAmbient.temperatureStatorCore.T
threePhaseMotor1.aimc.thermalAmbient.temperatureStatorCore.port.T
threePhaseMotor1.aimc.thermalAmbient.temperatureStatorCore.port.Q_flow
threePhaseMotor1.aimc.thermalAmbient.temperatureRotorCore.T
threePhaseMotor1.aimc.thermalAmbient.temperatureRotorCore.port.T
threePhaseMotor1.aimc.thermalAmbient.temperatureRotorCore.port.Q_flow
threePhaseMotor1.aimc.thermalAmbient.temperatureStrayLoad.T
threePhaseMotor1.aimc.thermalAmbient.temperatureStrayLoad.port.T
threePhaseMotor1.aimc.thermalAmbient.temperatureStrayLoad.port.Q_flow
threePhaseMotor1.aimc.thermalAmbient.temperatureFriction.T
threePhaseMotor1.aimc.thermalAmbient.temperatureFriction.port.T
threePhaseMotor1.aimc.thermalAmbient.temperatureFriction.port.Q_flow
threePhaseMotor1.aimc.thermalAmbient.constTs.k
threePhaseMotor1.aimc.thermalAmbient.thermalCollectorStator.m
threePhaseMotor1.aimc.thermalAmbient.Tr
threePhaseMotor1.aimc.thermalAmbient.Q_flowTotal
threePhaseMotor1.aimc.thermalAmbient.constTr.k
threePhaseMotor1.aimc.pi
threePhaseMotor1.aimc.internalThermalPort.m
threePhaseMotor1.aimc.internalThermalPort.heatPortStatorWinding[1].Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortStatorWinding[2].Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortStatorWinding[3].Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortStatorCore.T
threePhaseMotor1.aimc.internalThermalPort.heatPortStatorCore.Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortRotorCore.T
threePhaseMotor1.aimc.internalThermalPort.heatPortRotorCore.Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortStrayLoad.T
threePhaseMotor1.aimc.internalThermalPort.heatPortStrayLoad.Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortFriction.T
threePhaseMotor1.aimc.internalThermalPort.heatPortFriction.Q_flow
threePhaseMotor1.aimc.internalThermalPort.heatPortRotorWinding.Q_flow
threePhaseMotor1.aimc.airGapS.Lm
threePhaseMotor1.aimc.airGapS.m
threePhaseMotor1.aimc.airGapS.p
threePhaseMotor1.aimc.airGapS.gamma
threePhaseMotor1.aimc.airGapS.der(gamma)
threePhaseMotor1.aimc.airGapS.psi_ms[1]
threePhaseMotor1.aimc.airGapS.psi_ms[2]
threePhaseMotor1.aimc.airGapS.der(psi_ms[1])
threePhaseMotor1.aimc.airGapS.der(psi_ms[2])
threePhaseMotor1.aimc.airGapS.psi_mr[1]
threePhaseMotor1.aimc.airGapS.psi_mr[2]
threePhaseMotor1.aimc.airGapS.der(psi_mr[1])
threePhaseMotor1.aimc.airGapS.der(psi_mr[2])
threePhaseMotor1.aimc.airGapS.RotationMatrix[1, 1]
threePhaseMotor1.aimc.airGapS.RotationMatrix[1, 2]
threePhaseMotor1.aimc.airGapS.RotationMatrix[2, 1]
threePhaseMotor1.aimc.airGapS.RotationMatrix[2, 2]
threePhaseMotor1.aimc.airGapS.der(RotationMatrix[1, 1])
threePhaseMotor1.aimc.airGapS.der(RotationMatrix[1, 2])
threePhaseMotor1.aimc.airGapS.der(RotationMatrix[2, 1])
threePhaseMotor1.aimc.airGapS.der(RotationMatrix[2, 2])
threePhaseMotor1.aimc.airGapS.i_ms[1]
threePhaseMotor1.aimc.airGapS.i_ms[2]
threePhaseMotor1.aimc.airGapS.der(i_ms[1])
threePhaseMotor1.aimc.airGapS.der(i_ms[2])
threePhaseMotor1.aimc.airGapS.L[1, 1]
threePhaseMotor1.aimc.airGapS.L[1, 2]
threePhaseMotor1.aimc.airGapS.L[2, 1]
threePhaseMotor1.aimc.airGapS.L[2, 2]
threePhaseMotor1.aimc.Lm
threePhaseMotor1.aimc.Lrsigma
threePhaseMotor1.aimc.Rr
threePhaseMotor1.aimc.TrRef
threePhaseMotor1.aimc.alpha20r
threePhaseMotor1.aimc.TrOperational
threePhaseMotor1.aimc.squirrelCageR.Lrsigma
threePhaseMotor1.aimc.squirrelCageR.Rr
threePhaseMotor1.aimc.squirrelCageR.T_ref
threePhaseMotor1.aimc.squirrelCageR.alpha
threePhaseMotor1.aimc.squirrelCageR.useHeatPort
threePhaseMotor1.aimc.squirrelCageR.T
threePhaseMotor1.aimc.squirrelCageR.Rr_actual
threePhaseMotor1.terminalBox.m
threePhaseMotor1.terminalBox.plug_sp.m
threePhaseMotor1.terminalBox.plug_sn.m
threePhaseMotor1.terminalBox.star.m
threePhaseMotor1.terminalBox.star.plug_p.m
threePhaseMotor1.terminalBox.star.pin_n.i
threePhaseMotor1.terminalBox.plugSupply.m
threePhaseMotor1.terminalBox.starpoint.i
threePhaseMotor1.flange1.tau
threePhaseMotor1.aimcData.m
threePhaseMotor1.aimcData.Jr
threePhaseMotor1.aimcData.Js
threePhaseMotor1.aimcData.p
threePhaseMotor1.aimcData.fsNominal
threePhaseMotor1.aimcData.Rs
threePhaseMotor1.aimcData.TsRef
threePhaseMotor1.aimcData.alpha20s
threePhaseMotor1.aimcData.effectiveStatorTurns
threePhaseMotor1.aimcData.Lszero
threePhaseMotor1.aimcData.Lssigma
threePhaseMotor1.aimcData.frictionParameters.PRef
threePhaseMotor1.aimcData.frictionParameters.wRef
threePhaseMotor1.aimcData.frictionParameters.power_w
threePhaseMotor1.aimcData.frictionParameters.tauRef
threePhaseMotor1.aimcData.frictionParameters.linear
threePhaseMotor1.aimcData.frictionParameters.wLinear
threePhaseMotor1.aimcData.frictionParameters.tauLinear
threePhaseMotor1.aimcData.statorCoreParameters.m
threePhaseMotor1.aimcData.statorCoreParameters.PRef
threePhaseMotor1.aimcData.statorCoreParameters.VRef
threePhaseMotor1.aimcData.statorCoreParameters.wRef
threePhaseMotor1.aimcData.statorCoreParameters.ratioHysteresis
threePhaseMotor1.aimcData.statorCoreParameters.GcRef
threePhaseMotor1.aimcData.statorCoreParameters.wMin
threePhaseMotor1.aimcData.strayLoadParameters.PRef
threePhaseMotor1.aimcData.strayLoadParameters.IRef
threePhaseMotor1.aimcData.strayLoadParameters.wRef
threePhaseMotor1.aimcData.strayLoadParameters.power_w
threePhaseMotor1.aimcData.strayLoadParameters.tauRef
threePhaseMotor1.aimcData.Lm
threePhaseMotor1.aimcData.Lrsigma
threePhaseMotor1.aimcData.Rr
threePhaseMotor1.aimcData.TrRef
threePhaseMotor1.aimcData.alpha20r
threePhaseMotor1.plug_p1.m
threePhaseMotor1.rpm
signalPWM3[1].useConstantDutyCycle
signalPWM3[1].constantDutyCycle
signalPWM3[1].f
signalPWM3[1].startTime
signalPWM3[1].limiter.uMax
signalPWM3[1].limiter.uMin
signalPWM3[1].limiter.strict
signalPWM3[1].limiter.homotopyType
signalPWM3[1].limiter.limitsAtInit
signalPWM3[1].limiter.y
signalPWM3[1].greaterEqual.u1
signalPWM3[1].greaterEqual.u2
signalPWM3[1].zeroOrderHold.samplePeriod
signalPWM3[1].zeroOrderHold.startTime
signalPWM3[1].zeroOrderHold.sampleTrigger
signalPWM3[1].zeroOrderHold.firstTrigger
signalPWM3[1].zeroOrderHold.ySample
signalPWM3[1].sawtooth.amplitude
signalPWM3[1].sawtooth.period
signalPWM3[1].sawtooth.nperiod
signalPWM3[1].sawtooth.offset
signalPWM3[1].sawtooth.startTime
signalPWM3[1].sawtooth.T_start
signalPWM3[1].sawtooth.count
signalPWM3[2].useConstantDutyCycle
signalPWM3[2].constantDutyCycle
signalPWM3[2].f
signalPWM3[2].startTime
signalPWM3[2].limiter.uMax
signalPWM3[2].limiter.uMin
signalPWM3[2].limiter.strict
signalPWM3[2].limiter.homotopyType
signalPWM3[2].limiter.limitsAtInit
signalPWM3[2].limiter.y
signalPWM3[2].greaterEqual.u1
signalPWM3[2].greaterEqual.u2
signalPWM3[2].zeroOrderHold.samplePeriod
signalPWM3[2].zeroOrderHold.startTime
signalPWM3[2].zeroOrderHold.sampleTrigger
signalPWM3[2].zeroOrderHold.firstTrigger
signalPWM3[2].zeroOrderHold.ySample
signalPWM3[2].sawtooth.amplitude
signalPWM3[2].sawtooth.period
signalPWM3[2].sawtooth.nperiod
signalPWM3[2].sawtooth.offset
signalPWM3[2].sawtooth.startTime
signalPWM3[2].sawtooth.T_start
signalPWM3[2].sawtooth.count
signalPWM3[3].useConstantDutyCycle
signalPWM3[3].constantDutyCycle
signalPWM3[3].f
signalPWM3[3].startTime
signalPWM3[3].limiter.uMax
signalPWM3[3].limiter.uMin
signalPWM3[3].limiter.strict
signalPWM3[3].limiter.homotopyType
signalPWM3[3].limiter.limitsAtInit
signalPWM3[3].limiter.y
signalPWM3[3].greaterEqual.u1
signalPWM3[3].greaterEqual.u2
signalPWM3[3].zeroOrderHold.samplePeriod
signalPWM3[3].zeroOrderHold.startTime
signalPWM3[3].zeroOrderHold.sampleTrigger
signalPWM3[3].zeroOrderHold.firstTrigger
signalPWM3[3].zeroOrderHold.ySample
signalPWM3[3].sawtooth.amplitude
signalPWM3[3].sawtooth.period
signalPWM3[3].sawtooth.nperiod
signalPWM3[3].sawtooth.offset
signalPWM3[3].sawtooth.startTime
signalPWM3[3].sawtooth.T_start
signalPWM3[3].sawtooth.count
variableSpeedDrive_ThreePhase1.speedSensor.flange.phi
variableSpeedDrive_ThreePhase1.speedSensor.flange.der(phi)
variableSpeedDrive_ThreePhase1.speedSensor.flange.tau
variableSpeedDrive_ThreePhase1.currentController.k
variableSpeedDrive_ThreePhase1.currentController.T
variableSpeedDrive_ThreePhase1.currentController.initType
variableSpeedDrive_ThreePhase1.currentController.x_start
variableSpeedDrive_ThreePhase1.currentController.y_start
variableSpeedDrive_ThreePhase1.currentController.u
variableSpeedDrive_ThreePhase1.currentController.x
variableSpeedDrive_ThreePhase1.currentController.der(x)
variableSpeedDrive_ThreePhase1.flange1.tau
variableSpeedDrive_ThreePhase1.y1[1]
variableSpeedDrive_ThreePhase1.const.k
variableSpeedDrive_ThreePhase1.wref
variableSpeedDrive_ThreePhase1.T
variableSpeedDrive_ThreePhase1.k
fan1.inertia.flange_b.tau
fan1.inertia.J
fan1.inertia.stateSelect
fan1.inertia.w
fan1.inertia.der(w)
fan1.J
fan1.deltaPhi
splitterHVDC.plug_a.p.i
splitterHVDC.plug_a.n.v
splitterHVDC.plug_a.n.i
splitterHVDC.p.i
splitterHVDC.n.v
splitterHVDC.n.i
batteryPack.enable_thermal_port
batteryPack.internal_ground
batteryPack.display_name
batteryPack.id
batteryPack.plug_a.p.i
batteryPack.plug_a.n.v
batteryPack.plug_a.n.i
batteryPack.hide_interface_icon
batteryPack.ns
batteryPack.np
batteryPack.gs
batteryPack.gp
batteryPack.ngs
batteryPack.ngp
batteryPack.cellGroups
batteryPack.gs_custom
batteryPack.gp_custom
batteryPack.is_lumped
batteryPack.is_custom
batteryPack.Q_cap_all_nom
batteryPack.initialize_with_OCV
batteryPack.SOC_start
batteryPack.OCV_start
batteryPack.limitActionSoC
batteryPack.limitActionV
batteryPack.limitActionI
batteryPack.limitActionP
batteryPack.limitActionDch
batteryPack.limitStartSoC
batteryPack.limitStartV
batteryPack.limitStartI
batteryPack.limitStartP
batteryPack.limitStartDch
batteryPack.iTolDch
batteryPack.summary.ns
batteryPack.summary.np
batteryPack.summary.gs
batteryPack.summary.gp
batteryPack.summary.ngs
batteryPack.summary.ngp
batteryPack.summary.i
batteryPack.summary.p_in
batteryPack.summary.p_out
batteryPack.summary.pack_i
batteryPack.summary.pack_i_dch
batteryPack.summary.pack_ocv
batteryPack.summary.pack_p_in
batteryPack.summary.pack_p_out
batteryPack.summary.pack_i_max_dch
batteryPack.summary.pack_p_max_dch
batteryPack.summary.pack_Q_cap_aged
batteryPack.summary.pack_Q
batteryPack.summary.pack_heat_flow
batteryPack.summary.core_i[1, 1]
batteryPack.summary.core_ocv[1, 1]
batteryPack.summary.core_v_drop[1, 1]
batteryPack.summary.core_R_max_dch[1, 1]
batteryPack.summary.core_Q[1, 1]
batteryPack.summary.core_Q_cap_aged[1, 1]
batteryPack.summary.core_i_self[1, 1]
batteryPack.summary.pack_SoC
batteryPack.summary.pack_SoC_nom
batteryPack.geometry.ns
batteryPack.geometry.np
batteryPack.geometry.gs
batteryPack.geometry.gp
batteryPack.geometry.ngs
batteryPack.geometry.ngp
batteryPack.geometry.thermal.cell.discretization[1]
batteryPack.geometry.thermal.cell.discretization[2]
batteryPack.geometry.thermal.cell.discretization[3]
batteryPack.core.ns
batteryPack.core.np
batteryPack.core.gs
batteryPack.core.gp
batteryPack.core.ngs
batteryPack.core.ngp
batteryPack.core.enable_heatport
batteryPack.core.T0
batteryPack.core.initialize_with_OCV
batteryPack.core.SOC_start
batteryPack.core.OCV_start
batteryPack.core.Q_cap_all_nom
batteryPack.core.limitActionSoC
batteryPack.core.SoC_max
batteryPack.core.SoC_min
batteryPack.core.SoC_tol
batteryPack.core.limitStartSoC
batteryPack.core.limitActionV
batteryPack.core.vCellMax
batteryPack.core.vCellMin
batteryPack.core.vTol
batteryPack.core.limitStartV
batteryPack.core.limitActionI
batteryPack.core.iCellMaxDch
batteryPack.core.iCellMaxCh
batteryPack.core.iTol
batteryPack.core.limitStartI
batteryPack.core.limitActionP
batteryPack.core.pCellMaxDch
batteryPack.core.pCellMaxCh
batteryPack.core.pTol
batteryPack.core.limitStartP
batteryPack.core.pin_n.v
batteryPack.core.pin_n.i
batteryPack.core.pin_p.i
batteryPack.core.summary.ns
batteryPack.core.summary.np
batteryPack.core.summary.gs
batteryPack.core.summary.gp
batteryPack.core.summary.ngs
batteryPack.core.summary.ngp
batteryPack.core.summary.i
batteryPack.core.summary.v_drop
batteryPack.core.summary.i_self
batteryPack.core.summary.cell_i
batteryPack.core.summary.cell_ocv
batteryPack.core.summary.cell_v_drop
batteryPack.core.summary.cell_i_self
batteryPack.core.summary.cell_Q
batteryPack.core.summary.cell_Q_cap_aged
batteryPack.core.summary.cell_R_max_dch
batteryPack.core.summary.cell_R_max_ch
batteryPack.core.capacity.v
batteryPack.core.capacity.p.v
batteryPack.core.capacity.n.v
batteryPack.core.capacity.ns
batteryPack.core.capacity.np
batteryPack.core.capacity.gs
batteryPack.core.capacity.gp
batteryPack.core.capacity.ngs
batteryPack.core.capacity.ngp
batteryPack.core.capacity.initialize_charge
batteryPack.core.capacity.initialize_with_SOC
batteryPack.core.capacity.initialize_with_aging
batteryPack.core.capacity.SOC_start
batteryPack.core.capacity.Q_start
batteryPack.core.capacity.enable_heatport
batteryPack.core.capacity.T0
batteryPack.core.capacity.Q_cap_cell_nom
batteryPack.core.capacity.k_Q_cap_cell_nom
batteryPack.core.capacity.Q_cap_all_nom
batteryPack.core.capacity.limitAction
batteryPack.core.capacity.SoC_max
batteryPack.core.capacity.SoC_min
batteryPack.core.capacity.SoC_tol
batteryPack.core.capacity.limitStart
batteryPack.core.capacity.Q_cap_cell
batteryPack.core.capacity.Q_cap_all
batteryPack.core.capacity.heatPort.Q_flow
batteryPack.core.capacity.Q
batteryPack.core.capacity.der(Q)
batteryPack.core.capacity.C_rate
batteryPack.core.capacity.cellState.C_rate
batteryPack.core.capacity.cellState.f_C1
batteryPack.core.capacity.cellState.f_R1
batteryPack.core.capacity.cellState.f_Rser
batteryPack.core.capacity.cellState.f_capacity
batteryPack.core.capacity.cellState.f_Rself
batteryPack.core.capacity.Crate_set.y
batteryPack.core.capacity.limitSoC.x
batteryPack.core.capacity.limitSoC.xMax
batteryPack.core.capacity.limitSoC.xMin
batteryPack.core.capacity.limitSoC.action
batteryPack.core.capacity.limitSoC.use_explicit_checking_time
batteryPack.core.capacity.limitSoC.t0
batteryPack.core.capacity.limitSoC.t_start
batteryPack.core.capacity.limitSoC.enable_checking_latch
batteryPack.core.capacity.limitSoC.upper_limit_active
batteryPack.core.capacity.limitSoC.lower_limit_active
batteryPack.core.capacity.limitSoC.assert_level
batteryPack.core.capacity.noHeatFlow.heat.Q_flow
batteryPack.core.voltage.n.v
batteryPack.core.voltage.ns
batteryPack.core.voltage.np
batteryPack.core.voltage.gs
batteryPack.core.voltage.gp
batteryPack.core.voltage.ngs
batteryPack.core.voltage.ngp
batteryPack.core.voltage.enable_heatport
batteryPack.core.voltage.T0
batteryPack.core.voltage.initialize_with_OCV
batteryPack.core.voltage.v_start
batteryPack.core.voltage.limitAction
batteryPack.core.voltage.vCellMax
batteryPack.core.voltage.vCellMin
batteryPack.core.voltage.vTol
batteryPack.core.voltage.limitStart
batteryPack.core.voltage.k_OCV
batteryPack.core.voltage.vCell
batteryPack.core.voltage.T
batteryPack.core.voltage.heatPort.Q_flow
batteryPack.core.voltage.cellState.C_rate
batteryPack.core.voltage.limitCellOCV.x
batteryPack.core.voltage.limitCellOCV.xMax
batteryPack.core.voltage.limitCellOCV.xMin
batteryPack.core.voltage.limitCellOCV.action
batteryPack.core.voltage.limitCellOCV.use_explicit_checking_time
batteryPack.core.voltage.limitCellOCV.t0
batteryPack.core.voltage.limitCellOCV.t_start
batteryPack.core.voltage.limitCellOCV.enable_checking_latch
batteryPack.core.voltage.limitCellOCV.upper_limit_active
batteryPack.core.voltage.limitCellOCV.lower_limit_active
batteryPack.core.voltage.limitCellOCV.assert_level
batteryPack.core.voltage.noHeatFlow.heat.Q_flow
batteryPack.core.voltage.vCell_start
batteryPack.core.voltage.temperatureSensor.T
batteryPack.core.voltage.temperatureSensor.port.Q_flow
batteryPack.core.voltage.V_cell_max
batteryPack.core.voltage.V_cell_min
batteryPack.core.voltage.V_cell_diff
batteryPack.core.impedance.v
batteryPack.core.impedance.p.i
batteryPack.core.impedance.n.i
batteryPack.core.impedance.ns
batteryPack.core.impedance.np
batteryPack.core.impedance.gs
batteryPack.core.impedance.gp
batteryPack.core.impedance.ngs
batteryPack.core.impedance.ngp
batteryPack.core.impedance.enable_heatport
batteryPack.core.impedance.T0
batteryPack.core.impedance.heatPort.Q_flow
batteryPack.core.impedance.cellState.C_rate
batteryPack.core.impedance.i
batteryPack.core.impedance.power
batteryPack.core.impedance.r0.T_ref
batteryPack.core.impedance.r0.alpha
batteryPack.core.impedance.r0.v
batteryPack.core.impedance.r0.i
batteryPack.core.impedance.r0.p.i
batteryPack.core.impedance.r0.n.i
batteryPack.core.impedance.r0.useHeatPort
batteryPack.core.impedance.r0.T
batteryPack.core.impedance.r0.heatPort.Q_flow
batteryPack.core.impedance.r0.LossPower
batteryPack.core.impedance.r0.R
batteryPack.core.impedance.R0
batteryPack.core.impedance.k_R
batteryPack.core.impedance.T_ref
batteryPack.core.impedance.alpha
batteryPack.core.impedance.R_set.k
batteryPack.core.selfDischarge.p.i
batteryPack.core.selfDischarge.n.v
batteryPack.core.selfDischarge.n.i
batteryPack.core.selfDischarge.ns
batteryPack.core.selfDischarge.np
batteryPack.core.selfDischarge.gs
batteryPack.core.selfDischarge.gp
batteryPack.core.selfDischarge.ngs
batteryPack.core.selfDischarge.ngp
batteryPack.core.selfDischarge.enable_heatport
batteryPack.core.selfDischarge.T0
batteryPack.core.selfDischarge.i
batteryPack.core.selfDischarge.cellState.C_rate
batteryPack.core.selfDischarge.idle.i
batteryPack.core.selfDischarge.idle.p.i
batteryPack.core.selfDischarge.idle.n.v
batteryPack.core.selfDischarge.idle.n.i
batteryPack.core.selfDischarge.fixedHeatFlow.Q_flow
batteryPack.core.selfDischarge.fixedHeatFlow.T_ref
batteryPack.core.selfDischarge.fixedHeatFlow.alpha
batteryPack.core.aging.v
batteryPack.core.aging.p.v
batteryPack.core.aging.n.v
batteryPack.core.aging.ns
batteryPack.core.aging.np
batteryPack.core.aging.gs
batteryPack.core.aging.gp
batteryPack.core.aging.ngs
batteryPack.core.aging.ngp
batteryPack.core.aging.enable_heatport
batteryPack.core.aging.T0
batteryPack.core.aging.capacity_aging
batteryPack.core.aging.Rser_aging
batteryPack.core.aging.R1_aging
batteryPack.core.aging.C1_aging
batteryPack.core.aging.Rself_aging
batteryPack.core.aging.heatPort.Q_flow
batteryPack.core.aging.cellState.C_rate
batteryPack.core.aging.noHeatFlow.heat.Q_flow
batteryPack.core.aging.C_rate
batteryPack.core.aging.calendar.const.k
batteryPack.core.aging.cyclic.i
batteryPack.core.aging.cyclic.C_rate
batteryPack.core.aging.cyclic.const.k
batteryPack.core.aging.i_set.y
batteryPack.core.aging.temperatureSensor.port.Q_flow
batteryPack.core.limitVoltage.x
batteryPack.core.limitVoltage.xMax
batteryPack.core.limitVoltage.xMin
batteryPack.core.limitVoltage.action
batteryPack.core.limitVoltage.use_explicit_checking_time
batteryPack.core.limitVoltage.t0
batteryPack.core.limitVoltage.t_start
batteryPack.core.limitVoltage.enable_checking_latch
batteryPack.core.limitVoltage.upper_limit_active
batteryPack.core.limitVoltage.lower_limit_active
batteryPack.core.limitVoltage.assert_level
batteryPack.core.sensors.ns
batteryPack.core.sensors.np
batteryPack.core.sensors.gs
batteryPack.core.sensors.gp
batteryPack.core.sensors.ngs
batteryPack.core.sensors.ngp
batteryPack.core.sensors.enable_heatport
batteryPack.core.sensors.T0
batteryPack.core.sensors.heatPort.Q_flow
batteryPack.core.sensors.cellState.C_rate
batteryPack.core.sensors.i_sns
batteryPack.core.sensors.cell_v_sns
batteryPack.core.sensors.cell_ocv_sns
batteryPack.core.sensors.cell_i_sns
batteryPack.core.sensors.cell_R_max_dch_sns
batteryPack.core.sensors.exp_core_i.y
batteryPack.core.sensors.exp_cell_i.y
batteryPack.core.sensors.temperatureSensor.port.Q_flow
batteryPack.core.limitCurrent.x
batteryPack.core.limitCurrent.xMax
batteryPack.core.limitCurrent.xMin
batteryPack.core.limitCurrent.action
batteryPack.core.limitCurrent.use_explicit_checking_time
batteryPack.core.limitCurrent.t0
batteryPack.core.limitCurrent.t_start
batteryPack.core.limitCurrent.enable_checking_latch
batteryPack.core.limitCurrent.upper_limit_active
batteryPack.core.limitCurrent.lower_limit_active
batteryPack.core.limitCurrent.assert_level
batteryPack.core.limitPower.x
batteryPack.core.limitPower.xMax
batteryPack.core.limitPower.xMin
batteryPack.core.limitPower.action
batteryPack.core.limitPower.use_explicit_checking_time
batteryPack.core.limitPower.t0
batteryPack.core.limitPower.t_start
batteryPack.core.limitPower.enable_checking_latch
batteryPack.core.limitPower.upper_limit_active
batteryPack.core.limitPower.lower_limit_active
batteryPack.core.limitPower.assert_level
batteryPack.electrical.internal_ground
batteryPack.electrical.heatPort.Q_flow
batteryPack.electrical.ground_internal.p.v
batteryPack.electrical.ground_internal.p.i
batteryPack.electrical.sensors.link_i_sns
batteryPack.electrical.sensors.core_i_sns
batteryPack.electrical.sensors.exp_core_i.y
batteryPack.electrical.sensors.exp_link_i.y
batteryPack.electrical.sensors.product_core_p.u2
batteryPack.electrical.sensors.product_core_p.y
batteryPack.electrical.sensors.product_link_p.u1
batteryPack.electrical.sensors.product_link_p.y
batteryPack.electrical.ground.v
batteryPack.electrical.ground.i
batteryPack.electrical.plug_a.p.i
batteryPack.electrical.plug_a.n.v
batteryPack.electrical.plug_a.n.i
batteryPack.electrical.splitter.plug_a.p.i
batteryPack.electrical.splitter.plug_a.n.v
batteryPack.electrical.splitter.plug_a.n.i
batteryPack.electrical.splitter.p.i
batteryPack.electrical.splitter.n.v
batteryPack.electrical.splitter.n.i
batteryPack.electrical.pin_n.v
batteryPack.electrical.pin_n.i
batteryPack.electrical.pin_p.i
batteryPack.electrical.summary.i_link
batteryPack.electrical.summary.i_core
batteryPack.electrical.summary.p_link
batteryPack.electrical.summary.p_core
batteryPack.electrical.noHeatFlow.heat.Q_flow
batteryPack.thermal.ns
batteryPack.thermal.np
batteryPack.thermal.gs
batteryPack.thermal.gp
batteryPack.thermal.ngs
batteryPack.thermal.ngp
batteryPack.thermal.fixed_temperature
batteryPack.thermal.state_when_fixed
batteryPack.thermal.T0
batteryPack.thermal.enable_external
batteryPack.thermal.T_start_fixed
batteryPack.thermal.tempElectrical.Q_flow
batteryPack.thermal.summary.ns
batteryPack.thermal.summary.np
batteryPack.thermal.summary.gs
batteryPack.thermal.summary.gp
batteryPack.thermal.summary.ngs
batteryPack.thermal.summary.ngp
batteryPack.thermal.geometry.cell.discretization[1]
batteryPack.thermal.geometry.cell.discretization[2]
batteryPack.thermal.geometry.cell.discretization[3]
batteryPack.thermal.enable_external_cells
batteryPack.thermal.splitCoreHeat.na[1]
batteryPack.thermal.splitCoreHeat.na[2]
batteryPack.thermal.splitCoreHeat.nb[1]
batteryPack.thermal.splitCoreHeat.nb[2]
batteryPack.thermal.splitCoreHeat.n_1
batteryPack.thermal.splitCoreHeat.n_2
batteryPack.thermal.splitCoreHeat.v_1[1]
batteryPack.thermal.splitCoreHeat.v_2[1]
batteryPack.thermal.adaptAmbient.batteryGeometry.ns
batteryPack.thermal.adaptAmbient.batteryGeometry.np
batteryPack.thermal.adaptAmbient.batteryGeometry.gs
batteryPack.thermal.adaptAmbient.batteryGeometry.gp
batteryPack.thermal.adaptAmbient.batteryGeometry.ngs
batteryPack.thermal.adaptAmbient.batteryGeometry.ngp
batteryPack.thermal.adaptAmbient.batteryGeometry.thermal.cell.discretization[1]
batteryPack.thermal.adaptAmbient.batteryGeometry.thermal.cell.discretization[2]
batteryPack.thermal.adaptAmbient.batteryGeometry.thermal.cell.discretization[3]
batteryPack.thermal.adaptAmbient.heat.T
batteryPack.thermal.adaptAmbient.heat.Q_flow
batteryPack.thermal.adaptCellsLumped.batteryGeometry.ns
batteryPack.thermal.adaptCellsLumped.batteryGeometry.np
batteryPack.thermal.adaptCellsLumped.batteryGeometry.gs
batteryPack.thermal.adaptCellsLumped.batteryGeometry.gp
batteryPack.thermal.adaptCellsLumped.batteryGeometry.ngs
batteryPack.thermal.adaptCellsLumped.batteryGeometry.ngp
batteryPack.thermal.adaptCellsLumped.batteryGeometry.thermal.cell.discretization[1]
batteryPack.thermal.adaptCellsLumped.batteryGeometry.thermal.cell.discretization[2]
batteryPack.thermal.adaptCellsLumped.batteryGeometry.thermal.cell.discretization[3]
batteryPack.thermal.adaptCellsLumped.heat.Q_flow
batteryPack.thermal.sensors.ns
batteryPack.thermal.sensors.np
batteryPack.thermal.sensors.gs
batteryPack.thermal.sensors.gp
batteryPack.thermal.sensors.ngs
batteryPack.thermal.sensors.ngp
batteryPack.thermal.sensors.batteryGeometry.ns
batteryPack.thermal.sensors.batteryGeometry.np
batteryPack.thermal.sensors.batteryGeometry.gs
batteryPack.thermal.sensors.batteryGeometry.gp
batteryPack.thermal.sensors.batteryGeometry.ngs
batteryPack.thermal.sensors.batteryGeometry.ngp
batteryPack.thermal.sensors.batteryGeometry.thermal.cell.discretization[1]
batteryPack.thermal.sensors.batteryGeometry.thermal.cell.discretization[2]
batteryPack.thermal.sensors.batteryGeometry.thermal.cell.discretization[3]
batteryPack.thermal.G_ambient
batteryPack.thermal.per_cell_capacity
batteryPack.thermal.C
batteryPack.thermal.C_cell
batteryPack.thermal.C_total
batteryPack.thermal.ambientTransfer.Q_flow
batteryPack.thermal.ambientTransfer.dT
batteryPack.thermal.ambientTransfer.port_a.Q_flow
batteryPack.thermal.ambientTransfer.port_b.Q_flow
batteryPack.thermal.ambientTransfer.G
batteryPack.thermal.internalMass.C
batteryPack.thermal.internalMass.fixed_temperature
batteryPack.thermal.internalMass.state_when_fixed
batteryPack.thermal.internalMass.T0
batteryPack.thermal.internalMass.T_start_fixed
batteryPack.thermal.internalMass.T
batteryPack.thermal.internalMass.der(T)
batteryPack.controller.id
batteryPack.controller.ns
batteryPack.controller.np
batteryPack.controller.gs
batteryPack.controller.gp
batteryPack.controller.ngs
batteryPack.controller.ngp
batteryPack.controller.enable_core
batteryPack.controller.enable_electrical
batteryPack.controller.enable_thermal
batteryPack.limitDischarge.x
batteryPack.limitDischarge.xMax
batteryPack.limitDischarge.xMin
batteryPack.limitDischarge.action
batteryPack.limitDischarge.use_explicit_checking_time
batteryPack.limitDischarge.t0
batteryPack.limitDischarge.t_start
batteryPack.limitDischarge.enable_checking_latch
batteryPack.limitDischarge.upper_limit_active
batteryPack.limitDischarge.lower_limit_active
batteryPack.limitDischarge.assert_level
ground.p.v
simpleLine2.inductor.v
simpleLine2.inductor.i
simpleLine2.inductor.der(i)
simpleLine2.inductor.n.v
simpleLine2.inductor.L
simpleLine2.p1.v
simpleLine2.L
simpleLine2.resistor.R
simpleLine2.resistor.T_ref
simpleLine2.resistor.alpha
simpleLine2.resistor.v
simpleLine2.resistor.useHeatPort
simpleLine2.resistor.T
simpleLine2.resistor.LossPower
simpleLine2.resistor.R_actual
simpleLine2.n1.v
simpleLine2.R
simpleLine3.inductor.v
simpleLine3.inductor.n.v
simpleLine3.inductor.L
simpleLine3.p1.v
simpleLine3.L
simpleLine3.resistor.R
simpleLine3.resistor.T_ref
simpleLine3.resistor.alpha
simpleLine3.resistor.v
simpleLine3.resistor.useHeatPort
simpleLine3.resistor.T
simpleLine3.resistor.LossPower
simpleLine3.resistor.R_actual
simpleLine3.n1.v
simpleLine3.R
circuitBreaker4.switch.v
circuitBreaker4.switch.Ron
circuitBreaker4.switch.Goff
circuitBreaker4.switch.useHeatPort
circuitBreaker4.switch.T
circuitBreaker4.switch.LossPower
circuitBreaker4.switch.T_heatPort
circuitBreaker4.switch.off
circuitBreaker4.switch.s
circuitBreaker4.switch.unitVoltage
circuitBreaker4.switch.unitCurrent
circuitBreaker4.useHeatPort
circuitBreaker4.Goff
circuitBreaker4.Ron
circuitBreaker4.cB_Trigger.const.k
circuitBreaker4.cB_Trigger.k
circuitBreaker4.k
circuitBreaker5.switch.p.v
circuitBreaker5.switch.Ron
circuitBreaker5.switch.Goff
circuitBreaker5.switch.useHeatPort
circuitBreaker5.switch.T
circuitBreaker5.switch.LossPower
circuitBreaker5.switch.T_heatPort
circuitBreaker5.switch.off
circuitBreaker5.switch.s
circuitBreaker5.switch.unitVoltage
circuitBreaker5.switch.unitCurrent
circuitBreaker5.useHeatPort
circuitBreaker5.Goff
circuitBreaker5.Ron
circuitBreaker5.cB_Trigger.currentSensor.p.v
circuitBreaker5.cB_Trigger.currentSensor.n.v
circuitBreaker5.cB_Trigger.p1.v
circuitBreaker5.cB_Trigger.n1.v
circuitBreaker5.cB_Trigger.const.k
circuitBreaker5.cB_Trigger.k
circuitBreaker5.p1.v
circuitBreaker5.k
circuitBreaker6.switch.v
circuitBreaker6.switch.Ron
circuitBreaker6.switch.Goff
circuitBreaker6.switch.useHeatPort
circuitBreaker6.switch.T
circuitBreaker6.switch.LossPower
circuitBreaker6.switch.T_heatPort
circuitBreaker6.switch.off
circuitBreaker6.switch.s
circuitBreaker6.switch.unitVoltage
circuitBreaker6.switch.unitCurrent
circuitBreaker6.useHeatPort
circuitBreaker6.Goff
circuitBreaker6.Ron
circuitBreaker6.cB_Trigger.const.k
circuitBreaker6.cB_Trigger.k
circuitBreaker6.k
circuitBreaker7.switch.v
circuitBreaker7.switch.Ron
circuitBreaker7.switch.Goff
circuitBreaker7.switch.useHeatPort
circuitBreaker7.switch.T
circuitBreaker7.switch.LossPower
circuitBreaker7.switch.T_heatPort
circuitBreaker7.switch.off
circuitBreaker7.switch.s
circuitBreaker7.switch.unitVoltage
circuitBreaker7.switch.unitCurrent
circuitBreaker7.useHeatPort
circuitBreaker7.Goff
circuitBreaker7.Ron
circuitBreaker7.cB_Trigger.const.k
circuitBreaker7.cB_Trigger.k
circuitBreaker7.k
simplifiedFuelCell1.constantVoltage.V
simplifiedFuelCell1.constantVoltage.n.v
simplifiedFuelCell1.resistor.R
simplifiedFuelCell1.resistor.T_ref
simplifiedFuelCell1.resistor.alpha
simplifiedFuelCell1.resistor.v
simplifiedFuelCell1.resistor.useHeatPort
simplifiedFuelCell1.resistor.T
simplifiedFuelCell1.resistor.LossPower
simplifiedFuelCell1.resistor.R_actual
simplifiedFuelCell1.pin_p.v
simplifiedFuelCell1.pin_p.i
simplifiedFuelCell1.R
simplifiedFuelCell1.L
simplifiedFuelCell1.V
simplifiedFuelCell1.constantVoltage1.V
simplifiedFuelCell1.constantVoltage1.p.v
simplifiedFuelCell1.ground.p.v
simplifiedFuelCell1.ground.p.i
simplifiedFuelCell1.resistor1.R
simplifiedFuelCell1.resistor1.T_ref
simplifiedFuelCell1.resistor1.alpha
simplifiedFuelCell1.resistor1.v
simplifiedFuelCell1.resistor1.useHeatPort
simplifiedFuelCell1.resistor1.T
simplifiedFuelCell1.resistor1.LossPower
simplifiedFuelCell1.resistor1.R_actual
simplifiedFuelCell1.pin_p1.v
simplifiedFuelCell1.pin_p1.i
inverter3.useConstantEnable
inverter3.constantEnable
inverter3.m
inverter3.fire_p[1]
inverter3.fire_p[2]
inverter3.fire_p[3]
inverter3.enableLogic.useConstantEnable
inverter3.enableLogic.constantEnable
inverter3.enableLogic.m
inverter3.enableLogic.enableConstantSource.k
inverter3.enableLogic.booleanReplicator.nout
inverter3.fire_n[1]
inverter3.fire_n[2]
inverter3.fire_n[3]
inverter3.RonTransistor
inverter3.GoffTransistor
inverter3.VkneeTransistor
inverter3.RonDiode
inverter3.GoffDiode
inverter3.VkneeDiode
inverter3.dc_p.v
inverter3.dc_p.i
inverter3.dc_n.v
inverter3.dc_n.i
inverter3.vDC
inverter3.powerDC
inverter3.ac.m
inverter3.ac.pin[1].v
inverter3.ac.pin[1].i
inverter3.ac.pin[2].v
inverter3.ac.pin[2].i
inverter3.ac.pin[3].v
inverter3.ac.pin[3].i
inverter3.powerAC[1]
inverter3.powerAC[2]
inverter3.powerAC[3]
inverter3.powerTotalAC
inverter3.useHeatPort
inverter3.T
inverter3.LossPower
inverter3.T_heatPort
inverter3.transistor_p.m
inverter3.transistor_p.v[1]
inverter3.transistor_p.v[2]
inverter3.transistor_p.v[3]
inverter3.transistor_p.i[1]
inverter3.transistor_p.i[2]
inverter3.transistor_p.i[3]
inverter3.transistor_p.plug_p.m
inverter3.transistor_p.plug_n.m
inverter3.transistor_p.Ron[1]
inverter3.transistor_p.Ron[2]
inverter3.transistor_p.Ron[3]
inverter3.transistor_p.Goff[1]
inverter3.transistor_p.Goff[2]
inverter3.transistor_p.Goff[3]
inverter3.transistor_p.Vknee[1]
inverter3.transistor_p.Vknee[2]
inverter3.transistor_p.Vknee[3]
inverter3.transistor_p.mh
inverter3.transistor_p.useHeatPort
inverter3.transistor_p.T[1]
inverter3.transistor_p.T[2]
inverter3.transistor_p.T[3]
inverter3.transistor_p.fire[1]
inverter3.transistor_p.fire[2]
inverter3.transistor_p.fire[3]
inverter3.transistor_p.idealGTOThyristor[1].v
inverter3.transistor_p.idealGTOThyristor[1].Ron
inverter3.transistor_p.idealGTOThyristor[1].Goff
inverter3.transistor_p.idealGTOThyristor[1].Vknee
inverter3.transistor_p.idealGTOThyristor[1].useHeatPort
inverter3.transistor_p.idealGTOThyristor[1].T
inverter3.transistor_p.idealGTOThyristor[1].LossPower
inverter3.transistor_p.idealGTOThyristor[1].off
inverter3.transistor_p.idealGTOThyristor[1].s
inverter3.transistor_p.idealGTOThyristor[1].unitVoltage
inverter3.transistor_p.idealGTOThyristor[1].unitCurrent
inverter3.transistor_p.idealGTOThyristor[2].v
inverter3.transistor_p.idealGTOThyristor[2].Ron
inverter3.transistor_p.idealGTOThyristor[2].Goff
inverter3.transistor_p.idealGTOThyristor[2].Vknee
inverter3.transistor_p.idealGTOThyristor[2].useHeatPort
inverter3.transistor_p.idealGTOThyristor[2].T
inverter3.transistor_p.idealGTOThyristor[2].LossPower
inverter3.transistor_p.idealGTOThyristor[2].off
inverter3.transistor_p.idealGTOThyristor[2].s
inverter3.transistor_p.idealGTOThyristor[2].unitVoltage
inverter3.transistor_p.idealGTOThyristor[2].unitCurrent
inverter3.transistor_p.idealGTOThyristor[3].v
inverter3.transistor_p.idealGTOThyristor[3].Ron
inverter3.transistor_p.idealGTOThyristor[3].Goff
inverter3.transistor_p.idealGTOThyristor[3].Vknee
inverter3.transistor_p.idealGTOThyristor[3].useHeatPort
inverter3.transistor_p.idealGTOThyristor[3].T
inverter3.transistor_p.idealGTOThyristor[3].LossPower
inverter3.transistor_p.idealGTOThyristor[3].off
inverter3.transistor_p.idealGTOThyristor[3].s
inverter3.transistor_p.idealGTOThyristor[3].unitVoltage
inverter3.transistor_p.idealGTOThyristor[3].unitCurrent
inverter3.diode_p.m
inverter3.diode_p.v[1]
inverter3.diode_p.v[2]
inverter3.diode_p.v[3]
inverter3.diode_p.i[1]
inverter3.diode_p.i[2]
inverter3.diode_p.i[3]
inverter3.diode_p.plug_p.m
inverter3.diode_p.plug_n.m
inverter3.diode_p.Ron[1]
inverter3.diode_p.Ron[2]
inverter3.diode_p.Ron[3]
inverter3.diode_p.Goff[1]
inverter3.diode_p.Goff[2]
inverter3.diode_p.Goff[3]
inverter3.diode_p.Vknee[1]
inverter3.diode_p.Vknee[2]
inverter3.diode_p.Vknee[3]
inverter3.diode_p.mh
inverter3.diode_p.useHeatPort
inverter3.diode_p.T[1]
inverter3.diode_p.T[2]
inverter3.diode_p.T[3]
inverter3.diode_p.idealDiode[1].v
inverter3.diode_p.idealDiode[1].Ron
inverter3.diode_p.idealDiode[1].Goff
inverter3.diode_p.idealDiode[1].Vknee
inverter3.diode_p.idealDiode[1].useHeatPort
inverter3.diode_p.idealDiode[1].T
inverter3.diode_p.idealDiode[1].LossPower
inverter3.diode_p.idealDiode[1].off
inverter3.diode_p.idealDiode[1].s
inverter3.diode_p.idealDiode[1].unitVoltage
inverter3.diode_p.idealDiode[1].unitCurrent
inverter3.diode_p.idealDiode[2].v
inverter3.diode_p.idealDiode[2].Ron
inverter3.diode_p.idealDiode[2].Goff
inverter3.diode_p.idealDiode[2].Vknee
inverter3.diode_p.idealDiode[2].useHeatPort
inverter3.diode_p.idealDiode[2].T
inverter3.diode_p.idealDiode[2].LossPower
inverter3.diode_p.idealDiode[2].off
inverter3.diode_p.idealDiode[2].s
inverter3.diode_p.idealDiode[2].unitVoltage
inverter3.diode_p.idealDiode[2].unitCurrent
inverter3.diode_p.idealDiode[3].v
inverter3.diode_p.idealDiode[3].Ron
inverter3.diode_p.idealDiode[3].Goff
inverter3.diode_p.idealDiode[3].Vknee
inverter3.diode_p.idealDiode[3].useHeatPort
inverter3.diode_p.idealDiode[3].T
inverter3.diode_p.idealDiode[3].LossPower
inverter3.diode_p.idealDiode[3].off
inverter3.diode_p.idealDiode[3].s
inverter3.diode_p.idealDiode[3].unitVoltage
inverter3.diode_p.idealDiode[3].unitCurrent
inverter3.star_p.m
inverter3.star_p.plug_p.m
inverter3.star_p.plug_p.pin[1].i
inverter3.star_p.plug_p.pin[2].i
inverter3.star_p.plug_p.pin[3].i
inverter3.transistor_n.m
inverter3.transistor_n.v[1]
inverter3.transistor_n.v[2]
inverter3.transistor_n.v[3]
inverter3.transistor_n.i[1]
inverter3.transistor_n.i[2]
inverter3.transistor_n.i[3]
inverter3.transistor_n.plug_p.m
inverter3.transistor_n.plug_n.m
inverter3.transistor_n.Ron[1]
inverter3.transistor_n.Ron[2]
inverter3.transistor_n.Ron[3]
inverter3.transistor_n.Goff[1]
inverter3.transistor_n.Goff[2]
inverter3.transistor_n.Goff[3]
inverter3.transistor_n.Vknee[1]
inverter3.transistor_n.Vknee[2]
inverter3.transistor_n.Vknee[3]
inverter3.transistor_n.mh
inverter3.transistor_n.useHeatPort
inverter3.transistor_n.T[1]
inverter3.transistor_n.T[2]
inverter3.transistor_n.T[3]
inverter3.transistor_n.fire[1]
inverter3.transistor_n.fire[2]
inverter3.transistor_n.fire[3]
inverter3.transistor_n.idealGTOThyristor[1].v
inverter3.transistor_n.idealGTOThyristor[1].Ron
inverter3.transistor_n.idealGTOThyristor[1].Goff
inverter3.transistor_n.idealGTOThyristor[1].Vknee
inverter3.transistor_n.idealGTOThyristor[1].useHeatPort
inverter3.transistor_n.idealGTOThyristor[1].T
inverter3.transistor_n.idealGTOThyristor[1].LossPower
inverter3.transistor_n.idealGTOThyristor[1].off
inverter3.transistor_n.idealGTOThyristor[1].s
inverter3.transistor_n.idealGTOThyristor[1].unitVoltage
inverter3.transistor_n.idealGTOThyristor[1].unitCurrent
inverter3.transistor_n.idealGTOThyristor[2].v
inverter3.transistor_n.idealGTOThyristor[2].Ron
inverter3.transistor_n.idealGTOThyristor[2].Goff
inverter3.transistor_n.idealGTOThyristor[2].Vknee
inverter3.transistor_n.idealGTOThyristor[2].useHeatPort
inverter3.transistor_n.idealGTOThyristor[2].T
inverter3.transistor_n.idealGTOThyristor[2].LossPower
inverter3.transistor_n.idealGTOThyristor[2].off
inverter3.transistor_n.idealGTOThyristor[2].s
inverter3.transistor_n.idealGTOThyristor[2].unitVoltage
inverter3.transistor_n.idealGTOThyristor[2].unitCurrent
inverter3.transistor_n.idealGTOThyristor[3].v
inverter3.transistor_n.idealGTOThyristor[3].Ron
inverter3.transistor_n.idealGTOThyristor[3].Goff
inverter3.transistor_n.idealGTOThyristor[3].Vknee
inverter3.transistor_n.idealGTOThyristor[3].useHeatPort
inverter3.transistor_n.idealGTOThyristor[3].T
inverter3.transistor_n.idealGTOThyristor[3].LossPower
inverter3.transistor_n.idealGTOThyristor[3].off
inverter3.transistor_n.idealGTOThyristor[3].s
inverter3.transistor_n.idealGTOThyristor[3].unitVoltage
inverter3.transistor_n.idealGTOThyristor[3].unitCurrent
inverter3.diode_n.m
inverter3.diode_n.v[1]
inverter3.diode_n.v[2]
inverter3.diode_n.v[3]
inverter3.diode_n.i[1]
inverter3.diode_n.i[2]
inverter3.diode_n.i[3]
inverter3.diode_n.plug_p.m
inverter3.diode_n.plug_n.m
inverter3.diode_n.Ron[1]
inverter3.diode_n.Ron[2]
inverter3.diode_n.Ron[3]
inverter3.diode_n.Goff[1]
inverter3.diode_n.Goff[2]
inverter3.diode_n.Goff[3]
inverter3.diode_n.Vknee[1]
inverter3.diode_n.Vknee[2]
inverter3.diode_n.Vknee[3]
inverter3.diode_n.mh
inverter3.diode_n.useHeatPort
inverter3.diode_n.T[1]
inverter3.diode_n.T[2]
inverter3.diode_n.T[3]
inverter3.diode_n.idealDiode[1].v
inverter3.diode_n.idealDiode[1].Ron
inverter3.diode_n.idealDiode[1].Goff
inverter3.diode_n.idealDiode[1].Vknee
inverter3.diode_n.idealDiode[1].useHeatPort
inverter3.diode_n.idealDiode[1].T
inverter3.diode_n.idealDiode[1].LossPower
inverter3.diode_n.idealDiode[1].off
inverter3.diode_n.idealDiode[1].s
inverter3.diode_n.idealDiode[1].unitVoltage
inverter3.diode_n.idealDiode[1].unitCurrent
inverter3.diode_n.idealDiode[2].v
inverter3.diode_n.idealDiode[2].Ron
inverter3.diode_n.idealDiode[2].Goff
inverter3.diode_n.idealDiode[2].Vknee
inverter3.diode_n.idealDiode[2].useHeatPort
inverter3.diode_n.idealDiode[2].T
inverter3.diode_n.idealDiode[2].LossPower
inverter3.diode_n.idealDiode[2].off
inverter3.diode_n.idealDiode[2].s
inverter3.diode_n.idealDiode[2].unitVoltage
inverter3.diode_n.idealDiode[2].unitCurrent
inverter3.diode_n.idealDiode[3].v
inverter3.diode_n.idealDiode[3].Ron
inverter3.diode_n.idealDiode[3].Goff
inverter3.diode_n.idealDiode[3].Vknee
inverter3.diode_n.idealDiode[3].useHeatPort
inverter3.diode_n.idealDiode[3].T
inverter3.diode_n.idealDiode[3].LossPower
inverter3.diode_n.idealDiode[3].off
inverter3.diode_n.idealDiode[3].s
inverter3.diode_n.idealDiode[3].unitVoltage
inverter3.diode_n.idealDiode[3].unitCurrent
inverter3.star_n.m
inverter3.star_n.plug_p.m
inverter3.star_n.plug_p.pin[1].i
inverter3.star_n.plug_p.pin[2].i
inverter3.star_n.plug_p.pin[3].i
dcdc2.RonTransistor
dcdc2.GoffTransistor
dcdc2.VkneeTransistor
dcdc2.RonDiode
dcdc2.GoffDiode
dcdc2.VkneeDiode
dcdc2.vDC1
dcdc2.powerDC1
dcdc2.dc_p2.v
dcdc2.vDC2
dcdc2.powerDC2
dcdc2.useHeatPort
dcdc2.T
dcdc2.LossPower
dcdc2.T_heatPort
dcdc2.useConstantEnable
dcdc2.constantEnable
dcdc2.m
dcdc2.enableLogic.useConstantEnable
dcdc2.enableLogic.constantEnable
dcdc2.enableLogic.m
dcdc2.enableLogic.enableConstantSource.k
dcdc2.enableLogic.booleanReplicator.nout
dcdc2.andCondition_p.y
dcdc2.fire_p
dcdc2.transistor.v
dcdc2.transistor.i
dcdc2.transistor.Ron
dcdc2.transistor.Goff
dcdc2.transistor.Vknee
dcdc2.transistor.useHeatPort
dcdc2.transistor.T
dcdc2.transistor.LossPower
dcdc2.transistor.off
dcdc2.transistor.s
dcdc2.transistor.unitVoltage
dcdc2.transistor.unitCurrent
dcdc2.diode.v
dcdc2.diode.Ron
dcdc2.diode.Goff
dcdc2.diode.Vknee
dcdc2.diode.useHeatPort
dcdc2.diode.T
dcdc2.diode.LossPower
dcdc2.diode.off
dcdc2.diode.s
dcdc2.diode.unitVoltage
dcdc2.diode.unitCurrent
signalPWM4.useConstantDutyCycle
signalPWM4.constantDutyCycle
signalPWM4.f
signalPWM4.startTime
signalPWM4.notFire
signalPWM4.const.k
signalPWM4.limiter.uMax
signalPWM4.limiter.uMin
signalPWM4.limiter.strict
signalPWM4.limiter.homotopyType
signalPWM4.limiter.limitsAtInit
signalPWM4.limiter.y
signalPWM4.greaterEqual.u1
signalPWM4.greaterEqual.u2
signalPWM4.zeroOrderHold.samplePeriod
signalPWM4.zeroOrderHold.startTime
signalPWM4.zeroOrderHold.sampleTrigger
signalPWM4.zeroOrderHold.firstTrigger
signalPWM4.zeroOrderHold.ySample
signalPWM4.sawtooth.amplitude
signalPWM4.sawtooth.period
signalPWM4.sawtooth.nperiod
signalPWM4.sawtooth.offset
signalPWM4.sawtooth.startTime
signalPWM4.sawtooth.T_start
signalPWM4.sawtooth.count
threePhaseMotor2.m
threePhaseMotor2.wref
threePhaseMotor2.aimc.m
threePhaseMotor2.aimc.p
threePhaseMotor2.aimc.fsNominal
threePhaseMotor2.aimc.TsOperational
threePhaseMotor2.aimc.Rs
threePhaseMotor2.aimc.TsRef
threePhaseMotor2.aimc.alpha20s
threePhaseMotor2.aimc.Lszero
threePhaseMotor2.aimc.Lssigma
threePhaseMotor2.aimc.Jr
threePhaseMotor2.aimc.useSupport
threePhaseMotor2.aimc.Js
threePhaseMotor2.aimc.useThermalPort
threePhaseMotor2.aimc.frictionParameters.PRef
threePhaseMotor2.aimc.frictionParameters.wRef
threePhaseMotor2.aimc.frictionParameters.power_w
threePhaseMotor2.aimc.frictionParameters.tauRef
threePhaseMotor2.aimc.frictionParameters.linear
threePhaseMotor2.aimc.frictionParameters.wLinear
threePhaseMotor2.aimc.frictionParameters.tauLinear
threePhaseMotor2.aimc.phiMechanical
threePhaseMotor2.aimc.tauElectrical
threePhaseMotor2.aimc.inertiaRotor.J
threePhaseMotor2.aimc.inertiaRotor.stateSelect
threePhaseMotor2.aimc.inertiaStator.flange_a.tau
threePhaseMotor2.aimc.inertiaStator.flange_b.tau
threePhaseMotor2.aimc.inertiaStator.J
threePhaseMotor2.aimc.inertiaStator.stateSelect
threePhaseMotor2.aimc.inertiaStator.der(phi)
threePhaseMotor2.aimc.inertiaStator.w
threePhaseMotor2.aimc.inertiaStator.der(w)
threePhaseMotor2.aimc.inertiaStator.a
threePhaseMotor2.aimc.fixed.phi0
threePhaseMotor2.aimc.friction.flange.tau
threePhaseMotor2.aimc.friction.support.tau
threePhaseMotor2.aimc.friction.phi
threePhaseMotor2.aimc.friction.tau
threePhaseMotor2.aimc.friction.frictionParameters.PRef
threePhaseMotor2.aimc.friction.frictionParameters.wRef
threePhaseMotor2.aimc.friction.frictionParameters.power_w
threePhaseMotor2.aimc.friction.frictionParameters.tauRef
threePhaseMotor2.aimc.friction.frictionParameters.linear
threePhaseMotor2.aimc.friction.frictionParameters.wLinear
threePhaseMotor2.aimc.friction.frictionParameters.tauLinear
threePhaseMotor2.aimc.friction.useHeatPort
threePhaseMotor2.aimc.friction.heatPort.T
threePhaseMotor2.aimc.friction.heatPort.Q_flow
threePhaseMotor2.aimc.friction.lossPower
threePhaseMotor2.aimc.internalSupport.tau
threePhaseMotor2.aimc.statorCoreParameters.m
threePhaseMotor2.aimc.statorCoreParameters.PRef
threePhaseMotor2.aimc.statorCoreParameters.VRef
threePhaseMotor2.aimc.statorCoreParameters.wRef
threePhaseMotor2.aimc.statorCoreParameters.ratioHysteresis
threePhaseMotor2.aimc.statorCoreParameters.GcRef
threePhaseMotor2.aimc.statorCoreParameters.wMin
threePhaseMotor2.aimc.strayLoadParameters.PRef
threePhaseMotor2.aimc.strayLoadParameters.IRef
threePhaseMotor2.aimc.strayLoadParameters.wRef
threePhaseMotor2.aimc.strayLoadParameters.power_w
threePhaseMotor2.aimc.strayLoadParameters.tauRef
threePhaseMotor2.aimc.powerBalance.powerStator
threePhaseMotor2.aimc.powerBalance.powerMechanical
threePhaseMotor2.aimc.powerBalance.powerInertiaStator
threePhaseMotor2.aimc.powerBalance.powerInertiaRotor
threePhaseMotor2.aimc.powerBalance.lossPowerTotal
threePhaseMotor2.aimc.powerBalance.lossPowerStatorWinding
threePhaseMotor2.aimc.powerBalance.lossPowerStatorCore
threePhaseMotor2.aimc.powerBalance.lossPowerRotorCore
threePhaseMotor2.aimc.powerBalance.lossPowerStrayLoad
threePhaseMotor2.aimc.powerBalance.lossPowerFriction
threePhaseMotor2.aimc.powerBalance.lossPowerRotorWinding
threePhaseMotor2.aimc.vs[1]
threePhaseMotor2.aimc.vs[2]
threePhaseMotor2.aimc.vs[3]
threePhaseMotor2.aimc.i_0_s
threePhaseMotor2.aimc.der(i_0_s)
threePhaseMotor2.aimc.idq_sr[1]
threePhaseMotor2.aimc.der(idq_sr[1])
threePhaseMotor2.aimc.idq_sr[2]
threePhaseMotor2.aimc.der(idq_sr[2])
threePhaseMotor2.aimc.idq_rs[1]
threePhaseMotor2.aimc.idq_rs[2]
threePhaseMotor2.aimc.der(idq_rs[1])
threePhaseMotor2.aimc.der(idq_rs[2])
threePhaseMotor2.aimc.idq_rr[1]
threePhaseMotor2.aimc.der(idq_rr[1])
threePhaseMotor2.aimc.idq_rr[2]
threePhaseMotor2.aimc.der(idq_rr[2])
threePhaseMotor2.aimc.plug_sp.m
threePhaseMotor2.aimc.plug_sn.m
threePhaseMotor2.aimc.plug_sn.pin[1].v
threePhaseMotor2.aimc.rs.m
threePhaseMotor2.aimc.rs.v[1]
threePhaseMotor2.aimc.rs.v[2]
threePhaseMotor2.aimc.rs.v[3]
threePhaseMotor2.aimc.rs.plug_p.m
threePhaseMotor2.aimc.rs.plug_n.m
threePhaseMotor2.aimc.rs.plug_n.pin[1].v
threePhaseMotor2.aimc.rs.plug_n.pin[2].v
threePhaseMotor2.aimc.rs.plug_n.pin[3].v
threePhaseMotor2.aimc.rs.R[1]
threePhaseMotor2.aimc.rs.R[2]
threePhaseMotor2.aimc.rs.R[3]
threePhaseMotor2.aimc.rs.T_ref[1]
threePhaseMotor2.aimc.rs.T_ref[2]
threePhaseMotor2.aimc.rs.T_ref[3]
threePhaseMotor2.aimc.rs.alpha[1]
threePhaseMotor2.aimc.rs.alpha[2]
threePhaseMotor2.aimc.rs.alpha[3]
threePhaseMotor2.aimc.rs.mh
threePhaseMotor2.aimc.rs.useHeatPort
threePhaseMotor2.aimc.rs.T[1]
threePhaseMotor2.aimc.rs.T[2]
threePhaseMotor2.aimc.rs.T[3]
threePhaseMotor2.aimc.rs.resistor[1].R
threePhaseMotor2.aimc.rs.resistor[1].T_ref
threePhaseMotor2.aimc.rs.resistor[1].alpha
threePhaseMotor2.aimc.rs.resistor[1].v
threePhaseMotor2.aimc.rs.resistor[1].useHeatPort
threePhaseMotor2.aimc.rs.resistor[1].T
threePhaseMotor2.aimc.rs.resistor[1].LossPower
threePhaseMotor2.aimc.rs.resistor[1].R_actual
threePhaseMotor2.aimc.rs.resistor[2].R
threePhaseMotor2.aimc.rs.resistor[2].T_ref
threePhaseMotor2.aimc.rs.resistor[2].alpha
threePhaseMotor2.aimc.rs.resistor[2].v
threePhaseMotor2.aimc.rs.resistor[2].useHeatPort
threePhaseMotor2.aimc.rs.resistor[2].T
threePhaseMotor2.aimc.rs.resistor[2].LossPower
threePhaseMotor2.aimc.rs.resistor[2].R_actual
threePhaseMotor2.aimc.rs.resistor[3].R
threePhaseMotor2.aimc.rs.resistor[3].T_ref
threePhaseMotor2.aimc.rs.resistor[3].alpha
threePhaseMotor2.aimc.rs.resistor[3].v
threePhaseMotor2.aimc.rs.resistor[3].useHeatPort
threePhaseMotor2.aimc.rs.resistor[3].T
threePhaseMotor2.aimc.rs.resistor[3].LossPower
threePhaseMotor2.aimc.rs.resistor[3].R_actual
threePhaseMotor2.aimc.lssigma.L[1]
threePhaseMotor2.aimc.lssigma.L[2]
threePhaseMotor2.aimc.lssigma.v_[1]
threePhaseMotor2.aimc.lssigma.v_[2]
threePhaseMotor2.aimc.lssigma.i_[1]
threePhaseMotor2.aimc.lssigma.i_[2]
threePhaseMotor2.aimc.lssigma.der(i_[1])
threePhaseMotor2.aimc.lssigma.der(i_[2])
threePhaseMotor2.aimc.lssigma.spacePhasor_a.v_[1]
threePhaseMotor2.aimc.lssigma.spacePhasor_a.v_[2]
threePhaseMotor2.aimc.lszero.v
threePhaseMotor2.aimc.lszero.i
threePhaseMotor2.aimc.lszero.der(i)
threePhaseMotor2.aimc.lszero.p.v
threePhaseMotor2.aimc.lszero.p.i
threePhaseMotor2.aimc.lszero.n.v
threePhaseMotor2.aimc.lszero.n.i
threePhaseMotor2.aimc.lszero.L
threePhaseMotor2.aimc.statorCore.coreParameters.m
threePhaseMotor2.aimc.statorCore.coreParameters.PRef
threePhaseMotor2.aimc.statorCore.coreParameters.VRef
threePhaseMotor2.aimc.statorCore.coreParameters.wRef
threePhaseMotor2.aimc.statorCore.coreParameters.ratioHysteresis
threePhaseMotor2.aimc.statorCore.coreParameters.GcRef
threePhaseMotor2.aimc.statorCore.coreParameters.wMin
threePhaseMotor2.aimc.statorCore.m
threePhaseMotor2.aimc.statorCore.turnsRatio
threePhaseMotor2.aimc.statorCore.useHeatPort
threePhaseMotor2.aimc.statorCore.heatPort.T
threePhaseMotor2.aimc.statorCore.heatPort.Q_flow
threePhaseMotor2.aimc.statorCore.lossPower
threePhaseMotor2.aimc.statorCore.spacePhasor.i_[1]
threePhaseMotor2.aimc.statorCore.spacePhasor.i_[2]
threePhaseMotor2.aimc.statorCore.Gc
threePhaseMotor2.aimc.statorCore.wLimit
threePhaseMotor2.aimc.spacePhasorS.m
threePhaseMotor2.aimc.spacePhasorS.turnsRatio
threePhaseMotor2.aimc.spacePhasorS.v[1]
threePhaseMotor2.aimc.spacePhasorS.v[2]
threePhaseMotor2.aimc.spacePhasorS.v[3]
threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[1, 1]
threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[1, 2]
threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[1, 3]
threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[2, 1]
threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[2, 2]
threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[2, 3]
threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[1, 1]
threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[1, 2]
threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[2, 1]
threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[2, 2]
threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[3, 1]
threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[3, 2]
threePhaseMotor2.aimc.spacePhasorS.plug_p.m
threePhaseMotor2.aimc.spacePhasorS.plug_n.m
threePhaseMotor2.aimc.spacePhasorS.zero.v
threePhaseMotor2.aimc.spacePhasorS.zero.i
threePhaseMotor2.aimc.spacePhasorS.ground.v
threePhaseMotor2.aimc.spacePhasorS.ground.i
threePhaseMotor2.aimc.strayLoad.m
threePhaseMotor2.aimc.strayLoad.v[1]
threePhaseMotor2.aimc.strayLoad.v[2]
threePhaseMotor2.aimc.strayLoad.v[3]
threePhaseMotor2.aimc.strayLoad.plug_p.m
threePhaseMotor2.aimc.strayLoad.plug_n.m
threePhaseMotor2.aimc.strayLoad.flange.tau
threePhaseMotor2.aimc.strayLoad.support.tau
threePhaseMotor2.aimc.strayLoad.phi
threePhaseMotor2.aimc.strayLoad.tau
threePhaseMotor2.aimc.strayLoad.strayLoadParameters.PRef
threePhaseMotor2.aimc.strayLoad.strayLoadParameters.IRef
threePhaseMotor2.aimc.strayLoad.strayLoadParameters.wRef
threePhaseMotor2.aimc.strayLoad.strayLoadParameters.power_w
threePhaseMotor2.aimc.strayLoad.strayLoadParameters.tauRef
threePhaseMotor2.aimc.strayLoad.useHeatPort
threePhaseMotor2.aimc.strayLoad.heatPort.T
threePhaseMotor2.aimc.strayLoad.heatPort.Q_flow
threePhaseMotor2.aimc.strayLoad.lossPower
threePhaseMotor2.aimc.strayLoad.iRMS
threePhaseMotor2.aimc.thermalAmbient.m
threePhaseMotor2.aimc.thermalAmbient.useTemperatureInputs
threePhaseMotor2.aimc.thermalAmbient.TDefault
threePhaseMotor2.aimc.thermalAmbient.Ts
threePhaseMotor2.aimc.thermalAmbient.Q_flowStatorWinding
threePhaseMotor2.aimc.thermalAmbient.Q_flowStatorCore
threePhaseMotor2.aimc.thermalAmbient.Q_flowRotorCore
threePhaseMotor2.aimc.thermalAmbient.Q_flowStrayLoad
threePhaseMotor2.aimc.thermalAmbient.Q_flowFriction
threePhaseMotor2.aimc.thermalAmbient.thermalPort.m
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStatorCore.T
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortRotorCore.T
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.T
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortFriction.T
threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortFriction.Q_flow
threePhaseMotor2.aimc.thermalAmbient.temperatureStatorCore.T
threePhaseMotor2.aimc.thermalAmbient.temperatureStatorCore.port.T
threePhaseMotor2.aimc.thermalAmbient.temperatureStatorCore.port.Q_flow
threePhaseMotor2.aimc.thermalAmbient.temperatureRotorCore.T
threePhaseMotor2.aimc.thermalAmbient.temperatureRotorCore.port.T
threePhaseMotor2.aimc.thermalAmbient.temperatureRotorCore.port.Q_flow
threePhaseMotor2.aimc.thermalAmbient.temperatureStrayLoad.T
threePhaseMotor2.aimc.thermalAmbient.temperatureStrayLoad.port.T
threePhaseMotor2.aimc.thermalAmbient.temperatureStrayLoad.port.Q_flow
threePhaseMotor2.aimc.thermalAmbient.temperatureFriction.T
threePhaseMotor2.aimc.thermalAmbient.temperatureFriction.port.T
threePhaseMotor2.aimc.thermalAmbient.temperatureFriction.port.Q_flow
threePhaseMotor2.aimc.thermalAmbient.constTs.k
threePhaseMotor2.aimc.thermalAmbient.thermalCollectorStator.m
threePhaseMotor2.aimc.thermalAmbient.Tr
threePhaseMotor2.aimc.thermalAmbient.Q_flowTotal
threePhaseMotor2.aimc.thermalAmbient.constTr.k
threePhaseMotor2.aimc.pi
threePhaseMotor2.aimc.internalThermalPort.m
threePhaseMotor2.aimc.internalThermalPort.heatPortStatorWinding[1].Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortStatorWinding[2].Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortStatorWinding[3].Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortStatorCore.T
threePhaseMotor2.aimc.internalThermalPort.heatPortStatorCore.Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortRotorCore.T
threePhaseMotor2.aimc.internalThermalPort.heatPortRotorCore.Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortStrayLoad.T
threePhaseMotor2.aimc.internalThermalPort.heatPortStrayLoad.Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortFriction.T
threePhaseMotor2.aimc.internalThermalPort.heatPortFriction.Q_flow
threePhaseMotor2.aimc.internalThermalPort.heatPortRotorWinding.Q_flow
threePhaseMotor2.aimc.airGapS.Lm
threePhaseMotor2.aimc.airGapS.m
threePhaseMotor2.aimc.airGapS.p
threePhaseMotor2.aimc.airGapS.gamma
threePhaseMotor2.aimc.airGapS.der(gamma)
threePhaseMotor2.aimc.airGapS.psi_ms[1]
threePhaseMotor2.aimc.airGapS.psi_ms[2]
threePhaseMotor2.aimc.airGapS.der(psi_ms[1])
threePhaseMotor2.aimc.airGapS.der(psi_ms[2])
threePhaseMotor2.aimc.airGapS.psi_mr[1]
threePhaseMotor2.aimc.airGapS.psi_mr[2]
threePhaseMotor2.aimc.airGapS.der(psi_mr[1])
threePhaseMotor2.aimc.airGapS.der(psi_mr[2])
threePhaseMotor2.aimc.airGapS.RotationMatrix[1, 1]
threePhaseMotor2.aimc.airGapS.RotationMatrix[1, 2]
threePhaseMotor2.aimc.airGapS.RotationMatrix[2, 1]
threePhaseMotor2.aimc.airGapS.RotationMatrix[2, 2]
threePhaseMotor2.aimc.airGapS.der(RotationMatrix[1, 1])
threePhaseMotor2.aimc.airGapS.der(RotationMatrix[1, 2])
threePhaseMotor2.aimc.airGapS.der(RotationMatrix[2, 1])
threePhaseMotor2.aimc.airGapS.der(RotationMatrix[2, 2])
threePhaseMotor2.aimc.airGapS.i_ms[1]
threePhaseMotor2.aimc.airGapS.i_ms[2]
threePhaseMotor2.aimc.airGapS.der(i_ms[1])
threePhaseMotor2.aimc.airGapS.der(i_ms[2])
threePhaseMotor2.aimc.airGapS.L[1, 1]
threePhaseMotor2.aimc.airGapS.L[1, 2]
threePhaseMotor2.aimc.airGapS.L[2, 1]
threePhaseMotor2.aimc.airGapS.L[2, 2]
threePhaseMotor2.aimc.Lm
threePhaseMotor2.aimc.Lrsigma
threePhaseMotor2.aimc.Rr
threePhaseMotor2.aimc.TrRef
threePhaseMotor2.aimc.alpha20r
threePhaseMotor2.aimc.TrOperational
threePhaseMotor2.aimc.squirrelCageR.Lrsigma
threePhaseMotor2.aimc.squirrelCageR.Rr
threePhaseMotor2.aimc.squirrelCageR.T_ref
threePhaseMotor2.aimc.squirrelCageR.alpha
threePhaseMotor2.aimc.squirrelCageR.useHeatPort
threePhaseMotor2.aimc.squirrelCageR.T
threePhaseMotor2.aimc.squirrelCageR.Rr_actual
threePhaseMotor2.terminalBox.m
threePhaseMotor2.terminalBox.plug_sp.m
threePhaseMotor2.terminalBox.plug_sn.m
threePhaseMotor2.terminalBox.star.m
threePhaseMotor2.terminalBox.star.plug_p.m
threePhaseMotor2.terminalBox.star.pin_n.i
threePhaseMotor2.terminalBox.plugSupply.m
threePhaseMotor2.terminalBox.starpoint.i
threePhaseMotor2.flange1.tau
threePhaseMotor2.aimcData.m
threePhaseMotor2.aimcData.Jr
threePhaseMotor2.aimcData.Js
threePhaseMotor2.aimcData.p
threePhaseMotor2.aimcData.fsNominal
threePhaseMotor2.aimcData.Rs
threePhaseMotor2.aimcData.TsRef
threePhaseMotor2.aimcData.alpha20s
threePhaseMotor2.aimcData.effectiveStatorTurns
threePhaseMotor2.aimcData.Lszero
threePhaseMotor2.aimcData.Lssigma
threePhaseMotor2.aimcData.frictionParameters.PRef
threePhaseMotor2.aimcData.frictionParameters.wRef
threePhaseMotor2.aimcData.frictionParameters.power_w
threePhaseMotor2.aimcData.frictionParameters.tauRef
threePhaseMotor2.aimcData.frictionParameters.linear
threePhaseMotor2.aimcData.frictionParameters.wLinear
threePhaseMotor2.aimcData.frictionParameters.tauLinear
threePhaseMotor2.aimcData.statorCoreParameters.m
threePhaseMotor2.aimcData.statorCoreParameters.PRef
threePhaseMotor2.aimcData.statorCoreParameters.VRef
threePhaseMotor2.aimcData.statorCoreParameters.wRef
threePhaseMotor2.aimcData.statorCoreParameters.ratioHysteresis
threePhaseMotor2.aimcData.statorCoreParameters.GcRef
threePhaseMotor2.aimcData.statorCoreParameters.wMin
threePhaseMotor2.aimcData.strayLoadParameters.PRef
threePhaseMotor2.aimcData.strayLoadParameters.IRef
threePhaseMotor2.aimcData.strayLoadParameters.wRef
threePhaseMotor2.aimcData.strayLoadParameters.power_w
threePhaseMotor2.aimcData.strayLoadParameters.tauRef
threePhaseMotor2.aimcData.Lm
threePhaseMotor2.aimcData.Lrsigma
threePhaseMotor2.aimcData.Rr
threePhaseMotor2.aimcData.TrRef
threePhaseMotor2.aimcData.alpha20r
threePhaseMotor2.plug_p1.m
threePhaseMotor2.rpm
signalPWM5[1].useConstantDutyCycle
signalPWM5[1].constantDutyCycle
signalPWM5[1].f
signalPWM5[1].startTime
signalPWM5[1].limiter.uMax
signalPWM5[1].limiter.uMin
signalPWM5[1].limiter.strict
signalPWM5[1].limiter.homotopyType
signalPWM5[1].limiter.limitsAtInit
signalPWM5[1].limiter.y
signalPWM5[1].greaterEqual.u1
signalPWM5[1].greaterEqual.u2
signalPWM5[1].zeroOrderHold.samplePeriod
signalPWM5[1].zeroOrderHold.startTime
signalPWM5[1].zeroOrderHold.sampleTrigger
signalPWM5[1].zeroOrderHold.firstTrigger
signalPWM5[1].zeroOrderHold.ySample
signalPWM5[1].sawtooth.amplitude
signalPWM5[1].sawtooth.period
signalPWM5[1].sawtooth.nperiod
signalPWM5[1].sawtooth.offset
signalPWM5[1].sawtooth.startTime
signalPWM5[1].sawtooth.T_start
signalPWM5[1].sawtooth.count
signalPWM5[2].useConstantDutyCycle
signalPWM5[2].constantDutyCycle
signalPWM5[2].f
signalPWM5[2].startTime
signalPWM5[2].limiter.uMax
signalPWM5[2].limiter.uMin
signalPWM5[2].limiter.strict
signalPWM5[2].limiter.homotopyType
signalPWM5[2].limiter.limitsAtInit
signalPWM5[2].limiter.y
signalPWM5[2].greaterEqual.u1
signalPWM5[2].greaterEqual.u2
signalPWM5[2].zeroOrderHold.samplePeriod
signalPWM5[2].zeroOrderHold.startTime
signalPWM5[2].zeroOrderHold.sampleTrigger
signalPWM5[2].zeroOrderHold.firstTrigger
signalPWM5[2].zeroOrderHold.ySample
signalPWM5[2].sawtooth.amplitude
signalPWM5[2].sawtooth.period
signalPWM5[2].sawtooth.nperiod
signalPWM5[2].sawtooth.offset
signalPWM5[2].sawtooth.startTime
signalPWM5[2].sawtooth.T_start
signalPWM5[2].sawtooth.count
signalPWM5[3].useConstantDutyCycle
signalPWM5[3].constantDutyCycle
signalPWM5[3].f
signalPWM5[3].startTime
signalPWM5[3].limiter.uMax
signalPWM5[3].limiter.uMin
signalPWM5[3].limiter.strict
signalPWM5[3].limiter.homotopyType
signalPWM5[3].limiter.limitsAtInit
signalPWM5[3].limiter.y
signalPWM5[3].greaterEqual.u1
signalPWM5[3].greaterEqual.u2
signalPWM5[3].zeroOrderHold.samplePeriod
signalPWM5[3].zeroOrderHold.startTime
signalPWM5[3].zeroOrderHold.sampleTrigger
signalPWM5[3].zeroOrderHold.firstTrigger
signalPWM5[3].zeroOrderHold.ySample
signalPWM5[3].sawtooth.amplitude
signalPWM5[3].sawtooth.period
signalPWM5[3].sawtooth.nperiod
signalPWM5[3].sawtooth.offset
signalPWM5[3].sawtooth.startTime
signalPWM5[3].sawtooth.T_start
signalPWM5[3].sawtooth.count
variableSpeedDrive_ThreePhase2.speedSensor.flange.phi
variableSpeedDrive_ThreePhase2.speedSensor.flange.der(phi)
variableSpeedDrive_ThreePhase2.speedSensor.flange.tau
variableSpeedDrive_ThreePhase2.currentController.k
variableSpeedDrive_ThreePhase2.currentController.T
variableSpeedDrive_ThreePhase2.currentController.initType
variableSpeedDrive_ThreePhase2.currentController.x_start
variableSpeedDrive_ThreePhase2.currentController.y_start
variableSpeedDrive_ThreePhase2.currentController.u
variableSpeedDrive_ThreePhase2.currentController.x
variableSpeedDrive_ThreePhase2.currentController.der(x)
variableSpeedDrive_ThreePhase2.flange1.tau
variableSpeedDrive_ThreePhase2.y1[1]
variableSpeedDrive_ThreePhase2.const.k
variableSpeedDrive_ThreePhase2.wref
variableSpeedDrive_ThreePhase2.T
variableSpeedDrive_ThreePhase2.k
fan2.inertia.flange_b.tau
fan2.inertia.J
fan2.inertia.stateSelect
fan2.inertia.w
fan2.inertia.der(w)
fan2.J
fan2.deltaPhi
resistor.R
resistor.T_ref
resistor.alpha
resistor.v
resistor.useHeatPort
resistor.T
resistor.LossPower
resistor.R_actual
resistor1.R
resistor1.T_ref
resistor1.alpha
resistor1.v
resistor1.useHeatPort
resistor1.T
resistor1.LossPower
resistor1.R_actual
hTS_exploss.temperature
hTS_exploss.l
hTS_exploss.E_0
hTS_exploss.n
hTS_exploss.I_c
hTS_exploss.E
hTS_exploss.R
hTS_exploss1.temperature
hTS_exploss1.l
hTS_exploss1.E_0
hTS_exploss1.n
hTS_exploss1.I_c
hTS_exploss1.E
hTS_exploss1.R
batteryPack.core.sensors.signals.i_sns
batteryPack.core.sensors.signals.cell_i_sns
batteryPack.electrical.sensors.signals.core_i_sns
batteryPack.electrical.sensors.signals.core_p_sns
batteryPack.electrical.sensors.signals.link_i_sns
batteryPack.electrical.sensors.signals.link_p_sns
batteryPack.thermal.adaptAmbient.battery.ambient.Q_flow
batteryPack.thermal.adaptCellsLumped.battery.cellsLumped.Q_flow
batteryPack.thermal.sensors.signals.T_core_sns[1, 1]
batteryPack.controller.core[1, 1].cell_i_sns
batteryPack.controller.core[1, 1].i_sns
batteryPack.core.signals.cell_i_sns
batteryPack.core.signals.i_sns
batteryPack.controller.electrical.core_i_sns
batteryPack.controller.electrical.core_p_sns
batteryPack.controller.electrical.link_i_sns
batteryPack.controller.electrical.link_p_sns
batteryPack.electrical.signals.core_i_sns
batteryPack.electrical.signals.core_p_sns
batteryPack.electrical.signals.link_i_sns
batteryPack.electrical.signals.link_p_sns
batteryPack.controller.thermal.T_core_sns[1, 1]
batteryPack.thermal.signals.T_core_sns[1, 1]

double initialValue(3121,6)
 -1  3.1415926535897931E+00       0                       0                
  1   280   # pi
  0       3                       0                       0                
  6   258   # m
  0       1                       0                       0                
  6   256   # simplifiedFuelCell.constantVoltage.V
  0       0                       0                       0                
  6   260   # simplifiedFuelCell.constantVoltage.n.v
  0       1                       0                       0                
  6   256   # simplifiedFuelCell.resistor.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # simplifiedFuelCell.resistor.T_ref
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell.resistor.alpha
  0       0                       0                       0                
  6   256   # simplifiedFuelCell.resistor.v
  0       0                       0                       0                
  6   769   # simplifiedFuelCell.resistor.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # simplifiedFuelCell.resistor.T
  0       0                       0                       0                
  6   256   # simplifiedFuelCell.resistor.LossPower
  0       0                       0                       0                
  6   256   # simplifiedFuelCell.resistor.R_actual
  0       0                       0                       0                
  6   260   # simplifiedFuelCell.pin_p.v
  0       0                       0                       0                
  6   388   # simplifiedFuelCell.pin_p.i
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell.R
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell.L
 -1    1000                       0                       0                
  1   280   # simplifiedFuelCell.V
  0       1                       0                       0                
  6   256   # simplifiedFuelCell.constantVoltage1.V
  0       0                       0                       0                
  6   260   # simplifiedFuelCell.constantVoltage1.p.v
  0       0                       0                       0                
  6   260   # simplifiedFuelCell.ground.p.v
  0       0                       0                       0                
  6   388   # simplifiedFuelCell.ground.p.i
  0       1                       0                       0                
  6   256   # simplifiedFuelCell.resistor1.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # simplifiedFuelCell.resistor1.T_ref
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell.resistor1.alpha
  0       0                       0                       0                
  6   256   # simplifiedFuelCell.resistor1.v
  0       0                       0                       0                
  6   769   # simplifiedFuelCell.resistor1.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # simplifiedFuelCell.resistor1.T
  0       0                       0                       0                
  6   256   # simplifiedFuelCell.resistor1.LossPower
  0       0                       0                       0                
  6   256   # simplifiedFuelCell.resistor1.R_actual
  0       0                       0                       0                
  6   260   # simplifiedFuelCell.pin_p1.v
  0       0                       0                       0                
  6   388   # simplifiedFuelCell.pin_p1.i
  0       1                       0                       0                
  6   257   # inverter2.useConstantEnable
 -1       1                       0                       0                
  1   281   # inverter2.constantEnable
  0       3                       3                 1.0000000000000000E+100
  6   258   # inverter2.m
  0       0                       0                       0                
  6   321   # inverter2.fire_p[1]
  0       0                       0                       0                
  6   321   # inverter2.fire_p[2]
  0       0                       0                       0                
  6   321   # inverter2.fire_p[3]
  0       1                       0                       0                
  6   257   # inverter2.enableLogic.useConstantEnable
  0       0                       0                       0                
  6   257   # inverter2.enableLogic.constantEnable
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.enableLogic.m
  0       0                       0                       0                
  6   257   # inverter2.enableLogic.enableConstantSource.k
  0       3                       0                       0                
  6   258   # inverter2.enableLogic.booleanReplicator.nout
  0       0                       0                       0                
  6   321   # inverter2.fire_n[1]
  0       0                       0                       0                
  6   321   # inverter2.fire_n[2]
  0       0                       0                       0                
  6   321   # inverter2.fire_n[3]
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter2.RonTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter2.GoffTransistor
 -1       0                       0                       0                
  1   280   # inverter2.VkneeTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter2.RonDiode
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter2.GoffDiode
 -1       0                       0                       0                
  1   280   # inverter2.VkneeDiode
  0       0                       0                       0                
  6   260   # inverter2.dc_p.v
  0       0                       0                       0                
  6   388   # inverter2.dc_p.i
  0       0                       0                       0                
  6   260   # inverter2.dc_n.v
  0       0                       0                       0                
  6   388   # inverter2.dc_n.i
  0       0                       0                       0                
  6   256   # inverter2.vDC
  0       0                       0                       0                
  6   256   # inverter2.powerDC
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.ac.m
  0       0                       0                       0                
  6   260   # inverter2.ac.pin[1].v
  0       0                       0                       0                
  6   388   # inverter2.ac.pin[1].i
  0       0                       0                       0                
  6   260   # inverter2.ac.pin[2].v
  0       0                       0                       0                
  6   388   # inverter2.ac.pin[2].i
  0       0                       0                       0                
  6   260   # inverter2.ac.pin[3].v
  0       0                       0                       0                
  6   388   # inverter2.ac.pin[3].i
  0       0                       0                       0                
  6   256   # inverter2.powerAC[1]
  0       0                       0                       0                
  6   256   # inverter2.powerAC[2]
  0       0                       0                       0                
  6   256   # inverter2.powerAC[3]
  0       0                       0                       0                
  6   256   # inverter2.powerTotalAC
  0       0                       0                       0                
  6   769   # inverter2.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.T
  0       0                       0                       0                
  6   256   # inverter2.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.T_heatPort
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.transistor_p.m
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.v[1]
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.v[2]
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.v[3]
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.i[1]
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.i[2]
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.transistor_p.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.transistor_p.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.transistor_p.mh
  0       0                       0                       0                
  6   769   # inverter2.transistor_p.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.T[3]
  0       0                       0                       0                
  6   321   # inverter2.transistor_p.fire[1]
  0       0                       0                       0                
  6   321   # inverter2.transistor_p.fire[2]
  0       0                       0                       0                
  6   321   # inverter2.transistor_p.fire[3]
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.idealGTOThyristor[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[1].Vknee
  0       0                       0                       0                
  6   769   # inverter2.transistor_p.idealGTOThyristor[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.transistor_p.idealGTOThyristor[1].T
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.idealGTOThyristor[1].LossPower
  0       1                       0                       0                
  6   353   # inverter2.transistor_p.idealGTOThyristor[1].off
  0       0                       0                       0                
  6  1280   # inverter2.transistor_p.idealGTOThyristor[1].s
  0       1                       0                       0                
  6   768   # inverter2.transistor_p.idealGTOThyristor[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.transistor_p.idealGTOThyristor[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.idealGTOThyristor[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[2].Vknee
  0       0                       0                       0                
  6   769   # inverter2.transistor_p.idealGTOThyristor[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.transistor_p.idealGTOThyristor[2].T
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.idealGTOThyristor[2].LossPower
  0       1                       0                       0                
  6   353   # inverter2.transistor_p.idealGTOThyristor[2].off
  0       0                       0                       0                
  6  1280   # inverter2.transistor_p.idealGTOThyristor[2].s
  0       1                       0                       0                
  6   768   # inverter2.transistor_p.idealGTOThyristor[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.transistor_p.idealGTOThyristor[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.idealGTOThyristor[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_p.idealGTOThyristor[3].Vknee
  0       0                       0                       0                
  6   769   # inverter2.transistor_p.idealGTOThyristor[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.transistor_p.idealGTOThyristor[3].T
  0       0                       0                       0                
  6   256   # inverter2.transistor_p.idealGTOThyristor[3].LossPower
  0       1                       0                       0                
  6   353   # inverter2.transistor_p.idealGTOThyristor[3].off
  0       0                       0                       0                
  6  1280   # inverter2.transistor_p.idealGTOThyristor[3].s
  0       1                       0                       0                
  6   768   # inverter2.transistor_p.idealGTOThyristor[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.transistor_p.idealGTOThyristor[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.diode_p.m
  0       0                       0                       0                
  6   256   # inverter2.diode_p.v[1]
  0       0                       0                       0                
  6   256   # inverter2.diode_p.v[2]
  0       0                       0                       0                
  6   256   # inverter2.diode_p.v[3]
  0       0                       0                       0                
  6   256   # inverter2.diode_p.i[1]
  0       0                       0                       0                
  6   256   # inverter2.diode_p.i[2]
  0       0                       0                       0                
  6   256   # inverter2.diode_p.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.diode_p.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.diode_p.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.diode_p.mh
  0       0                       0                       0                
  6   769   # inverter2.diode_p.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.T[3]
  0       0                       0                       0                
  6   256   # inverter2.diode_p.idealDiode[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # inverter2.diode_p.idealDiode[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.diode_p.idealDiode[1].T
  0       0                       0                       0                
  6   256   # inverter2.diode_p.idealDiode[1].LossPower
  0       1                       0                       0                
  6   353   # inverter2.diode_p.idealDiode[1].off
  0       0                       0                       0                
  6  1280   # inverter2.diode_p.idealDiode[1].s
  0       1                       0                       0                
  6   768   # inverter2.diode_p.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.diode_p.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.diode_p.idealDiode[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # inverter2.diode_p.idealDiode[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.diode_p.idealDiode[2].T
  0       0                       0                       0                
  6   256   # inverter2.diode_p.idealDiode[2].LossPower
  0       1                       0                       0                
  6   353   # inverter2.diode_p.idealDiode[2].off
  0       0                       0                       0                
  6  1280   # inverter2.diode_p.idealDiode[2].s
  0       1                       0                       0                
  6   768   # inverter2.diode_p.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.diode_p.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.diode_p.idealDiode[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_p.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # inverter2.diode_p.idealDiode[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.diode_p.idealDiode[3].T
  0       0                       0                       0                
  6   256   # inverter2.diode_p.idealDiode[3].LossPower
  0       1                       0                       0                
  6   353   # inverter2.diode_p.idealDiode[3].off
  0       0                       0                       0                
  6  1280   # inverter2.diode_p.idealDiode[3].s
  0       1                       0                       0                
  6   768   # inverter2.diode_p.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.diode_p.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.star_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.star_p.plug_p.m
  0       0                       0                       0                
  6   388   # inverter2.star_p.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # inverter2.star_p.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # inverter2.star_p.plug_p.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.transistor_n.m
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.v[1]
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.v[2]
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.v[3]
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.i[1]
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.i[2]
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.transistor_n.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.transistor_n.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.transistor_n.mh
  0       0                       0                       0                
  6   769   # inverter2.transistor_n.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.T[3]
  0       0                       0                       0                
  6   321   # inverter2.transistor_n.fire[1]
  0       0                       0                       0                
  6   321   # inverter2.transistor_n.fire[2]
  0       0                       0                       0                
  6   321   # inverter2.transistor_n.fire[3]
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.idealGTOThyristor[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[1].Vknee
  0       0                       0                       0                
  6   769   # inverter2.transistor_n.idealGTOThyristor[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.transistor_n.idealGTOThyristor[1].T
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.idealGTOThyristor[1].LossPower
  0       1                       0                       0                
  6   353   # inverter2.transistor_n.idealGTOThyristor[1].off
  0       0                       0                       0                
  6  1280   # inverter2.transistor_n.idealGTOThyristor[1].s
  0       1                       0                       0                
  6   768   # inverter2.transistor_n.idealGTOThyristor[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.transistor_n.idealGTOThyristor[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.idealGTOThyristor[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[2].Vknee
  0       0                       0                       0                
  6   769   # inverter2.transistor_n.idealGTOThyristor[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.transistor_n.idealGTOThyristor[2].T
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.idealGTOThyristor[2].LossPower
  0       1                       0                       0                
  6   353   # inverter2.transistor_n.idealGTOThyristor[2].off
  0       0                       0                       0                
  6  1280   # inverter2.transistor_n.idealGTOThyristor[2].s
  0       1                       0                       0                
  6   768   # inverter2.transistor_n.idealGTOThyristor[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.transistor_n.idealGTOThyristor[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.idealGTOThyristor[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.transistor_n.idealGTOThyristor[3].Vknee
  0       0                       0                       0                
  6   769   # inverter2.transistor_n.idealGTOThyristor[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.transistor_n.idealGTOThyristor[3].T
  0       0                       0                       0                
  6   256   # inverter2.transistor_n.idealGTOThyristor[3].LossPower
  0       1                       0                       0                
  6   353   # inverter2.transistor_n.idealGTOThyristor[3].off
  0       0                       0                       0                
  6  1280   # inverter2.transistor_n.idealGTOThyristor[3].s
  0       1                       0                       0                
  6   768   # inverter2.transistor_n.idealGTOThyristor[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.transistor_n.idealGTOThyristor[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.diode_n.m
  0       0                       0                       0                
  6   256   # inverter2.diode_n.v[1]
  0       0                       0                       0                
  6   256   # inverter2.diode_n.v[2]
  0       0                       0                       0                
  6   256   # inverter2.diode_n.v[3]
  0       0                       0                       0                
  6   256   # inverter2.diode_n.i[1]
  0       0                       0                       0                
  6   256   # inverter2.diode_n.i[2]
  0       0                       0                       0                
  6   256   # inverter2.diode_n.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.diode_n.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.diode_n.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.diode_n.mh
  0       0                       0                       0                
  6   769   # inverter2.diode_n.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.T[3]
  0       0                       0                       0                
  6   256   # inverter2.diode_n.idealDiode[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # inverter2.diode_n.idealDiode[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.diode_n.idealDiode[1].T
  0       0                       0                       0                
  6   256   # inverter2.diode_n.idealDiode[1].LossPower
  0       1                       0                       0                
  6   353   # inverter2.diode_n.idealDiode[1].off
  0       0                       0                       0                
  6  1280   # inverter2.diode_n.idealDiode[1].s
  0       1                       0                       0                
  6   768   # inverter2.diode_n.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.diode_n.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.diode_n.idealDiode[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # inverter2.diode_n.idealDiode[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.diode_n.idealDiode[2].T
  0       0                       0                       0                
  6   256   # inverter2.diode_n.idealDiode[2].LossPower
  0       1                       0                       0                
  6   353   # inverter2.diode_n.idealDiode[2].off
  0       0                       0                       0                
  6  1280   # inverter2.diode_n.idealDiode[2].s
  0       1                       0                       0                
  6   768   # inverter2.diode_n.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.diode_n.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter2.diode_n.idealDiode[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter2.diode_n.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # inverter2.diode_n.idealDiode[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter2.diode_n.idealDiode[3].T
  0       0                       0                       0                
  6   256   # inverter2.diode_n.idealDiode[3].LossPower
  0       1                       0                       0                
  6   353   # inverter2.diode_n.idealDiode[3].off
  0       0                       0                       0                
  6  1280   # inverter2.diode_n.idealDiode[3].s
  0       1                       0                       0                
  6   768   # inverter2.diode_n.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter2.diode_n.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter2.star_n.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter2.star_n.plug_p.m
  0       0                       0                       0                
  6   388   # inverter2.star_n.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # inverter2.star_n.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # inverter2.star_n.plug_p.pin[3].i
 -1  1.0000000000000001E-05       0                       0                
  1   280   # dcdc.RonTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # dcdc.GoffTransistor
 -1       0                       0                       0                
  1   280   # dcdc.VkneeTransistor
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # dcdc.RonDiode
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # dcdc.GoffDiode
 -1       0                       0                 1.0000000000000000E+100
  1   280   # dcdc.VkneeDiode
  0       0                       0                       0                
  6   256   # dcdc.vDC1
  0       0                       0                       0                
  6   256   # dcdc.powerDC1
  0       0                       0                       0                
  6   260   # dcdc.dc_p2.v
  0       0                       0                       0                
  6   256   # dcdc.vDC2
  0       0                       0                       0                
  6   256   # dcdc.powerDC2
  0       0                       0                       0                
  6   769   # dcdc.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dcdc.T
  0       0                       0                       0                
  6   256   # dcdc.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dcdc.T_heatPort
  0       1                       0                       0                
  6   257   # dcdc.useConstantEnable
 -1       1                       0                       0                
  1   281   # dcdc.constantEnable
  0       1                       1                 1.0000000000000000E+100
  6   258   # dcdc.m
  0       1                       0                       0                
  6   257   # dcdc.enableLogic.useConstantEnable
  0       0                       0                       0                
  6   257   # dcdc.enableLogic.constantEnable
  0       1                       1                 1.0000000000000000E+100
  6   258   # dcdc.enableLogic.m
  0       0                       0                       0                
  6   257   # dcdc.enableLogic.enableConstantSource.k
  0       1                       0                       0                
  6   258   # dcdc.enableLogic.booleanReplicator.nout
  0       0                       0                       0                
  6   321   # dcdc.andCondition_p.y
  0       0                       0                       0                
  6   321   # dcdc.fire_p
  0       0                       0                       0                
  6   256   # dcdc.transistor.v
  0       0                       0                       0                
  6   256   # dcdc.transistor.i
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.transistor.Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.transistor.Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.transistor.Vknee
  0       0                       0                       0                
  6   769   # dcdc.transistor.useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # dcdc.transistor.T
  0       0                       0                       0                
  6   256   # dcdc.transistor.LossPower
  0       1                       0                       0                
  6   353   # dcdc.transistor.off
  0       0                       0                       0                
  6  1280   # dcdc.transistor.s
  0       1                       0                       0                
  6   768   # dcdc.transistor.unitVoltage
  0       1                       0                       0                
  6   768   # dcdc.transistor.unitCurrent
  0       0                       0                       0                
  6   256   # dcdc.diode.v
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.diode.Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.diode.Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.diode.Vknee
  0       0                       0                       0                
  6   769   # dcdc.diode.useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # dcdc.diode.T
  0       0                       0                       0                
  6   256   # dcdc.diode.LossPower
  0       1                       0                       0                
  6   353   # dcdc.diode.off
  0       0                       0                       0                
  6  1280   # dcdc.diode.s
  0       1                       0                       0                
  6   768   # dcdc.diode.unitVoltage
  0       1                       0                       0                
  6   768   # dcdc.diode.unitCurrent
  0       1                       0                       0                
  6   257   # signalPWM2.useConstantDutyCycle
 -1  5.9999999999999998E-01       0                       0                
  1   280   # signalPWM2.constantDutyCycle
 -1     100                       0                       0                
  1   280   # signalPWM2.f
 -1       0                       0                       0                
  1   280   # signalPWM2.startTime
  0       0                       0                       0                
  6   321   # signalPWM2.notFire
  0       1                       0                       0                
  6   256   # signalPWM2.const.k
 -1       1                       0                       0                
  1   280   # signalPWM2.limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM2.limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM2.limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM2.limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM2.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM2.limiter.y
  0       0                       0                       0                
  6   256   # signalPWM2.greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM2.greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM2.zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM2.zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM2.zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM2.zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM2.zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM2.sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM2.sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM2.sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM2.sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM2.sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM2.sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM2.sawtooth.count
 -1       3                       0                       0                
  1   282   # threePhaseMotor.m
 -1    4000                       0                       0                
  1   280   # threePhaseMotor.wref
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.m
  0       2                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.aimc.p
  0      50                       0                       0                
  6   256   # threePhaseMotor.aimc.fsNominal
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimc.TsOperational
  0  2.9999999999999999E-02       0                       0                
  6   256   # threePhaseMotor.aimc.Rs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.TsRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.alpha20s
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.Lszero
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.Lssigma
  0  2.8999999999999998E-01       0                       0                
  6   256   # threePhaseMotor.aimc.Jr
  0       0                       0                       0                
  6   257   # threePhaseMotor.aimc.useSupport
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.Js
  0       0                       0                       0                
  6   257   # threePhaseMotor.aimc.useThermalPort
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor.aimc.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.frictionParameters.tauLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.phiMechanical
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.tauElectrical
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.inertiaRotor.J
  0       3                       1                       5                
  6   770   # threePhaseMotor.aimc.inertiaRotor.stateSelect
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.inertiaStator.flange_a.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.inertiaStator.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.inertiaStator.J
  0       3                       1                       5                
  6   770   # threePhaseMotor.aimc.inertiaStator.stateSelect
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.inertiaStator.der(phi)
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.inertiaStator.w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.inertiaStator.der(w)
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.inertiaStator.a
 -1       0                       0                       0                
  1   280   # threePhaseMotor.aimc.fixed.phi0
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.friction.flange.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.friction.support.tau
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.friction.phi
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.friction.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.friction.frictionParameters.tauLinear
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.friction.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.friction.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.friction.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.friction.lossPower
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalSupport.tau
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCoreParameters.PRef
  0     100                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor.aimc.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoadParameters.PRef
  0     100                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.powerStator
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.powerMechanical
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.powerInertiaStator
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.powerInertiaRotor
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerTotal
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerStatorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerStatorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerRotorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerStrayLoad
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerFriction
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.powerBalance.lossPowerRotorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.vs[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.vs[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.vs[3]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.i_0_s
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.der(i_0_s)
 -1       0                       0                       0                
  2   280   # threePhaseMotor.aimc.idq_sr[1]
  0       0                       0                       0                
  3   256   # threePhaseMotor.aimc.der(idq_sr[1])
 -1       0                       0                       0                
  2   280   # threePhaseMotor.aimc.idq_sr[2]
  0       0                       0                       0                
  3   256   # threePhaseMotor.aimc.der(idq_sr[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.idq_rs[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.idq_rs[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.der(idq_rs[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.der(idq_rs[2])
 -1       0                       0                       0                
  2   280   # threePhaseMotor.aimc.idq_rr[1]
  0       0                       0                       0                
  3   256   # threePhaseMotor.aimc.der(idq_rr[1])
 -1       0                       0                       0                
  2   280   # threePhaseMotor.aimc.idq_rr[2]
  0       0                       0                       0                
  3   256   # threePhaseMotor.aimc.der(idq_rr[2])
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.plug_sn.m
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.plug_sn.pin[1].v
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.aimc.rs.m
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.rs.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.rs.plug_n.m
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.rs.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.rs.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.rs.plug_n.pin[3].v
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.R[1]
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.R[2]
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.R[3]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.T_ref[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.T_ref[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.T_ref[3]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.alpha[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.alpha[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.alpha[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.aimc.rs.mh
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.rs.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.T[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.T[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.T[3]
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[1].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.resistor[1].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[1].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[1].v
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.rs.resistor[1].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.resistor[1].T
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[1].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[1].R_actual
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[2].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.resistor[2].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[2].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[2].v
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.rs.resistor[2].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.resistor[2].T
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[2].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[2].R_actual
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[3].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.resistor[3].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[3].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[3].v
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.rs.resistor[3].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.rs.resistor[3].T
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[3].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.rs.resistor[3].R_actual
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.L[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.L[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.v_[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.v_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.i_[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.i_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.der(i_[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lssigma.der(i_[2])
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.lssigma.spacePhasor_a.v_[1]
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.lssigma.spacePhasor_a.v_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lszero.v
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lszero.i
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.lszero.der(i)
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.lszero.p.v
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.lszero.p.i
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.lszero.n.v
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.lszero.n.i
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.lszero.L
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.statorCore.coreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCore.coreParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCore.coreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCore.coreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor.aimc.statorCore.coreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.statorCore.coreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.statorCore.coreParameters.wMin
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.statorCore.m
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.statorCore.turnsRatio
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.statorCore.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.statorCore.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.statorCore.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.statorCore.lossPower
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.statorCore.spacePhasor.i_[1]
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.statorCore.spacePhasor.i_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.statorCore.Gc
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.statorCore.wLimit
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.spacePhasorS.m
  0       1                       0                       0                
  6   256   # threePhaseMotor.aimc.spacePhasorS.turnsRatio
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.spacePhasorS.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.spacePhasorS.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.spacePhasorS.v[3]
  0  6.6666666666666663E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[1, 1]
  0 -3.3333333333333315E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[1, 2]
  0 -3.3333333333333359E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[1, 3]
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[2, 1]
  0  5.7735026918962573E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[2, 2]
  0 -5.7735026918962551E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.TransformationMatrix[2, 3]
  0       1                       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.InverseTransformation[1, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.InverseTransformation[1, 2]
  0 -4.9999999999999978E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.InverseTransformation[2, 1]
  0  8.6602540378443871E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.InverseTransformation[2, 2]
  0 -5.0000000000000044E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.InverseTransformation[3, 1]
  0 -8.6602540378443837E-01       0                       0                
  6  1280   # threePhaseMotor.aimc.spacePhasorS.InverseTransformation[3, 2]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.spacePhasorS.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.spacePhasorS.plug_n.m
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.spacePhasorS.zero.v
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.spacePhasorS.zero.i
  0       0                       0                       0                
  6   260   # threePhaseMotor.aimc.spacePhasorS.ground.v
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.spacePhasorS.ground.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.aimc.strayLoad.m
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.strayLoad.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.aimc.strayLoad.plug_n.m
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.strayLoad.flange.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.strayLoad.support.tau
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.phi
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoad.strayLoadParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoad.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoad.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.strayLoad.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.strayLoadParameters.tauRef
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.strayLoad.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.strayLoad.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.strayLoad.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.lossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.strayLoad.iRMS
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.thermalAmbient.m
  0       0                       0                       0                
  6   257   # threePhaseMotor.aimc.thermalAmbient.useTemperatureInputs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.TDefault
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.Ts
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.thermalAmbient.Q_flowStatorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.thermalAmbient.Q_flowStatorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.thermalAmbient.Q_flowRotorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.thermalAmbient.Q_flowStrayLoad
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.thermalAmbient.Q_flowFriction
  0       3                       0                       0                
  6   262   # threePhaseMotor.aimc.thermalAmbient.thermalPort.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortFriction.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.thermalPort.heatPortFriction.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.temperatureStatorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.temperatureStatorCore.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.temperatureStatorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.temperatureRotorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.temperatureRotorCore.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.temperatureRotorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.temperatureStrayLoad.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.temperatureStrayLoad.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.temperatureStrayLoad.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.temperatureFriction.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor.aimc.thermalAmbient.temperatureFriction.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor.aimc.thermalAmbient.temperatureFriction.port.Q_flow
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.constTs.k
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.aimc.thermalAmbient.thermalCollectorStator.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.Tr
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.thermalAmbient.Q_flowTotal
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.thermalAmbient.constTr.k
  0  3.1415926535897931E+00       0                       0                
  6  1280   # threePhaseMotor.aimc.pi
  0       3                       0                       0                
  6  1286   # threePhaseMotor.aimc.internalThermalPort.m
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortStatorWinding[1].Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortStatorWinding[2].Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortStatorWinding[3].Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor.aimc.internalThermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor.aimc.internalThermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor.aimc.internalThermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor.aimc.internalThermalPort.heatPortFriction.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortFriction.Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor.aimc.internalThermalPort.heatPortRotorWinding.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.Lm
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimc.airGapS.m
  0       1                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.aimc.airGapS.p
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.gamma
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(gamma)
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.psi_ms[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.psi_ms[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(psi_ms[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(psi_ms[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.psi_mr[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.psi_mr[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(psi_mr[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(psi_mr[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.RotationMatrix[1, 1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.RotationMatrix[1, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.RotationMatrix[2, 1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.RotationMatrix[2, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(RotationMatrix[1, 1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(RotationMatrix[1, 2])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(RotationMatrix[2, 1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(RotationMatrix[2, 2])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.i_ms[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.i_ms[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(i_ms[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.airGapS.der(i_ms[2])
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.airGapS.L[1, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.airGapS.L[1, 2]
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.airGapS.L[2, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor.aimc.airGapS.L[2, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.Lm
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.Lrsigma
  0  4.0000000000000001E-02       0                       0                
  6   256   # threePhaseMotor.aimc.Rr
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.TrRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.alpha20r
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimc.TrOperational
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.squirrelCageR.Lrsigma
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.squirrelCageR.Rr
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.squirrelCageR.T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.squirrelCageR.alpha
  0       1                       0                       0                
  6   769   # threePhaseMotor.aimc.squirrelCageR.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimc.squirrelCageR.T
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimc.squirrelCageR.Rr_actual
  0       3                       0                       0                
  6   258   # threePhaseMotor.terminalBox.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.terminalBox.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.terminalBox.plug_sn.m
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor.terminalBox.star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.terminalBox.star.plug_p.m
  0       0                       0                       0                
  6   388   # threePhaseMotor.terminalBox.star.pin_n.i
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.terminalBox.plugSupply.m
  0       0                       0                       0                
  6   388   # threePhaseMotor.terminalBox.starpoint.i
  0       0                       0                       0                
  6   388   # threePhaseMotor.flange1.tau
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimcData.m
 -1  2.8999999999999998E-01       0                       0                
  1   280   # threePhaseMotor.aimcData.Jr
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.Js
 -1       2                       1                 1.0000000000000000E+100
  1   282   # threePhaseMotor.aimcData.p
 -1      50                       0                       0                
  1   280   # threePhaseMotor.aimcData.fsNominal
 -1  2.9999999999999999E-02       0                       0                
  1   280   # threePhaseMotor.aimcData.Rs
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimcData.TsRef
 -1       0                       0                       0                
  1   280   # threePhaseMotor.aimcData.alpha20s
 -1       1                       0                       0                
  1   280   # threePhaseMotor.aimcData.effectiveStatorTurns
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.Lszero
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.Lssigma
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimcData.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimcData.frictionParameters.wRef
 -1       2                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimcData.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor.aimcData.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.frictionParameters.tauLinear
  0       3                       0                       0                
  6   258   # threePhaseMotor.aimcData.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimcData.statorCoreParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimcData.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimcData.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor.aimcData.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimcData.strayLoadParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimcData.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor.aimcData.strayLoadParameters.wRef
 -1       1                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimcData.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.Lm
  0       0                       0                       0                
  6   256   # threePhaseMotor.aimcData.Lrsigma
 -1  4.0000000000000001E-02       0                       0                
  1   280   # threePhaseMotor.aimcData.Rr
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor.aimcData.TrRef
 -1       0                       0                       0                
  1   280   # threePhaseMotor.aimcData.alpha20r
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor.plug_p1.m
  0       0                       0                       0                
  6  1280   # threePhaseMotor.rpm
  0       0                       0                       0                
  6   257   # signalPWM[1].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM[1].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM[1].f
 -1       0                       0                       0                
  1   280   # signalPWM[1].startTime
 -1       1                       0                       0                
  1   280   # signalPWM[1].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM[1].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM[1].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM[1].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM[1].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM[1].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM[1].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM[1].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM[1].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM[1].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM[1].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM[1].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM[1].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM[1].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM[1].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM[1].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM[1].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM[1].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM[1].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM[1].sawtooth.count
  0       0                       0                       0                
  6   257   # signalPWM[2].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM[2].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM[2].f
 -1       0                       0                       0                
  1   280   # signalPWM[2].startTime
 -1       1                       0                       0                
  1   280   # signalPWM[2].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM[2].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM[2].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM[2].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM[2].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM[2].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM[2].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM[2].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM[2].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM[2].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM[2].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM[2].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM[2].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM[2].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM[2].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM[2].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM[2].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM[2].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM[2].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM[2].sawtooth.count
  0       0                       0                       0                
  6   257   # signalPWM[3].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM[3].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM[3].f
 -1       0                       0                       0                
  1   280   # signalPWM[3].startTime
 -1       1                       0                       0                
  1   280   # signalPWM[3].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM[3].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM[3].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM[3].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM[3].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM[3].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM[3].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM[3].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM[3].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM[3].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM[3].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM[3].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM[3].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM[3].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM[3].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM[3].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM[3].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM[3].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM[3].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM[3].sawtooth.count
 -1       0                       0                       0                
  2   284   # variableSpeedDrive_ThreePhase.speedSensor.flange.phi
  0       0                       0                       0                
  3   260   # variableSpeedDrive_ThreePhase.speedSensor.flange.der(phi)
  0       0                       0                       0                
  6   388   # variableSpeedDrive_ThreePhase.speedSensor.flange.tau
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase.currentController.k
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # variableSpeedDrive_ThreePhase.currentController.T
  0       2                       1                       4                
  6   258   # variableSpeedDrive_ThreePhase.currentController.initType
 -1       0                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase.currentController.x_start
 -1       0                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase.currentController.y_start
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase.currentController.u
 -1       0                       0                       0                
  2   272   # variableSpeedDrive_ThreePhase.currentController.x
  0       0                       0                       0                
  3   256   # variableSpeedDrive_ThreePhase.currentController.der(x)
  0       0                       0                       0                
  6   388   # variableSpeedDrive_ThreePhase.flange1.tau
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase.y1[1]
  0       1                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase.const.k
 -1   41000                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase.wref
 -1       1                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase.T
 -1       1                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase.k
  0       0                       0                       0                
  6   388   # fan.inertia.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # fan.inertia.J
  0       3                       1                       5                
  6   770   # fan.inertia.stateSelect
 -1       0                       0                       0                
  2   272   # fan.inertia.w
  0       0                       0                       0                
  3   256   # fan.inertia.der(w)
 -1       1                       0                       0                
  1   280   # fan.J
 -1       0                       0                       0                
  1   280   # fan.deltaPhi
  0       1                       0                       0                
  6   257   # inverter1.useConstantEnable
 -1       1                       0                       0                
  1   281   # inverter1.constantEnable
  0       3                       3                 1.0000000000000000E+100
  6   258   # inverter1.m
  0       0                       0                       0                
  6   321   # inverter1.fire_p[1]
  0       0                       0                       0                
  6   321   # inverter1.fire_p[2]
  0       0                       0                       0                
  6   321   # inverter1.fire_p[3]
  0       1                       0                       0                
  6   257   # inverter1.enableLogic.useConstantEnable
  0       0                       0                       0                
  6   257   # inverter1.enableLogic.constantEnable
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.enableLogic.m
  0       0                       0                       0                
  6   257   # inverter1.enableLogic.enableConstantSource.k
  0       3                       0                       0                
  6   258   # inverter1.enableLogic.booleanReplicator.nout
  0       0                       0                       0                
  6   321   # inverter1.fire_n[1]
  0       0                       0                       0                
  6   321   # inverter1.fire_n[2]
  0       0                       0                       0                
  6   321   # inverter1.fire_n[3]
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter1.RonTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter1.GoffTransistor
 -1       0                       0                       0                
  1   280   # inverter1.VkneeTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter1.RonDiode
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter1.GoffDiode
 -1       0                       0                       0                
  1   280   # inverter1.VkneeDiode
  0       0                       0                       0                
  6   260   # inverter1.dc_p.v
  0       0                       0                       0                
  6   260   # inverter1.dc_n.v
  0       0                       0                       0                
  6   256   # inverter1.vDC
  0       0                       0                       0                
  6   256   # inverter1.powerDC
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.ac.m
  0       0                       0                       0                
  6   260   # inverter1.ac.pin[1].v
  0       0                       0                       0                
  6   388   # inverter1.ac.pin[1].i
  0       0                       0                       0                
  6   260   # inverter1.ac.pin[2].v
  0       0                       0                       0                
  6   388   # inverter1.ac.pin[2].i
  0       0                       0                       0                
  6   260   # inverter1.ac.pin[3].v
  0       0                       0                       0                
  6   388   # inverter1.ac.pin[3].i
  0       0                       0                       0                
  6   256   # inverter1.powerAC[1]
  0       0                       0                       0                
  6   256   # inverter1.powerAC[2]
  0       0                       0                       0                
  6   256   # inverter1.powerAC[3]
  0       0                       0                       0                
  6   256   # inverter1.powerTotalAC
  0       0                       0                       0                
  6   769   # inverter1.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.T
  0       0                       0                       0                
  6   256   # inverter1.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.T_heatPort
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.transistor_p.m
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.v[1]
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.v[2]
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.v[3]
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.i[1]
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.i[2]
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.transistor_p.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.transistor_p.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.transistor_p.mh
  0       0                       0                       0                
  6   769   # inverter1.transistor_p.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.T[3]
  0       0                       0                       0                
  6   321   # inverter1.transistor_p.fire[1]
  0       0                       0                       0                
  6   321   # inverter1.transistor_p.fire[2]
  0       0                       0                       0                
  6   321   # inverter1.transistor_p.fire[3]
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.idealGTOThyristor[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[1].Vknee
  0       0                       0                       0                
  6   769   # inverter1.transistor_p.idealGTOThyristor[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.transistor_p.idealGTOThyristor[1].T
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.idealGTOThyristor[1].LossPower
  0       1                       0                       0                
  6   353   # inverter1.transistor_p.idealGTOThyristor[1].off
  0       0                       0                       0                
  6  1280   # inverter1.transistor_p.idealGTOThyristor[1].s
  0       1                       0                       0                
  6   768   # inverter1.transistor_p.idealGTOThyristor[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.transistor_p.idealGTOThyristor[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.idealGTOThyristor[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[2].Vknee
  0       0                       0                       0                
  6   769   # inverter1.transistor_p.idealGTOThyristor[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.transistor_p.idealGTOThyristor[2].T
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.idealGTOThyristor[2].LossPower
  0       1                       0                       0                
  6   353   # inverter1.transistor_p.idealGTOThyristor[2].off
  0       0                       0                       0                
  6  1280   # inverter1.transistor_p.idealGTOThyristor[2].s
  0       1                       0                       0                
  6   768   # inverter1.transistor_p.idealGTOThyristor[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.transistor_p.idealGTOThyristor[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.idealGTOThyristor[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_p.idealGTOThyristor[3].Vknee
  0       0                       0                       0                
  6   769   # inverter1.transistor_p.idealGTOThyristor[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.transistor_p.idealGTOThyristor[3].T
  0       0                       0                       0                
  6   256   # inverter1.transistor_p.idealGTOThyristor[3].LossPower
  0       1                       0                       0                
  6   353   # inverter1.transistor_p.idealGTOThyristor[3].off
  0       0                       0                       0                
  6  1280   # inverter1.transistor_p.idealGTOThyristor[3].s
  0       1                       0                       0                
  6   768   # inverter1.transistor_p.idealGTOThyristor[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.transistor_p.idealGTOThyristor[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.diode_p.m
  0       0                       0                       0                
  6   256   # inverter1.diode_p.v[1]
  0       0                       0                       0                
  6   256   # inverter1.diode_p.v[2]
  0       0                       0                       0                
  6   256   # inverter1.diode_p.v[3]
  0       0                       0                       0                
  6   256   # inverter1.diode_p.i[1]
  0       0                       0                       0                
  6   256   # inverter1.diode_p.i[2]
  0       0                       0                       0                
  6   256   # inverter1.diode_p.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.diode_p.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.diode_p.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.diode_p.mh
  0       0                       0                       0                
  6   769   # inverter1.diode_p.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.T[3]
  0       0                       0                       0                
  6   256   # inverter1.diode_p.idealDiode[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # inverter1.diode_p.idealDiode[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.diode_p.idealDiode[1].T
  0       0                       0                       0                
  6   256   # inverter1.diode_p.idealDiode[1].LossPower
  0       1                       0                       0                
  6   353   # inverter1.diode_p.idealDiode[1].off
  0       0                       0                       0                
  6  1280   # inverter1.diode_p.idealDiode[1].s
  0       1                       0                       0                
  6   768   # inverter1.diode_p.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.diode_p.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.diode_p.idealDiode[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # inverter1.diode_p.idealDiode[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.diode_p.idealDiode[2].T
  0       0                       0                       0                
  6   256   # inverter1.diode_p.idealDiode[2].LossPower
  0       1                       0                       0                
  6   353   # inverter1.diode_p.idealDiode[2].off
  0       0                       0                       0                
  6  1280   # inverter1.diode_p.idealDiode[2].s
  0       1                       0                       0                
  6   768   # inverter1.diode_p.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.diode_p.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.diode_p.idealDiode[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_p.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # inverter1.diode_p.idealDiode[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.diode_p.idealDiode[3].T
  0       0                       0                       0                
  6   256   # inverter1.diode_p.idealDiode[3].LossPower
  0       1                       0                       0                
  6   353   # inverter1.diode_p.idealDiode[3].off
  0       0                       0                       0                
  6  1280   # inverter1.diode_p.idealDiode[3].s
  0       1                       0                       0                
  6   768   # inverter1.diode_p.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.diode_p.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.star_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.star_p.plug_p.m
  0       0                       0                       0                
  6   388   # inverter1.star_p.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # inverter1.star_p.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # inverter1.star_p.plug_p.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.transistor_n.m
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.v[1]
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.v[2]
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.v[3]
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.i[1]
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.i[2]
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.transistor_n.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.transistor_n.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.transistor_n.mh
  0       0                       0                       0                
  6   769   # inverter1.transistor_n.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.T[3]
  0       0                       0                       0                
  6   321   # inverter1.transistor_n.fire[1]
  0       0                       0                       0                
  6   321   # inverter1.transistor_n.fire[2]
  0       0                       0                       0                
  6   321   # inverter1.transistor_n.fire[3]
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.idealGTOThyristor[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[1].Vknee
  0       0                       0                       0                
  6   769   # inverter1.transistor_n.idealGTOThyristor[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.transistor_n.idealGTOThyristor[1].T
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.idealGTOThyristor[1].LossPower
  0       1                       0                       0                
  6   353   # inverter1.transistor_n.idealGTOThyristor[1].off
  0       0                       0                       0                
  6  1280   # inverter1.transistor_n.idealGTOThyristor[1].s
  0       1                       0                       0                
  6   768   # inverter1.transistor_n.idealGTOThyristor[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.transistor_n.idealGTOThyristor[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.idealGTOThyristor[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[2].Vknee
  0       0                       0                       0                
  6   769   # inverter1.transistor_n.idealGTOThyristor[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.transistor_n.idealGTOThyristor[2].T
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.idealGTOThyristor[2].LossPower
  0       1                       0                       0                
  6   353   # inverter1.transistor_n.idealGTOThyristor[2].off
  0       0                       0                       0                
  6  1280   # inverter1.transistor_n.idealGTOThyristor[2].s
  0       1                       0                       0                
  6   768   # inverter1.transistor_n.idealGTOThyristor[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.transistor_n.idealGTOThyristor[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.idealGTOThyristor[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.transistor_n.idealGTOThyristor[3].Vknee
  0       0                       0                       0                
  6   769   # inverter1.transistor_n.idealGTOThyristor[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.transistor_n.idealGTOThyristor[3].T
  0       0                       0                       0                
  6   256   # inverter1.transistor_n.idealGTOThyristor[3].LossPower
  0       1                       0                       0                
  6   353   # inverter1.transistor_n.idealGTOThyristor[3].off
  0       0                       0                       0                
  6  1280   # inverter1.transistor_n.idealGTOThyristor[3].s
  0       1                       0                       0                
  6   768   # inverter1.transistor_n.idealGTOThyristor[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.transistor_n.idealGTOThyristor[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.diode_n.m
  0       0                       0                       0                
  6   256   # inverter1.diode_n.v[1]
  0       0                       0                       0                
  6   256   # inverter1.diode_n.v[2]
  0       0                       0                       0                
  6   256   # inverter1.diode_n.v[3]
  0       0                       0                       0                
  6   256   # inverter1.diode_n.i[1]
  0       0                       0                       0                
  6   256   # inverter1.diode_n.i[2]
  0       0                       0                       0                
  6   256   # inverter1.diode_n.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.diode_n.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.diode_n.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.diode_n.mh
  0       0                       0                       0                
  6   769   # inverter1.diode_n.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.T[3]
  0       0                       0                       0                
  6   256   # inverter1.diode_n.idealDiode[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # inverter1.diode_n.idealDiode[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.diode_n.idealDiode[1].T
  0       0                       0                       0                
  6   256   # inverter1.diode_n.idealDiode[1].LossPower
  0       1                       0                       0                
  6   353   # inverter1.diode_n.idealDiode[1].off
  0       0                       0                       0                
  6  1280   # inverter1.diode_n.idealDiode[1].s
  0       1                       0                       0                
  6   768   # inverter1.diode_n.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.diode_n.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.diode_n.idealDiode[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # inverter1.diode_n.idealDiode[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.diode_n.idealDiode[2].T
  0       0                       0                       0                
  6   256   # inverter1.diode_n.idealDiode[2].LossPower
  0       1                       0                       0                
  6   353   # inverter1.diode_n.idealDiode[2].off
  0       0                       0                       0                
  6  1280   # inverter1.diode_n.idealDiode[2].s
  0       1                       0                       0                
  6   768   # inverter1.diode_n.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.diode_n.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter1.diode_n.idealDiode[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter1.diode_n.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # inverter1.diode_n.idealDiode[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter1.diode_n.idealDiode[3].T
  0       0                       0                       0                
  6   256   # inverter1.diode_n.idealDiode[3].LossPower
  0       1                       0                       0                
  6   353   # inverter1.diode_n.idealDiode[3].off
  0       0                       0                       0                
  6  1280   # inverter1.diode_n.idealDiode[3].s
  0       1                       0                       0                
  6   768   # inverter1.diode_n.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter1.diode_n.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter1.star_n.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter1.star_n.plug_p.m
  0       0                       0                       0                
  6   388   # inverter1.star_n.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # inverter1.star_n.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # inverter1.star_n.plug_p.pin[3].i
 -1  1.0000000000000001E-05       0                       0                
  1   280   # dcdc1.RonTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # dcdc1.GoffTransistor
 -1       0                       0                       0                
  1   280   # dcdc1.VkneeTransistor
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # dcdc1.RonDiode
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # dcdc1.GoffDiode
 -1       0                       0                 1.0000000000000000E+100
  1   280   # dcdc1.VkneeDiode
  0       0                       0                       0                
  6   260   # dcdc1.dc_p1.v
  0       0                       0                       0                
  6   388   # dcdc1.dc_p1.i
  0       0                       0                       0                
  6   260   # dcdc1.dc_n1.v
  0       0                       0                       0                
  6   388   # dcdc1.dc_n1.i
  0       0                       0                       0                
  6   256   # dcdc1.iDC1
  0       0                       0                       0                
  6   256   # dcdc1.powerDC1
  0       0                       0                       0                
  6   260   # dcdc1.dc_p2.v
  0       0                       0                       0                
  6   260   # dcdc1.dc_n2.v
  0       0                       0                       0                
  6   256   # dcdc1.powerDC2
  0       0                       0                       0                
  6   769   # dcdc1.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dcdc1.T
  0       0                       0                       0                
  6   256   # dcdc1.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dcdc1.T_heatPort
  0       1                       0                       0                
  6   257   # dcdc1.useConstantEnable
 -1       1                       0                       0                
  1   281   # dcdc1.constantEnable
  0       1                       1                 1.0000000000000000E+100
  6   258   # dcdc1.m
  0       1                       0                       0                
  6   257   # dcdc1.enableLogic.useConstantEnable
  0       0                       0                       0                
  6   257   # dcdc1.enableLogic.constantEnable
  0       1                       1                 1.0000000000000000E+100
  6   258   # dcdc1.enableLogic.m
  0       0                       0                       0                
  6   257   # dcdc1.enableLogic.enableConstantSource.k
  0       1                       0                       0                
  6   258   # dcdc1.enableLogic.booleanReplicator.nout
  0       0                       0                       0                
  6   321   # dcdc1.andCondition_p.y
  0       0                       0                       0                
  6   321   # dcdc1.fire_p
  0       0                       0                       0                
  6   260   # dcdc1.transistor.n.v
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc1.transistor.Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc1.transistor.Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc1.transistor.Vknee
  0       0                       0                       0                
  6   769   # dcdc1.transistor.useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # dcdc1.transistor.T
  0       0                       0                       0                
  6   256   # dcdc1.transistor.LossPower
  0       1                       0                       0                
  6   353   # dcdc1.transistor.off
  0       0                       0                       0                
  6  1280   # dcdc1.transistor.s
  0       1                       0                       0                
  6   768   # dcdc1.transistor.unitVoltage
  0       1                       0                       0                
  6   768   # dcdc1.transistor.unitCurrent
  0       0                       0                       0                
  6   256   # dcdc1.diode.v
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc1.diode.Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc1.diode.Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc1.diode.Vknee
  0       0                       0                       0                
  6   769   # dcdc1.diode.useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # dcdc1.diode.T
  0       0                       0                       0                
  6   256   # dcdc1.diode.LossPower
  0       1                       0                       0                
  6   353   # dcdc1.diode.off
  0       0                       0                       0                
  6  1280   # dcdc1.diode.s
  0       1                       0                       0                
  6   768   # dcdc1.diode.unitVoltage
  0       1                       0                       0                
  6   768   # dcdc1.diode.unitCurrent
  0       1                       0                       0                
  6   257   # signalPWM1.useConstantDutyCycle
 -1  5.9999999999999998E-01       0                       0                
  1   280   # signalPWM1.constantDutyCycle
 -1     100                       0                       0                
  1   280   # signalPWM1.f
 -1       0                       0                       0                
  1   280   # signalPWM1.startTime
  0       0                       0                       0                
  6   321   # signalPWM1.notFire
  0       1                       0                       0                
  6   256   # signalPWM1.const.k
 -1       1                       0                       0                
  1   280   # signalPWM1.limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM1.limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM1.limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM1.limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM1.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM1.limiter.y
  0       0                       0                       0                
  6   256   # signalPWM1.greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM1.greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM1.zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM1.zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM1.zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM1.zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM1.zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM1.sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM1.sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM1.sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM1.sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM1.sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM1.sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM1.sawtooth.count
 -1       3                       0                       0                
  1   282   # threePhaseMotor1.m
 -1    4000                       0                       0                
  1   280   # threePhaseMotor1.wref
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.m
  0       2                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.aimc.p
  0      50                       0                       0                
  6   256   # threePhaseMotor1.aimc.fsNominal
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimc.TsOperational
  0  2.9999999999999999E-02       0                       0                
  6   256   # threePhaseMotor1.aimc.Rs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.TsRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.alpha20s
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.Lszero
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.Lssigma
  0  2.8999999999999998E-01       0                       0                
  6   256   # threePhaseMotor1.aimc.Jr
  0       0                       0                       0                
  6   257   # threePhaseMotor1.aimc.useSupport
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.Js
  0       0                       0                       0                
  6   257   # threePhaseMotor1.aimc.useThermalPort
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor1.aimc.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.frictionParameters.tauLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.phiMechanical
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.tauElectrical
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.inertiaRotor.J
  0       3                       1                       5                
  6   770   # threePhaseMotor1.aimc.inertiaRotor.stateSelect
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.inertiaStator.flange_a.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.inertiaStator.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.inertiaStator.J
  0       3                       1                       5                
  6   770   # threePhaseMotor1.aimc.inertiaStator.stateSelect
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.inertiaStator.der(phi)
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.inertiaStator.w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.inertiaStator.der(w)
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.inertiaStator.a
 -1       0                       0                       0                
  1   280   # threePhaseMotor1.aimc.fixed.phi0
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.friction.flange.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.friction.support.tau
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.phi
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.frictionParameters.tauLinear
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.friction.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.friction.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.friction.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.friction.lossPower
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalSupport.tau
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCoreParameters.PRef
  0     100                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor1.aimc.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoadParameters.PRef
  0     100                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.powerStator
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.powerMechanical
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.powerInertiaStator
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.powerInertiaRotor
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerTotal
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerStatorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerStatorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerRotorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerStrayLoad
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerFriction
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.powerBalance.lossPowerRotorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.vs[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.vs[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.vs[3]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.i_0_s
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.der(i_0_s)
 -1       0                       0                       0                
  2   280   # threePhaseMotor1.aimc.idq_sr[1]
  0       0                       0                       0                
  3   256   # threePhaseMotor1.aimc.der(idq_sr[1])
 -1       0                       0                       0                
  2   280   # threePhaseMotor1.aimc.idq_sr[2]
  0       0                       0                       0                
  3   256   # threePhaseMotor1.aimc.der(idq_sr[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.idq_rs[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.idq_rs[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.der(idq_rs[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.der(idq_rs[2])
 -1       0                       0                       0                
  2   280   # threePhaseMotor1.aimc.idq_rr[1]
  0       0                       0                       0                
  3   256   # threePhaseMotor1.aimc.der(idq_rr[1])
 -1       0                       0                       0                
  2   280   # threePhaseMotor1.aimc.idq_rr[2]
  0       0                       0                       0                
  3   256   # threePhaseMotor1.aimc.der(idq_rr[2])
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.plug_sn.m
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.plug_sn.pin[1].v
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.aimc.rs.m
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.rs.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.rs.plug_n.m
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.rs.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.rs.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.rs.plug_n.pin[3].v
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.R[1]
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.R[2]
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.R[3]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.T_ref[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.T_ref[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.T_ref[3]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.alpha[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.alpha[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.alpha[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.aimc.rs.mh
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.rs.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.T[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.T[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.T[3]
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].v
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.rs.resistor[1].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].T
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[1].R_actual
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].v
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.rs.resistor[2].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].T
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[2].R_actual
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].v
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.rs.resistor[3].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].T
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.rs.resistor[3].R_actual
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.L[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.L[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.v_[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.v_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.i_[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.i_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.der(i_[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lssigma.der(i_[2])
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.lssigma.spacePhasor_a.v_[1]
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.lssigma.spacePhasor_a.v_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lszero.v
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lszero.i
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.lszero.der(i)
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.lszero.p.v
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.lszero.p.i
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.lszero.n.v
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.lszero.n.i
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.lszero.L
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.statorCore.coreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCore.coreParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCore.coreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCore.coreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor1.aimc.statorCore.coreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.statorCore.coreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.statorCore.coreParameters.wMin
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.statorCore.m
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.statorCore.turnsRatio
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.statorCore.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.statorCore.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.statorCore.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.statorCore.lossPower
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.statorCore.spacePhasor.i_[1]
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.statorCore.spacePhasor.i_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.statorCore.Gc
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.statorCore.wLimit
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.spacePhasorS.m
  0       1                       0                       0                
  6   256   # threePhaseMotor1.aimc.spacePhasorS.turnsRatio
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.spacePhasorS.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.spacePhasorS.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.spacePhasorS.v[3]
  0  6.6666666666666663E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[1, 1]
  0 -3.3333333333333315E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[1, 2]
  0 -3.3333333333333359E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[1, 3]
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[2, 1]
  0  5.7735026918962573E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[2, 2]
  0 -5.7735026918962551E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.TransformationMatrix[2, 3]
  0       1                       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[1, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[1, 2]
  0 -4.9999999999999978E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[2, 1]
  0  8.6602540378443871E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[2, 2]
  0 -5.0000000000000044E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[3, 1]
  0 -8.6602540378443837E-01       0                       0                
  6  1280   # threePhaseMotor1.aimc.spacePhasorS.InverseTransformation[3, 2]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.spacePhasorS.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.spacePhasorS.plug_n.m
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.spacePhasorS.zero.v
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.spacePhasorS.zero.i
  0       0                       0                       0                
  6   260   # threePhaseMotor1.aimc.spacePhasorS.ground.v
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.spacePhasorS.ground.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.aimc.strayLoad.m
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.strayLoad.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.aimc.strayLoad.plug_n.m
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.strayLoad.flange.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.strayLoad.support.tau
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.phi
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoad.strayLoadParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoad.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoad.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.strayLoad.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.strayLoadParameters.tauRef
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.strayLoad.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.strayLoad.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.strayLoad.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.lossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.strayLoad.iRMS
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.thermalAmbient.m
  0       0                       0                       0                
  6   257   # threePhaseMotor1.aimc.thermalAmbient.useTemperatureInputs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.TDefault
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Ts
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Q_flowStatorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Q_flowStatorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Q_flowRotorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Q_flowStrayLoad
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Q_flowFriction
  0       3                       0                       0                
  6   262   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortFriction.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.thermalPort.heatPortFriction.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.temperatureStatorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.temperatureStatorCore.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.temperatureStatorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.temperatureRotorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.temperatureRotorCore.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.temperatureRotorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.temperatureStrayLoad.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.temperatureStrayLoad.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.temperatureStrayLoad.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.temperatureFriction.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor1.aimc.thermalAmbient.temperatureFriction.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor1.aimc.thermalAmbient.temperatureFriction.port.Q_flow
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.constTs.k
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.aimc.thermalAmbient.thermalCollectorStator.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Tr
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.thermalAmbient.Q_flowTotal
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.thermalAmbient.constTr.k
  0  3.1415926535897931E+00       0                       0                
  6  1280   # threePhaseMotor1.aimc.pi
  0       3                       0                       0                
  6  1286   # threePhaseMotor1.aimc.internalThermalPort.m
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortStatorWinding[1].Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortStatorWinding[2].Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortStatorWinding[3].Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor1.aimc.internalThermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor1.aimc.internalThermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor1.aimc.internalThermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor1.aimc.internalThermalPort.heatPortFriction.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortFriction.Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor1.aimc.internalThermalPort.heatPortRotorWinding.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.Lm
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimc.airGapS.m
  0       1                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.aimc.airGapS.p
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.gamma
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(gamma)
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.psi_ms[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.psi_ms[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(psi_ms[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(psi_ms[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.psi_mr[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.psi_mr[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(psi_mr[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(psi_mr[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.RotationMatrix[1, 1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.RotationMatrix[1, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.RotationMatrix[2, 1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.RotationMatrix[2, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(RotationMatrix[1, 1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(RotationMatrix[1, 2])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(RotationMatrix[2, 1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(RotationMatrix[2, 2])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.i_ms[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.i_ms[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(i_ms[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.airGapS.der(i_ms[2])
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.airGapS.L[1, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.airGapS.L[1, 2]
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.airGapS.L[2, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.aimc.airGapS.L[2, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.Lm
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.Lrsigma
  0  4.0000000000000001E-02       0                       0                
  6   256   # threePhaseMotor1.aimc.Rr
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.TrRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.alpha20r
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimc.TrOperational
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.squirrelCageR.Lrsigma
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.squirrelCageR.Rr
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.squirrelCageR.T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.squirrelCageR.alpha
  0       1                       0                       0                
  6   769   # threePhaseMotor1.aimc.squirrelCageR.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimc.squirrelCageR.T
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimc.squirrelCageR.Rr_actual
  0       3                       0                       0                
  6   258   # threePhaseMotor1.terminalBox.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.terminalBox.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.terminalBox.plug_sn.m
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor1.terminalBox.star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.terminalBox.star.plug_p.m
  0       0                       0                       0                
  6   388   # threePhaseMotor1.terminalBox.star.pin_n.i
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.terminalBox.plugSupply.m
  0       0                       0                       0                
  6   388   # threePhaseMotor1.terminalBox.starpoint.i
  0       0                       0                       0                
  6   388   # threePhaseMotor1.flange1.tau
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimcData.m
 -1  2.8999999999999998E-01       0                       0                
  1   280   # threePhaseMotor1.aimcData.Jr
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.Js
 -1       2                       1                 1.0000000000000000E+100
  1   282   # threePhaseMotor1.aimcData.p
 -1      50                       0                       0                
  1   280   # threePhaseMotor1.aimcData.fsNominal
 -1  2.9999999999999999E-02       0                       0                
  1   280   # threePhaseMotor1.aimcData.Rs
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimcData.TsRef
 -1       0                       0                       0                
  1   280   # threePhaseMotor1.aimcData.alpha20s
 -1       1                       0                       0                
  1   280   # threePhaseMotor1.aimcData.effectiveStatorTurns
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.Lszero
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.Lssigma
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimcData.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimcData.frictionParameters.wRef
 -1       2                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimcData.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor1.aimcData.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.frictionParameters.tauLinear
  0       3                       0                       0                
  6   258   # threePhaseMotor1.aimcData.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimcData.statorCoreParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimcData.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimcData.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor1.aimcData.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimcData.strayLoadParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimcData.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor1.aimcData.strayLoadParameters.wRef
 -1       1                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimcData.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.Lm
  0       0                       0                       0                
  6   256   # threePhaseMotor1.aimcData.Lrsigma
 -1  4.0000000000000001E-02       0                       0                
  1   280   # threePhaseMotor1.aimcData.Rr
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor1.aimcData.TrRef
 -1       0                       0                       0                
  1   280   # threePhaseMotor1.aimcData.alpha20r
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor1.plug_p1.m
  0       0                       0                       0                
  6  1280   # threePhaseMotor1.rpm
  0       0                       0                       0                
  6   257   # signalPWM3[1].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM3[1].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM3[1].f
 -1       0                       0                       0                
  1   280   # signalPWM3[1].startTime
 -1       1                       0                       0                
  1   280   # signalPWM3[1].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM3[1].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM3[1].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM3[1].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM3[1].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM3[1].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM3[1].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM3[1].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM3[1].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM3[1].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM3[1].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM3[1].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM3[1].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM3[1].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM3[1].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM3[1].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM3[1].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM3[1].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM3[1].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM3[1].sawtooth.count
  0       0                       0                       0                
  6   257   # signalPWM3[2].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM3[2].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM3[2].f
 -1       0                       0                       0                
  1   280   # signalPWM3[2].startTime
 -1       1                       0                       0                
  1   280   # signalPWM3[2].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM3[2].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM3[2].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM3[2].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM3[2].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM3[2].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM3[2].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM3[2].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM3[2].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM3[2].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM3[2].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM3[2].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM3[2].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM3[2].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM3[2].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM3[2].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM3[2].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM3[2].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM3[2].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM3[2].sawtooth.count
  0       0                       0                       0                
  6   257   # signalPWM3[3].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM3[3].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM3[3].f
 -1       0                       0                       0                
  1   280   # signalPWM3[3].startTime
 -1       1                       0                       0                
  1   280   # signalPWM3[3].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM3[3].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM3[3].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM3[3].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM3[3].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM3[3].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM3[3].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM3[3].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM3[3].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM3[3].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM3[3].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM3[3].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM3[3].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM3[3].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM3[3].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM3[3].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM3[3].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM3[3].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM3[3].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM3[3].sawtooth.count
 -1       0                       0                       0                
  2   284   # variableSpeedDrive_ThreePhase1.speedSensor.flange.phi
  0       0                       0                       0                
  3   260   # variableSpeedDrive_ThreePhase1.speedSensor.flange.der(phi)
  0       0                       0                       0                
  6   388   # variableSpeedDrive_ThreePhase1.speedSensor.flange.tau
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase1.currentController.k
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # variableSpeedDrive_ThreePhase1.currentController.T
  0       2                       1                       4                
  6   258   # variableSpeedDrive_ThreePhase1.currentController.initType
 -1       0                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase1.currentController.x_start
 -1       0                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase1.currentController.y_start
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase1.currentController.u
 -1       0                       0                       0                
  2   272   # variableSpeedDrive_ThreePhase1.currentController.x
  0       0                       0                       0                
  3   256   # variableSpeedDrive_ThreePhase1.currentController.der(x)
  0       0                       0                       0                
  6   388   # variableSpeedDrive_ThreePhase1.flange1.tau
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase1.y1[1]
  0       1                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase1.const.k
 -1   41000                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase1.wref
 -1       1                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase1.T
 -1       1                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase1.k
  0       0                       0                       0                
  6   388   # fan1.inertia.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # fan1.inertia.J
  0       3                       1                       5                
  6   770   # fan1.inertia.stateSelect
 -1       0                       0                       0                
  2   272   # fan1.inertia.w
  0       0                       0                       0                
  3   256   # fan1.inertia.der(w)
 -1       1                       0                       0                
  1   280   # fan1.J
 -1       0                       0                       0                
  1   280   # fan1.deltaPhi
  0       0                       0                       0                
  6   388   # splitterHVDC.plug_a.p.i
  0       0                       0                       0                
  6   260   # splitterHVDC.plug_a.n.v
  0       0                       0                       0                
  6   388   # splitterHVDC.plug_a.n.i
  0       0                       0                       0                
  6   388   # splitterHVDC.p.i
  0       0                       0                       0                
  6   260   # splitterHVDC.n.v
  0       0                       0                       0                
  6   388   # splitterHVDC.n.i
  0       0                       0                       0                
  6   257   # batteryPack.enable_thermal_port
  0       1                       0                       0                
  6   257   # batteryPack.internal_ground
 -1       0                       0                       0                
  1   281   # batteryPack.display_name
 -1       1                       0                       0                
  1   282   # batteryPack.id
  0       0                       0                       0                
  6   388   # batteryPack.plug_a.p.i
  0       0                       0                       0                
  6   260   # batteryPack.plug_a.n.v
  0       0                       0                       0                
  6   388   # batteryPack.plug_a.n.i
 -1       0                       0                       0                
  1   281   # batteryPack.hide_interface_icon
 -1     100                       1                 1.0000000000000000E+100
  1   282   # batteryPack.ns
 -1       2                       1                 1.0000000000000000E+100
  1   282   # batteryPack.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.ngp
  0       1                       1                       3                
  6   258   # batteryPack.cellGroups
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.gs_custom
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.gp_custom
  0       1                       0                       0                
  6  1281   # batteryPack.is_lumped
  0       0                       0                       0                
  6  1281   # batteryPack.is_custom
  0       0                       0                       0                
  6   256   # batteryPack.Q_cap_all_nom
  0       0                       0                       0                
  6   257   # batteryPack.initialize_with_OCV
 -1  5.9999999999999998E-01       0                       0                
  1   280   # batteryPack.SOC_start
  0     300                       0                       0                
  6   256   # batteryPack.OCV_start
  0       1                       1                       4                
  6   258   # batteryPack.limitActionSoC
  0       1                       1                       4                
  6   258   # batteryPack.limitActionV
  0       3                       1                       4                
  6   258   # batteryPack.limitActionI
  0       3                       1                       4                
  6   258   # batteryPack.limitActionP
  0       3                       1                       4                
  6   258   # batteryPack.limitActionDch
 -1       0                       0                       0                
  1   280   # batteryPack.limitStartSoC
 -1  1.0000000000000001E-15       0                       0                
  1   280   # batteryPack.limitStartV
 -1       0                       0                       0                
  1   280   # batteryPack.limitStartI
 -1       0                       0                       0                
  1   280   # batteryPack.limitStartP
 -1       0                       0                       0                
  1   280   # batteryPack.limitStartDch
 -1  1.0000000000000001E-15       0                 1.0000000000000000E+100
  1   280   # batteryPack.iTolDch
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.summary.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.summary.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.summary.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.summary.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.summary.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.summary.ngp
  0       0                       0                       0                
  6   256   # batteryPack.summary.i
  0       0                       0                       0                
  6   256   # batteryPack.summary.p_in
  0       0                       0                       0                
  6   256   # batteryPack.summary.p_out
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_i
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_i_dch
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_ocv
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_p_in
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_p_out
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_i_max_dch
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_p_max_dch
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_Q_cap_aged
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_Q
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_heat_flow
  0       0                       0                       0                
  6   256   # batteryPack.summary.core_i[1, 1]
  0       0                       0                       0                
  6   256   # batteryPack.summary.core_ocv[1, 1]
  0       0                       0                       0                
  6   256   # batteryPack.summary.core_v_drop[1, 1]
  0       0                       0                       0                
  6   256   # batteryPack.summary.core_R_max_dch[1, 1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # batteryPack.summary.core_Q[1, 1]
  0       0                       0                       0                
  6   256   # batteryPack.summary.core_Q_cap_aged[1, 1]
  0       0                       0                       0                
  6   256   # batteryPack.summary.core_i_self[1, 1]
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_SoC
  0       0                       0                       0                
  6   256   # batteryPack.summary.pack_SoC_nom
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.geometry.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.geometry.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.geometry.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.geometry.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.geometry.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.geometry.ngp
  0       0                       0                       0                
  6   258   # batteryPack.geometry.thermal.cell.discretization[1]
  0       0                       0                       0                
  6   258   # batteryPack.geometry.thermal.cell.discretization[2]
  0       0                       0                       0                
  6   258   # batteryPack.geometry.thermal.cell.discretization[3]
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.enable_heatport
 -1     300                       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.T0
  0       0                       0                       0                
  6   257   # batteryPack.core.initialize_with_OCV
  0       0                       0                       0                
  6   256   # batteryPack.core.SOC_start
  0     300                       0                       0                
  6   256   # batteryPack.core.OCV_start
  0       0                       0                       0                
  6   256   # batteryPack.core.Q_cap_all_nom
  0       1                       1                       4                
  6   258   # batteryPack.core.limitActionSoC
 -1       1                       0                       0                
  1   280   # batteryPack.core.SoC_max
 -1       0                       0                       0                
  1   280   # batteryPack.core.SoC_min
 -1       0                       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.SoC_tol
  0       0                       0                       0                
  6   256   # batteryPack.core.limitStartSoC
  0       1                       1                       4                
  6   258   # batteryPack.core.limitActionV
 -1  9.9999999999999995E+59       0                       0                
  1   280   # batteryPack.core.vCellMax
 -1       0                       0                       0                
  1   280   # batteryPack.core.vCellMin
 -1  1.0000000000000001E-15       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.vTol
  0       0                       0                       0                
  6   256   # batteryPack.core.limitStartV
  0       3                       1                       4                
  6   258   # batteryPack.core.limitActionI
 -1  9.9999999999999995E+59       0                       0                
  1   280   # batteryPack.core.iCellMaxDch
 -1  9.9999999999999995E+59       0                       0                
  1   280   # batteryPack.core.iCellMaxCh
 -1       0                       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.iTol
  0       0                       0                       0                
  6   256   # batteryPack.core.limitStartI
  0       3                       1                       4                
  6   258   # batteryPack.core.limitActionP
 -1  9.9999999999999995E+59       0                       0                
  1   280   # batteryPack.core.pCellMaxDch
 -1  9.9999999999999995E+59       0                       0                
  1   280   # batteryPack.core.pCellMaxCh
 -1       0                       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.pTol
  0       0                       0                       0                
  6   256   # batteryPack.core.limitStartP
  0       0                       0                       0                
  6   260   # batteryPack.core.pin_n.v
  0       0                       0                       0                
  6   388   # batteryPack.core.pin_n.i
  0       0                       0                       0                
  6   388   # batteryPack.core.pin_p.i
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.summary.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.summary.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.summary.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.summary.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.summary.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.summary.ngp
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.i
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.v_drop
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.i_self
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_i
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_ocv
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_v_drop
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_i_self
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_Q
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_Q_cap_aged
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_R_max_dch
  0       0                       0                       0                
  6   256   # batteryPack.core.summary.cell_R_max_ch
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.v
  0       0                       0                       0                
  6   260   # batteryPack.core.capacity.p.v
  0       0                       0                       0                
  6   260   # batteryPack.core.capacity.n.v
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.capacity.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.capacity.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.capacity.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.capacity.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.capacity.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.capacity.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.capacity.initialize_charge
  0       1                       0                       0                
  6   257   # batteryPack.core.capacity.initialize_with_SOC
  0       0                       0                       0                
  6   257   # batteryPack.core.capacity.initialize_with_aging
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.SOC_start
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.Q_start
  0       1                       0                       0                
  6   257   # batteryPack.core.capacity.enable_heatport
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.capacity.T0
 -1  3.6000000000000000E+05       0                       0                
  1   280   # batteryPack.core.capacity.Q_cap_cell_nom
 -1       1                       0                       0                
  1   280   # batteryPack.core.capacity.k_Q_cap_cell_nom
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.Q_cap_all_nom
  0       1                       1                       4                
  6   258   # batteryPack.core.capacity.limitAction
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.SoC_max
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.SoC_min
  0       0                       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.capacity.SoC_tol
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.limitStart
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.Q_cap_cell
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.Q_cap_all
  0       0                       0                       0                
  6   388   # batteryPack.core.capacity.heatPort.Q_flow
 -1       0                       0                 1.0000000000000000E+100
  2   272   # batteryPack.core.capacity.Q
  0       0                       0                       0                
  3   256   # batteryPack.core.capacity.der(Q)
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.C_rate
  0       0                       0                       0                
  6   260   # batteryPack.core.capacity.cellState.C_rate
  0       0                       0                 1.0000000000000000E+100
  6   260   # batteryPack.core.capacity.cellState.f_C1
  0       0                       0                 1.0000000000000000E+100
  6   260   # batteryPack.core.capacity.cellState.f_R1
  0       0                       0                 1.0000000000000000E+100
  6   260   # batteryPack.core.capacity.cellState.f_Rser
  0       0                       0                 1.0000000000000000E+100
  6   260   # batteryPack.core.capacity.cellState.f_capacity
  0       0                       0                 1.0000000000000000E+100
  6   260   # batteryPack.core.capacity.cellState.f_Rself
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.Crate_set.y
  0       0                       0                       1                
  6   256   # batteryPack.core.capacity.limitSoC.x
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.limitSoC.xMax
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.limitSoC.xMin
  0       1                       1                       4                
  6   258   # batteryPack.core.capacity.limitSoC.action
 -1       0                       0                       0                
  1   281   # batteryPack.core.capacity.limitSoC.use_explicit_checking_time
 -1       0                       0                       0                
  1   280   # batteryPack.core.capacity.limitSoC.t0
  0       0                       0                       0                
  6   256   # batteryPack.core.capacity.limitSoC.t_start
 -1       0                       0                       0                
  1   281   # batteryPack.core.capacity.limitSoC.enable_checking_latch
  0       0                       0                       0                
  6   329   # batteryPack.core.capacity.limitSoC.upper_limit_active
  0       0                       0                       0                
  6   329   # batteryPack.core.capacity.limitSoC.lower_limit_active
  0       1                       1                       2                
  6  1282   # batteryPack.core.capacity.limitSoC.assert_level
  0       0                       0                       0                
  6  1412   # batteryPack.core.capacity.noHeatFlow.heat.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.core.voltage.n.v
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.voltage.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.voltage.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.voltage.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.voltage.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.voltage.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.voltage.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.voltage.enable_heatport
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.voltage.T0
  0       0                       0                       0                
  6   257   # batteryPack.core.voltage.initialize_with_OCV
  0     300                       0                       0                
  6   256   # batteryPack.core.voltage.v_start
  0       1                       1                       4                
  6   258   # batteryPack.core.voltage.limitAction
 -1  9.9999999999999995E+59       0                       0                
  1   280   # batteryPack.core.voltage.vCellMax
 -1       0                       0                       0                
  1   280   # batteryPack.core.voltage.vCellMin
 -1       0                       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.voltage.vTol
 -1       0                       0                       0                
  1   280   # batteryPack.core.voltage.limitStart
 -1       1                       0                       0                
  1   280   # batteryPack.core.voltage.k_OCV
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.vCell
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.T
  0       0                       0                       0                
  6   388   # batteryPack.core.voltage.heatPort.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.core.voltage.cellState.C_rate
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.limitCellOCV.x
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.limitCellOCV.xMax
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.limitCellOCV.xMin
  0       1                       1                       4                
  6   258   # batteryPack.core.voltage.limitCellOCV.action
 -1       0                       0                       0                
  1   281   # batteryPack.core.voltage.limitCellOCV.use_explicit_checking_time
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.limitCellOCV.t0
  0       0                       0                       0                
  6   256   # batteryPack.core.voltage.limitCellOCV.t_start
 -1       0                       0                       0                
  1   281   # batteryPack.core.voltage.limitCellOCV.enable_checking_latch
  0       0                       0                       0                
  6   329   # batteryPack.core.voltage.limitCellOCV.upper_limit_active
  0       0                       0                       0                
  6   329   # batteryPack.core.voltage.limitCellOCV.lower_limit_active
  0       1                       1                       2                
  6  1282   # batteryPack.core.voltage.limitCellOCV.assert_level
  0       0                       0                       0                
  6  1412   # batteryPack.core.voltage.noHeatFlow.heat.Q_flow
  0       0                       0                       0                
  6  1280   # batteryPack.core.voltage.vCell_start
  0       0                       0                       0                
  6  1280   # batteryPack.core.voltage.temperatureSensor.T
  0       0                       0                       0                
  6  1412   # batteryPack.core.voltage.temperatureSensor.port.Q_flow
 -1       4                       0                       0                
  1   280   # batteryPack.core.voltage.V_cell_max
 -1       2                       0                       0                
  1   280   # batteryPack.core.voltage.V_cell_min
  0       0                       0                       0                
  6  1280   # batteryPack.core.voltage.V_cell_diff
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.v
  0       0                       0                       0                
  6   388   # batteryPack.core.impedance.p.i
  0       0                       0                       0                
  6   388   # batteryPack.core.impedance.n.i
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.impedance.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.impedance.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.impedance.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.impedance.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.impedance.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.impedance.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.impedance.enable_heatport
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.impedance.T0
  0       0                       0                       0                
  6   388   # batteryPack.core.impedance.heatPort.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.core.impedance.cellState.C_rate
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.i
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.power
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.impedance.r0.T_ref
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.r0.alpha
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.r0.v
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.r0.i
  0       0                       0                       0                
  6   388   # batteryPack.core.impedance.r0.p.i
  0       0                       0                       0                
  6   388   # batteryPack.core.impedance.r0.n.i
  0       1                       0                       0                
  6   769   # batteryPack.core.impedance.r0.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.impedance.r0.T
  0       0                       0                       0                
  6   388   # batteryPack.core.impedance.r0.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.r0.LossPower
  0       0                       0                       0                
  6   256   # batteryPack.core.impedance.r0.R
 -1  1.0000000000000000E-03       0                       0                
  1   280   # batteryPack.core.impedance.R0
 -1       1                       0                       0                
  1   280   # batteryPack.core.impedance.k_R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.impedance.T_ref
 -1       0                       0                       0                
  1   280   # batteryPack.core.impedance.alpha
  0       1                       0                       0                
  6   256   # batteryPack.core.impedance.R_set.k
  0       0                       0                       0                
  6   388   # batteryPack.core.selfDischarge.p.i
  0       0                       0                       0                
  6   260   # batteryPack.core.selfDischarge.n.v
  0       0                       0                       0                
  6   388   # batteryPack.core.selfDischarge.n.i
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.selfDischarge.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.selfDischarge.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.selfDischarge.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.selfDischarge.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.selfDischarge.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.selfDischarge.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.selfDischarge.enable_heatport
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.selfDischarge.T0
  0       0                       0                       0                
  6   256   # batteryPack.core.selfDischarge.i
  0       0                       0                       0                
  6   260   # batteryPack.core.selfDischarge.cellState.C_rate
  0       0                       0                       0                
  6   256   # batteryPack.core.selfDischarge.idle.i
  0       0                       0                       0                
  6   388   # batteryPack.core.selfDischarge.idle.p.i
  0       0                       0                       0                
  6   260   # batteryPack.core.selfDischarge.idle.n.v
  0       0                       0                       0                
  6   388   # batteryPack.core.selfDischarge.idle.n.i
 -1       0                       0                       0                
  1   280   # batteryPack.core.selfDischarge.fixedHeatFlow.Q_flow
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.selfDischarge.fixedHeatFlow.T_ref
 -1       0                       0                       0                
  1   280   # batteryPack.core.selfDischarge.fixedHeatFlow.alpha
  0       0                       0                       0                
  6   256   # batteryPack.core.aging.v
  0       0                       0                       0                
  6   260   # batteryPack.core.aging.p.v
  0       0                       0                       0                
  6   260   # batteryPack.core.aging.n.v
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.aging.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.aging.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.aging.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.aging.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.aging.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.aging.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.aging.enable_heatport
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # batteryPack.core.aging.T0
 -1       1                       0                       0                
  1   281   # batteryPack.core.aging.capacity_aging
 -1       1                       0                       0                
  1   281   # batteryPack.core.aging.Rser_aging
 -1       1                       0                       0                
  1   281   # batteryPack.core.aging.R1_aging
 -1       1                       0                       0                
  1   281   # batteryPack.core.aging.C1_aging
 -1       1                       0                       0                
  1   281   # batteryPack.core.aging.Rself_aging
  0       0                       0                       0                
  6   388   # batteryPack.core.aging.heatPort.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.core.aging.cellState.C_rate
  0       0                       0                       0                
  6  1412   # batteryPack.core.aging.noHeatFlow.heat.Q_flow
  0       0                       0                       0                
  6  1280   # batteryPack.core.aging.C_rate
 -1       1                       0                       0                
  1   280   # batteryPack.core.aging.calendar.const.k
  0       0                       0                       0                
  6   256   # batteryPack.core.aging.cyclic.i
  0       0                       0                       0                
  6   256   # batteryPack.core.aging.cyclic.C_rate
 -1       1                       0                       0                
  1   280   # batteryPack.core.aging.cyclic.const.k
  0       0                       0                       0                
  6   256   # batteryPack.core.aging.i_set.y
  0       0                       0                       0                
  6  1412   # batteryPack.core.aging.temperatureSensor.port.Q_flow
  0       0                       0                       0                
  6   256   # batteryPack.core.limitVoltage.x
  0       0                       0                       0                
  6   256   # batteryPack.core.limitVoltage.xMax
  0       0                       0                       0                
  6   256   # batteryPack.core.limitVoltage.xMin
  0       1                       1                       4                
  6   258   # batteryPack.core.limitVoltage.action
 -1       0                       0                       0                
  1   281   # batteryPack.core.limitVoltage.use_explicit_checking_time
  0       0                       0                       0                
  6   256   # batteryPack.core.limitVoltage.t0
  0       0                       0                       0                
  6   256   # batteryPack.core.limitVoltage.t_start
 -1       0                       0                       0                
  1   281   # batteryPack.core.limitVoltage.enable_checking_latch
  0       0                       0                       0                
  6   329   # batteryPack.core.limitVoltage.upper_limit_active
  0       0                       0                       0                
  6   329   # batteryPack.core.limitVoltage.lower_limit_active
  0       1                       1                       2                
  6  1282   # batteryPack.core.limitVoltage.assert_level
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.sensors.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.sensors.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.sensors.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.sensors.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.sensors.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.core.sensors.ngp
  0       1                       0                       0                
  6   257   # batteryPack.core.sensors.enable_heatport
 -1     300                       0                 1.0000000000000000E+100
  1   280   # batteryPack.core.sensors.T0
  0       0                       0                       0                
  6   388   # batteryPack.core.sensors.heatPort.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.core.sensors.cellState.C_rate
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.i_sns
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.cell_v_sns
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.cell_ocv_sns
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.cell_i_sns
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.cell_R_max_dch_sns
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.exp_core_i.y
  0       0                       0                       0                
  6   256   # batteryPack.core.sensors.exp_cell_i.y
  0       0                       0                       0                
  6   388   # batteryPack.core.sensors.temperatureSensor.port.Q_flow
  0       0                       0                       0                
  6   256   # batteryPack.core.limitCurrent.x
  0       0                       0                       0                
  6   256   # batteryPack.core.limitCurrent.xMax
  0       0                       0                       0                
  6   256   # batteryPack.core.limitCurrent.xMin
  0       3                       1                       4                
  6   258   # batteryPack.core.limitCurrent.action
 -1       0                       0                       0                
  1   281   # batteryPack.core.limitCurrent.use_explicit_checking_time
  0       0                       0                       0                
  6   256   # batteryPack.core.limitCurrent.t0
  0       0                       0                       0                
  6   256   # batteryPack.core.limitCurrent.t_start
 -1       0                       0                       0                
  1   281   # batteryPack.core.limitCurrent.enable_checking_latch
  0       0                       0                       0                
  6   329   # batteryPack.core.limitCurrent.upper_limit_active
  0       0                       0                       0                
  6   329   # batteryPack.core.limitCurrent.lower_limit_active
  0       1                       1                       2                
  6  1282   # batteryPack.core.limitCurrent.assert_level
  0       0                       0                       0                
  6   256   # batteryPack.core.limitPower.x
  0       0                       0                       0                
  6   256   # batteryPack.core.limitPower.xMax
  0       0                       0                       0                
  6   256   # batteryPack.core.limitPower.xMin
  0       3                       1                       4                
  6   258   # batteryPack.core.limitPower.action
 -1       0                       0                       0                
  1   281   # batteryPack.core.limitPower.use_explicit_checking_time
  0       0                       0                       0                
  6   256   # batteryPack.core.limitPower.t0
  0       0                       0                       0                
  6   256   # batteryPack.core.limitPower.t_start
 -1       0                       0                       0                
  1   281   # batteryPack.core.limitPower.enable_checking_latch
  0       0                       0                       0                
  6   329   # batteryPack.core.limitPower.upper_limit_active
  0       0                       0                       0                
  6   329   # batteryPack.core.limitPower.lower_limit_active
  0       1                       1                       2                
  6  1282   # batteryPack.core.limitPower.assert_level
  0       1                       0                       0                
  6   257   # batteryPack.electrical.internal_ground
  0       0                       0                       0                
  6   388   # batteryPack.electrical.heatPort.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.electrical.ground_internal.p.v
  0       0                       0                       0                
  6   388   # batteryPack.electrical.ground_internal.p.i
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.link_i_sns
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.core_i_sns
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.exp_core_i.y
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.exp_link_i.y
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.product_core_p.u2
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.product_core_p.y
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.product_link_p.u1
  0       0                       0                       0                
  6   256   # batteryPack.electrical.sensors.product_link_p.y
  0       0                       0                       0                
  6  1284   # batteryPack.electrical.ground.v
  0       0                       0                       0                
  6  1412   # batteryPack.electrical.ground.i
  0       0                       0                       0                
  6   388   # batteryPack.electrical.plug_a.p.i
  0       0                       0                       0                
  6   260   # batteryPack.electrical.plug_a.n.v
  0       0                       0                       0                
  6   388   # batteryPack.electrical.plug_a.n.i
  0       0                       0                       0                
  6   388   # batteryPack.electrical.splitter.plug_a.p.i
  0       0                       0                       0                
  6   260   # batteryPack.electrical.splitter.plug_a.n.v
  0       0                       0                       0                
  6   388   # batteryPack.electrical.splitter.plug_a.n.i
  0       0                       0                       0                
  6   388   # batteryPack.electrical.splitter.p.i
  0       0                       0                       0                
  6   260   # batteryPack.electrical.splitter.n.v
  0       0                       0                       0                
  6   388   # batteryPack.electrical.splitter.n.i
  0       0                       0                       0                
  6   260   # batteryPack.electrical.pin_n.v
  0       0                       0                       0                
  6   388   # batteryPack.electrical.pin_n.i
  0       0                       0                       0                
  6   388   # batteryPack.electrical.pin_p.i
  0       0                       0                       0                
  6   256   # batteryPack.electrical.summary.i_link
  0       0                       0                       0                
  6   256   # batteryPack.electrical.summary.i_core
  0       0                       0                       0                
  6   256   # batteryPack.electrical.summary.p_link
  0       0                       0                       0                
  6   256   # batteryPack.electrical.summary.p_core
  0       0                       0                       0                
  6   388   # batteryPack.electrical.noHeatFlow.heat.Q_flow
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.ngp
  0       0                       0                       0                
  6   257   # batteryPack.thermal.fixed_temperature
  0       0                       0                       0                
  6   257   # batteryPack.thermal.state_when_fixed
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # batteryPack.thermal.T0
  0       0                       0                       0                
  6   257   # batteryPack.thermal.enable_external
  0       0                       0                       0                
  6   257   # batteryPack.thermal.T_start_fixed
  0       0                       0                       0                
  6   388   # batteryPack.thermal.tempElectrical.Q_flow
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.summary.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.summary.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.summary.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.summary.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.summary.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.summary.ngp
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.geometry.cell.discretization[1]
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.geometry.cell.discretization[2]
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.geometry.cell.discretization[3]
  0       0                       0                       0                
  6   257   # batteryPack.thermal.enable_external_cells
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.na[1]
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.na[2]
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.nb[1]
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.nb[2]
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.n_1
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.n_2
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.v_1[1]
  0       1                       0                       0                
  6   258   # batteryPack.thermal.splitCoreHeat.v_2[1]
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.ns
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.np
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.gs
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.adaptAmbient.batteryGeometry.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.adaptAmbient.batteryGeometry.ngp
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.thermal.cell.discretization[1]
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.thermal.cell.discretization[2]
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.adaptAmbient.batteryGeometry.thermal.cell.discretization[3]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   260   # batteryPack.thermal.adaptAmbient.heat.T
  0       0                       0                       0                
  6   388   # batteryPack.thermal.adaptAmbient.heat.Q_flow
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.ns
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.np
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.gs
 -1       1                       1                 1.0000000000000000E+100
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.ngp
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.thermal.cell.discretization[1]
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.thermal.cell.discretization[2]
 -1       1                       0                       0                
  1   282   # batteryPack.thermal.adaptCellsLumped.batteryGeometry.thermal.cell.discretization[3]
  0       0                       0                       0                
  6   388   # batteryPack.thermal.adaptCellsLumped.heat.Q_flow
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.ngp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.batteryGeometry.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.batteryGeometry.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.batteryGeometry.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.batteryGeometry.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.batteryGeometry.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.thermal.sensors.batteryGeometry.ngp
  0       0                       0                       0                
  6   258   # batteryPack.thermal.sensors.batteryGeometry.thermal.cell.discretization[1]
  0       0                       0                       0                
  6   258   # batteryPack.thermal.sensors.batteryGeometry.thermal.cell.discretization[2]
  0       0                       0                       0                
  6   258   # batteryPack.thermal.sensors.batteryGeometry.thermal.cell.discretization[3]
 -1      10                       0                       0                
  1   280   # batteryPack.thermal.G_ambient
 -1       0                       0                       0                
  1   281   # batteryPack.thermal.per_cell_capacity
 -1  100000                       0                       0                
  1   280   # batteryPack.thermal.C
 -1     500                       0                       0                
  1   280   # batteryPack.thermal.C_cell
  0       0                       0                       0                
  6   256   # batteryPack.thermal.C_total
  0       0                       0                       0                
  6   256   # batteryPack.thermal.ambientTransfer.Q_flow
  0       0                       0                       0                
  6   256   # batteryPack.thermal.ambientTransfer.dT
  0       0                       0                       0                
  6   388   # batteryPack.thermal.ambientTransfer.port_a.Q_flow
  0       0                       0                       0                
  6   388   # batteryPack.thermal.ambientTransfer.port_b.Q_flow
  0       0                       0                       0                
  6   256   # batteryPack.thermal.ambientTransfer.G
  0       0                       0                       0                
  6   256   # batteryPack.thermal.internalMass.C
  0       0                       0                       0                
  6   257   # batteryPack.thermal.internalMass.fixed_temperature
  0       0                       0                       0                
  6   257   # batteryPack.thermal.internalMass.state_when_fixed
  0     300                       0                   10000                
  6   256   # batteryPack.thermal.internalMass.T0
  0       0                       0                       0                
  6   257   # batteryPack.thermal.internalMass.T_start_fixed
 -1       0                       0                 1.0000000000000000E+100
  2   272   # batteryPack.thermal.internalMass.T
  0       0                       0                       0                
  3   256   # batteryPack.thermal.internalMass.der(T)
  0       0                       0                       0                
  6   258   # batteryPack.controller.id
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.controller.ns
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.controller.np
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.controller.gs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.controller.gp
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.controller.ngs
  0       1                       1                 1.0000000000000000E+100
  6   258   # batteryPack.controller.ngp
  0       1                       0                       0                
  6   257   # batteryPack.controller.enable_core
  0       1                       0                       0                
  6   257   # batteryPack.controller.enable_electrical
  0       1                       0                       0                
  6   257   # batteryPack.controller.enable_thermal
  0       0                       0                       0                
  6   256   # batteryPack.limitDischarge.x
  0       0                       0                       0                
  6   256   # batteryPack.limitDischarge.xMax
  0 -9.9999999999999995E+59       0                       0                
  6   256   # batteryPack.limitDischarge.xMin
  0       3                       1                       4                
  6   258   # batteryPack.limitDischarge.action
 -1       0                       0                       0                
  1   281   # batteryPack.limitDischarge.use_explicit_checking_time
  0       0                       0                       0                
  6   256   # batteryPack.limitDischarge.t0
  0       0                       0                       0                
  6   256   # batteryPack.limitDischarge.t_start
 -1       0                       0                       0                
  1   281   # batteryPack.limitDischarge.enable_checking_latch
  0       0                       0                       0                
  6   329   # batteryPack.limitDischarge.upper_limit_active
  0       0                       0                       0                
  6   329   # batteryPack.limitDischarge.lower_limit_active
  0       1                       1                       2                
  6  1282   # batteryPack.limitDischarge.assert_level
  0       0                       0                       0                
  6   260   # ground.p.v
  0       0                       0                       0                
  6   256   # simpleLine2.inductor.v
 -1       0                       0                       0                
  2   280   # simpleLine2.inductor.i
  0       0                       0                       0                
  3   256   # simpleLine2.inductor.der(i)
  0       0                       0                       0                
  6   260   # simpleLine2.inductor.n.v
  0       1                       0                       0                
  6   256   # simpleLine2.inductor.L
  0       0                       0                       0                
  6   260   # simpleLine2.p1.v
 -1  9.9999999999999995E-07       0                       0                
  1   280   # simpleLine2.L
  0       1                       0                       0                
  6   256   # simpleLine2.resistor.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # simpleLine2.resistor.T_ref
 -1       0                       0                       0                
  1   280   # simpleLine2.resistor.alpha
  0       0                       0                       0                
  6   256   # simpleLine2.resistor.v
  0       0                       0                       0                
  6   769   # simpleLine2.resistor.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # simpleLine2.resistor.T
  0       0                       0                       0                
  6   256   # simpleLine2.resistor.LossPower
  0       0                       0                       0                
  6   256   # simpleLine2.resistor.R_actual
  0       0                       0                       0                
  6   260   # simpleLine2.n1.v
 -1       0                       0                       0                
  1   280   # simpleLine2.R
  0       0                       0                       0                
  6   256   # simpleLine3.inductor.v
  0       0                       0                       0                
  6   260   # simpleLine3.inductor.n.v
  0       1                       0                       0                
  6   256   # simpleLine3.inductor.L
  0       0                       0                       0                
  6   260   # simpleLine3.p1.v
 -1  9.9999999999999995E-07       0                       0                
  1   280   # simpleLine3.L
  0       1                       0                       0                
  6   256   # simpleLine3.resistor.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # simpleLine3.resistor.T_ref
 -1       0                       0                       0                
  1   280   # simpleLine3.resistor.alpha
  0       0                       0                       0                
  6   256   # simpleLine3.resistor.v
  0       0                       0                       0                
  6   769   # simpleLine3.resistor.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # simpleLine3.resistor.T
  0       0                       0                       0                
  6   256   # simpleLine3.resistor.LossPower
  0       0                       0                       0                
  6   256   # simpleLine3.resistor.R_actual
  0       0                       0                       0                
  6   260   # simpleLine3.n1.v
 -1       0                       0                       0                
  1   280   # simpleLine3.R
  0       0                       0                       0                
  6   256   # circuitBreaker4.switch.v
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker4.switch.Ron
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker4.switch.Goff
  0       0                       0                       0                
  6   769   # circuitBreaker4.switch.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker4.switch.T
  0       0                       0                       0                
  6   256   # circuitBreaker4.switch.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker4.switch.T_heatPort
  0       0                       0                       0                
  6  1345   # circuitBreaker4.switch.off
  0       0                       0                       0                
  6  1280   # circuitBreaker4.switch.s
  0       1                       0                       0                
  6   768   # circuitBreaker4.switch.unitVoltage
  0       1                       0                       0                
  6   768   # circuitBreaker4.switch.unitCurrent
 -1       0                       0                       0                
  1   281   # circuitBreaker4.useHeatPort
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker4.Goff
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker4.Ron
  0       1                       0                       0                
  6   256   # circuitBreaker4.cB_Trigger.const.k
  0       0                       0                       0                
  6   256   # circuitBreaker4.cB_Trigger.k
 -1  2.0000000000000000E+05       0                       0                
  1   280   # circuitBreaker4.k
  0       0                       0                       0                
  6   260   # circuitBreaker5.switch.p.v
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker5.switch.Ron
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker5.switch.Goff
  0       0                       0                       0                
  6   769   # circuitBreaker5.switch.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker5.switch.T
  0       0                       0                       0                
  6   256   # circuitBreaker5.switch.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker5.switch.T_heatPort
  0       0                       0                       0                
  6  1345   # circuitBreaker5.switch.off
  0       0                       0                       0                
  6  1280   # circuitBreaker5.switch.s
  0       1                       0                       0                
  6   768   # circuitBreaker5.switch.unitVoltage
  0       1                       0                       0                
  6   768   # circuitBreaker5.switch.unitCurrent
 -1       0                       0                       0                
  1   281   # circuitBreaker5.useHeatPort
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker5.Goff
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker5.Ron
  0       0                       0                       0                
  6   260   # circuitBreaker5.cB_Trigger.currentSensor.p.v
  0       0                       0                       0                
  6   260   # circuitBreaker5.cB_Trigger.currentSensor.n.v
  0       0                       0                       0                
  6   260   # circuitBreaker5.cB_Trigger.p1.v
  0       0                       0                       0                
  6   260   # circuitBreaker5.cB_Trigger.n1.v
  0       1                       0                       0                
  6   256   # circuitBreaker5.cB_Trigger.const.k
  0       0                       0                       0                
  6   256   # circuitBreaker5.cB_Trigger.k
  0       0                       0                       0                
  6   260   # circuitBreaker5.p1.v
 -1  2.0000000000000000E+05       0                       0                
  1   280   # circuitBreaker5.k
  0       0                       0                       0                
  6   256   # circuitBreaker6.switch.v
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker6.switch.Ron
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker6.switch.Goff
  0       0                       0                       0                
  6   769   # circuitBreaker6.switch.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker6.switch.T
  0       0                       0                       0                
  6   256   # circuitBreaker6.switch.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker6.switch.T_heatPort
  0       0                       0                       0                
  6  1345   # circuitBreaker6.switch.off
  0       0                       0                       0                
  6  1280   # circuitBreaker6.switch.s
  0       1                       0                       0                
  6   768   # circuitBreaker6.switch.unitVoltage
  0       1                       0                       0                
  6   768   # circuitBreaker6.switch.unitCurrent
 -1       0                       0                       0                
  1   281   # circuitBreaker6.useHeatPort
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker6.Goff
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker6.Ron
  0       1                       0                       0                
  6   256   # circuitBreaker6.cB_Trigger.const.k
  0       0                       0                       0                
  6   256   # circuitBreaker6.cB_Trigger.k
 -1  2.0000000000000000E+05       0                       0                
  1   280   # circuitBreaker6.k
  0       0                       0                       0                
  6   256   # circuitBreaker7.switch.v
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker7.switch.Ron
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # circuitBreaker7.switch.Goff
  0       0                       0                       0                
  6   769   # circuitBreaker7.switch.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker7.switch.T
  0       0                       0                       0                
  6   256   # circuitBreaker7.switch.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # circuitBreaker7.switch.T_heatPort
  0       0                       0                       0                
  6  1345   # circuitBreaker7.switch.off
  0       0                       0                       0                
  6  1280   # circuitBreaker7.switch.s
  0       1                       0                       0                
  6   768   # circuitBreaker7.switch.unitVoltage
  0       1                       0                       0                
  6   768   # circuitBreaker7.switch.unitCurrent
 -1       0                       0                       0                
  1   281   # circuitBreaker7.useHeatPort
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker7.Goff
 -1  1.0000000000000001E-05       0                       0                
  1   280   # circuitBreaker7.Ron
  0       1                       0                       0                
  6   256   # circuitBreaker7.cB_Trigger.const.k
  0       0                       0                       0                
  6   256   # circuitBreaker7.cB_Trigger.k
 -1  2.0000000000000000E+05       0                       0                
  1   280   # circuitBreaker7.k
  0       1                       0                       0                
  6   256   # simplifiedFuelCell1.constantVoltage.V
  0       0                       0                       0                
  6   260   # simplifiedFuelCell1.constantVoltage.n.v
  0       1                       0                       0                
  6   256   # simplifiedFuelCell1.resistor.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # simplifiedFuelCell1.resistor.T_ref
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell1.resistor.alpha
  0       0                       0                       0                
  6   256   # simplifiedFuelCell1.resistor.v
  0       0                       0                       0                
  6   769   # simplifiedFuelCell1.resistor.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # simplifiedFuelCell1.resistor.T
  0       0                       0                       0                
  6   256   # simplifiedFuelCell1.resistor.LossPower
  0       0                       0                       0                
  6   256   # simplifiedFuelCell1.resistor.R_actual
  0       0                       0                       0                
  6   260   # simplifiedFuelCell1.pin_p.v
  0       0                       0                       0                
  6   388   # simplifiedFuelCell1.pin_p.i
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell1.R
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell1.L
 -1    1000                       0                       0                
  1   280   # simplifiedFuelCell1.V
  0       1                       0                       0                
  6   256   # simplifiedFuelCell1.constantVoltage1.V
  0       0                       0                       0                
  6   260   # simplifiedFuelCell1.constantVoltage1.p.v
  0       0                       0                       0                
  6   260   # simplifiedFuelCell1.ground.p.v
  0       0                       0                       0                
  6   388   # simplifiedFuelCell1.ground.p.i
  0       1                       0                       0                
  6   256   # simplifiedFuelCell1.resistor1.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # simplifiedFuelCell1.resistor1.T_ref
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell1.resistor1.alpha
  0       0                       0                       0                
  6   256   # simplifiedFuelCell1.resistor1.v
  0       0                       0                       0                
  6   769   # simplifiedFuelCell1.resistor1.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # simplifiedFuelCell1.resistor1.T
  0       0                       0                       0                
  6   256   # simplifiedFuelCell1.resistor1.LossPower
  0       0                       0                       0                
  6   256   # simplifiedFuelCell1.resistor1.R_actual
  0       0                       0                       0                
  6   260   # simplifiedFuelCell1.pin_p1.v
  0       0                       0                       0                
  6   388   # simplifiedFuelCell1.pin_p1.i
  0       1                       0                       0                
  6   257   # inverter3.useConstantEnable
 -1       1                       0                       0                
  1   281   # inverter3.constantEnable
  0       3                       3                 1.0000000000000000E+100
  6   258   # inverter3.m
  0       0                       0                       0                
  6   321   # inverter3.fire_p[1]
  0       0                       0                       0                
  6   321   # inverter3.fire_p[2]
  0       0                       0                       0                
  6   321   # inverter3.fire_p[3]
  0       1                       0                       0                
  6   257   # inverter3.enableLogic.useConstantEnable
  0       0                       0                       0                
  6   257   # inverter3.enableLogic.constantEnable
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.enableLogic.m
  0       0                       0                       0                
  6   257   # inverter3.enableLogic.enableConstantSource.k
  0       3                       0                       0                
  6   258   # inverter3.enableLogic.booleanReplicator.nout
  0       0                       0                       0                
  6   321   # inverter3.fire_n[1]
  0       0                       0                       0                
  6   321   # inverter3.fire_n[2]
  0       0                       0                       0                
  6   321   # inverter3.fire_n[3]
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter3.RonTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter3.GoffTransistor
 -1       0                       0                       0                
  1   280   # inverter3.VkneeTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter3.RonDiode
 -1  1.0000000000000001E-05       0                       0                
  1   280   # inverter3.GoffDiode
 -1       0                       0                       0                
  1   280   # inverter3.VkneeDiode
  0       0                       0                       0                
  6   260   # inverter3.dc_p.v
  0       0                       0                       0                
  6   388   # inverter3.dc_p.i
  0       0                       0                       0                
  6   260   # inverter3.dc_n.v
  0       0                       0                       0                
  6   388   # inverter3.dc_n.i
  0       0                       0                       0                
  6   256   # inverter3.vDC
  0       0                       0                       0                
  6   256   # inverter3.powerDC
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.ac.m
  0       0                       0                       0                
  6   260   # inverter3.ac.pin[1].v
  0       0                       0                       0                
  6   388   # inverter3.ac.pin[1].i
  0       0                       0                       0                
  6   260   # inverter3.ac.pin[2].v
  0       0                       0                       0                
  6   388   # inverter3.ac.pin[2].i
  0       0                       0                       0                
  6   260   # inverter3.ac.pin[3].v
  0       0                       0                       0                
  6   388   # inverter3.ac.pin[3].i
  0       0                       0                       0                
  6   256   # inverter3.powerAC[1]
  0       0                       0                       0                
  6   256   # inverter3.powerAC[2]
  0       0                       0                       0                
  6   256   # inverter3.powerAC[3]
  0       0                       0                       0                
  6   256   # inverter3.powerTotalAC
  0       0                       0                       0                
  6   769   # inverter3.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.T
  0       0                       0                       0                
  6   256   # inverter3.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.T_heatPort
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.transistor_p.m
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.v[1]
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.v[2]
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.v[3]
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.i[1]
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.i[2]
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.transistor_p.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.transistor_p.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.transistor_p.mh
  0       0                       0                       0                
  6   769   # inverter3.transistor_p.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.T[3]
  0       0                       0                       0                
  6   321   # inverter3.transistor_p.fire[1]
  0       0                       0                       0                
  6   321   # inverter3.transistor_p.fire[2]
  0       0                       0                       0                
  6   321   # inverter3.transistor_p.fire[3]
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.idealGTOThyristor[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[1].Vknee
  0       0                       0                       0                
  6   769   # inverter3.transistor_p.idealGTOThyristor[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.transistor_p.idealGTOThyristor[1].T
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.idealGTOThyristor[1].LossPower
  0       1                       0                       0                
  6   353   # inverter3.transistor_p.idealGTOThyristor[1].off
  0       0                       0                       0                
  6  1312   # inverter3.transistor_p.idealGTOThyristor[1].s
  0       1                       0                       0                
  6   768   # inverter3.transistor_p.idealGTOThyristor[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.transistor_p.idealGTOThyristor[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.idealGTOThyristor[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[2].Vknee
  0       0                       0                       0                
  6   769   # inverter3.transistor_p.idealGTOThyristor[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.transistor_p.idealGTOThyristor[2].T
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.idealGTOThyristor[2].LossPower
  0       1                       0                       0                
  6   353   # inverter3.transistor_p.idealGTOThyristor[2].off
  0       0                       0                       0                
  6  1312   # inverter3.transistor_p.idealGTOThyristor[2].s
  0       1                       0                       0                
  6   768   # inverter3.transistor_p.idealGTOThyristor[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.transistor_p.idealGTOThyristor[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.idealGTOThyristor[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_p.idealGTOThyristor[3].Vknee
  0       0                       0                       0                
  6   769   # inverter3.transistor_p.idealGTOThyristor[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.transistor_p.idealGTOThyristor[3].T
  0       0                       0                       0                
  6   256   # inverter3.transistor_p.idealGTOThyristor[3].LossPower
  0       1                       0                       0                
  6   353   # inverter3.transistor_p.idealGTOThyristor[3].off
  0       0                       0                       0                
  6  1312   # inverter3.transistor_p.idealGTOThyristor[3].s
  0       1                       0                       0                
  6   768   # inverter3.transistor_p.idealGTOThyristor[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.transistor_p.idealGTOThyristor[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.diode_p.m
  0       0                       0                       0                
  6   256   # inverter3.diode_p.v[1]
  0       0                       0                       0                
  6   256   # inverter3.diode_p.v[2]
  0       0                       0                       0                
  6   256   # inverter3.diode_p.v[3]
  0       0                       0                       0                
  6   256   # inverter3.diode_p.i[1]
  0       0                       0                       0                
  6   256   # inverter3.diode_p.i[2]
  0       0                       0                       0                
  6   256   # inverter3.diode_p.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.diode_p.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.diode_p.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.diode_p.mh
  0       0                       0                       0                
  6   769   # inverter3.diode_p.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.T[3]
  0       0                       0                       0                
  6   256   # inverter3.diode_p.idealDiode[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # inverter3.diode_p.idealDiode[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.diode_p.idealDiode[1].T
  0       0                       0                       0                
  6   256   # inverter3.diode_p.idealDiode[1].LossPower
  0       1                       0                       0                
  6   353   # inverter3.diode_p.idealDiode[1].off
  0       0                       0                       0                
  6  1312   # inverter3.diode_p.idealDiode[1].s
  0       1                       0                       0                
  6   768   # inverter3.diode_p.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.diode_p.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.diode_p.idealDiode[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # inverter3.diode_p.idealDiode[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.diode_p.idealDiode[2].T
  0       0                       0                       0                
  6   256   # inverter3.diode_p.idealDiode[2].LossPower
  0       1                       0                       0                
  6   353   # inverter3.diode_p.idealDiode[2].off
  0       0                       0                       0                
  6  1312   # inverter3.diode_p.idealDiode[2].s
  0       1                       0                       0                
  6   768   # inverter3.diode_p.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.diode_p.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.diode_p.idealDiode[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_p.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # inverter3.diode_p.idealDiode[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.diode_p.idealDiode[3].T
  0       0                       0                       0                
  6   256   # inverter3.diode_p.idealDiode[3].LossPower
  0       1                       0                       0                
  6   353   # inverter3.diode_p.idealDiode[3].off
  0       0                       0                       0                
  6  1312   # inverter3.diode_p.idealDiode[3].s
  0       1                       0                       0                
  6   768   # inverter3.diode_p.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.diode_p.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.star_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.star_p.plug_p.m
  0       0                       0                       0                
  6   388   # inverter3.star_p.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # inverter3.star_p.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # inverter3.star_p.plug_p.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.transistor_n.m
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.v[1]
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.v[2]
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.v[3]
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.i[1]
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.i[2]
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.transistor_n.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.transistor_n.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.transistor_n.mh
  0       0                       0                       0                
  6   769   # inverter3.transistor_n.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.T[3]
  0       0                       0                       0                
  6   321   # inverter3.transistor_n.fire[1]
  0       0                       0                       0                
  6   321   # inverter3.transistor_n.fire[2]
  0       0                       0                       0                
  6   321   # inverter3.transistor_n.fire[3]
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.idealGTOThyristor[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[1].Vknee
  0       0                       0                       0                
  6   769   # inverter3.transistor_n.idealGTOThyristor[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.transistor_n.idealGTOThyristor[1].T
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.idealGTOThyristor[1].LossPower
  0       1                       0                       0                
  6   353   # inverter3.transistor_n.idealGTOThyristor[1].off
  0       0                       0                       0                
  6  1312   # inverter3.transistor_n.idealGTOThyristor[1].s
  0       1                       0                       0                
  6   768   # inverter3.transistor_n.idealGTOThyristor[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.transistor_n.idealGTOThyristor[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.idealGTOThyristor[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[2].Vknee
  0       0                       0                       0                
  6   769   # inverter3.transistor_n.idealGTOThyristor[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.transistor_n.idealGTOThyristor[2].T
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.idealGTOThyristor[2].LossPower
  0       1                       0                       0                
  6   353   # inverter3.transistor_n.idealGTOThyristor[2].off
  0       0                       0                       0                
  6  1312   # inverter3.transistor_n.idealGTOThyristor[2].s
  0       1                       0                       0                
  6   768   # inverter3.transistor_n.idealGTOThyristor[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.transistor_n.idealGTOThyristor[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.idealGTOThyristor[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.transistor_n.idealGTOThyristor[3].Vknee
  0       0                       0                       0                
  6   769   # inverter3.transistor_n.idealGTOThyristor[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.transistor_n.idealGTOThyristor[3].T
  0       0                       0                       0                
  6   256   # inverter3.transistor_n.idealGTOThyristor[3].LossPower
  0       1                       0                       0                
  6   353   # inverter3.transistor_n.idealGTOThyristor[3].off
  0       0                       0                       0                
  6  1312   # inverter3.transistor_n.idealGTOThyristor[3].s
  0       1                       0                       0                
  6   768   # inverter3.transistor_n.idealGTOThyristor[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.transistor_n.idealGTOThyristor[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.diode_n.m
  0       0                       0                       0                
  6   256   # inverter3.diode_n.v[1]
  0       0                       0                       0                
  6   256   # inverter3.diode_n.v[2]
  0       0                       0                       0                
  6   256   # inverter3.diode_n.v[3]
  0       0                       0                       0                
  6   256   # inverter3.diode_n.i[1]
  0       0                       0                       0                
  6   256   # inverter3.diode_n.i[2]
  0       0                       0                       0                
  6   256   # inverter3.diode_n.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.diode_n.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.diode_n.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.diode_n.mh
  0       0                       0                       0                
  6   769   # inverter3.diode_n.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.T[3]
  0       0                       0                       0                
  6   256   # inverter3.diode_n.idealDiode[1].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[1].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # inverter3.diode_n.idealDiode[1].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.diode_n.idealDiode[1].T
  0       0                       0                       0                
  6   256   # inverter3.diode_n.idealDiode[1].LossPower
  0       1                       0                       0                
  6   353   # inverter3.diode_n.idealDiode[1].off
  0       0                       0                       0                
  6  1312   # inverter3.diode_n.idealDiode[1].s
  0       1                       0                       0                
  6   768   # inverter3.diode_n.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.diode_n.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.diode_n.idealDiode[2].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[2].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # inverter3.diode_n.idealDiode[2].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.diode_n.idealDiode[2].T
  0       0                       0                       0                
  6   256   # inverter3.diode_n.idealDiode[2].LossPower
  0       1                       0                       0                
  6   353   # inverter3.diode_n.idealDiode[2].off
  0       0                       0                       0                
  6  1312   # inverter3.diode_n.idealDiode[2].s
  0       1                       0                       0                
  6   768   # inverter3.diode_n.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.diode_n.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # inverter3.diode_n.idealDiode[3].v
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[3].Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # inverter3.diode_n.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # inverter3.diode_n.idealDiode[3].useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # inverter3.diode_n.idealDiode[3].T
  0       0                       0                       0                
  6   256   # inverter3.diode_n.idealDiode[3].LossPower
  0       1                       0                       0                
  6   353   # inverter3.diode_n.idealDiode[3].off
  0       0                       0                       0                
  6  1312   # inverter3.diode_n.idealDiode[3].s
  0       1                       0                       0                
  6   768   # inverter3.diode_n.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # inverter3.diode_n.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # inverter3.star_n.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # inverter3.star_n.plug_p.m
  0       0                       0                       0                
  6   388   # inverter3.star_n.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # inverter3.star_n.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # inverter3.star_n.plug_p.pin[3].i
 -1  1.0000000000000001E-05       0                       0                
  1   280   # dcdc2.RonTransistor
 -1  1.0000000000000001E-05       0                       0                
  1   280   # dcdc2.GoffTransistor
 -1       0                       0                       0                
  1   280   # dcdc2.VkneeTransistor
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # dcdc2.RonDiode
 -1  1.0000000000000001E-05       0                 1.0000000000000000E+100
  1   280   # dcdc2.GoffDiode
 -1       0                       0                 1.0000000000000000E+100
  1   280   # dcdc2.VkneeDiode
  0       0                       0                       0                
  6   256   # dcdc2.vDC1
  0       0                       0                       0                
  6   256   # dcdc2.powerDC1
  0       0                       0                       0                
  6   260   # dcdc2.dc_p2.v
  0       0                       0                       0                
  6   256   # dcdc2.vDC2
  0       0                       0                       0                
  6   256   # dcdc2.powerDC2
  0       0                       0                       0                
  6   769   # dcdc2.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dcdc2.T
  0       0                       0                       0                
  6   256   # dcdc2.LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # dcdc2.T_heatPort
  0       1                       0                       0                
  6   257   # dcdc2.useConstantEnable
 -1       1                       0                       0                
  1   281   # dcdc2.constantEnable
  0       1                       1                 1.0000000000000000E+100
  6   258   # dcdc2.m
  0       1                       0                       0                
  6   257   # dcdc2.enableLogic.useConstantEnable
  0       0                       0                       0                
  6   257   # dcdc2.enableLogic.constantEnable
  0       1                       1                 1.0000000000000000E+100
  6   258   # dcdc2.enableLogic.m
  0       0                       0                       0                
  6   257   # dcdc2.enableLogic.enableConstantSource.k
  0       1                       0                       0                
  6   258   # dcdc2.enableLogic.booleanReplicator.nout
  0       0                       0                       0                
  6   321   # dcdc2.andCondition_p.y
  0       0                       0                       0                
  6   321   # dcdc2.fire_p
  0       0                       0                       0                
  6   256   # dcdc2.transistor.v
  0       0                       0                       0                
  6   256   # dcdc2.transistor.i
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc2.transistor.Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc2.transistor.Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc2.transistor.Vknee
  0       0                       0                       0                
  6   769   # dcdc2.transistor.useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # dcdc2.transistor.T
  0       0                       0                       0                
  6   256   # dcdc2.transistor.LossPower
  0       1                       0                       0                
  6   353   # dcdc2.transistor.off
  0       0                       0                       0                
  6  1280   # dcdc2.transistor.s
  0       1                       0                       0                
  6   768   # dcdc2.transistor.unitVoltage
  0       1                       0                       0                
  6   768   # dcdc2.transistor.unitCurrent
  0       0                       0                       0                
  6   256   # dcdc2.diode.v
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc2.diode.Ron
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc2.diode.Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # dcdc2.diode.Vknee
  0       0                       0                       0                
  6   769   # dcdc2.diode.useHeatPort
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # dcdc2.diode.T
  0       0                       0                       0                
  6   256   # dcdc2.diode.LossPower
  0       1                       0                       0                
  6   353   # dcdc2.diode.off
  0       0                       0                       0                
  6  1280   # dcdc2.diode.s
  0       1                       0                       0                
  6   768   # dcdc2.diode.unitVoltage
  0       1                       0                       0                
  6   768   # dcdc2.diode.unitCurrent
  0       1                       0                       0                
  6   257   # signalPWM4.useConstantDutyCycle
 -1  5.9999999999999998E-01       0                       0                
  1   280   # signalPWM4.constantDutyCycle
 -1     100                       0                       0                
  1   280   # signalPWM4.f
 -1       0                       0                       0                
  1   280   # signalPWM4.startTime
  0       0                       0                       0                
  6   321   # signalPWM4.notFire
  0       1                       0                       0                
  6   256   # signalPWM4.const.k
 -1       1                       0                       0                
  1   280   # signalPWM4.limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM4.limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM4.limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM4.limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM4.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM4.limiter.y
  0       0                       0                       0                
  6   256   # signalPWM4.greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM4.greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM4.zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM4.zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM4.zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM4.zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM4.zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM4.sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM4.sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM4.sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM4.sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM4.sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM4.sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM4.sawtooth.count
 -1       3                       0                       0                
  1   282   # threePhaseMotor2.m
 -1    4000                       0                       0                
  1   280   # threePhaseMotor2.wref
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.m
  0       2                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.aimc.p
  0      50                       0                       0                
  6   256   # threePhaseMotor2.aimc.fsNominal
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimc.TsOperational
  0  2.9999999999999999E-02       0                       0                
  6   256   # threePhaseMotor2.aimc.Rs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.TsRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.alpha20s
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.Lszero
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.Lssigma
  0  2.8999999999999998E-01       0                       0                
  6   256   # threePhaseMotor2.aimc.Jr
  0       0                       0                       0                
  6   257   # threePhaseMotor2.aimc.useSupport
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.Js
  0       0                       0                       0                
  6   257   # threePhaseMotor2.aimc.useThermalPort
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor2.aimc.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.frictionParameters.tauLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.phiMechanical
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.tauElectrical
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.inertiaRotor.J
  0       3                       1                       5                
  6   770   # threePhaseMotor2.aimc.inertiaRotor.stateSelect
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.inertiaStator.flange_a.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.inertiaStator.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.inertiaStator.J
  0       3                       1                       5                
  6   770   # threePhaseMotor2.aimc.inertiaStator.stateSelect
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.inertiaStator.der(phi)
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.inertiaStator.w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.inertiaStator.der(w)
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.inertiaStator.a
 -1       0                       0                       0                
  1   280   # threePhaseMotor2.aimc.fixed.phi0
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.friction.flange.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.friction.support.tau
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.phi
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.frictionParameters.tauLinear
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.friction.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.friction.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.friction.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.friction.lossPower
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalSupport.tau
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCoreParameters.PRef
  0     100                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor2.aimc.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoadParameters.PRef
  0     100                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.powerStator
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.powerMechanical
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.powerInertiaStator
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.powerInertiaRotor
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerTotal
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerStatorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerStatorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerRotorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerStrayLoad
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerFriction
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.powerBalance.lossPowerRotorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.vs[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.vs[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.vs[3]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.i_0_s
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.der(i_0_s)
 -1       0                       0                       0                
  2   280   # threePhaseMotor2.aimc.idq_sr[1]
  0       0                       0                       0                
  3   256   # threePhaseMotor2.aimc.der(idq_sr[1])
 -1       0                       0                       0                
  2   280   # threePhaseMotor2.aimc.idq_sr[2]
  0       0                       0                       0                
  3   256   # threePhaseMotor2.aimc.der(idq_sr[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.idq_rs[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.idq_rs[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.der(idq_rs[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.der(idq_rs[2])
 -1       0                       0                       0                
  2   280   # threePhaseMotor2.aimc.idq_rr[1]
  0       0                       0                       0                
  3   256   # threePhaseMotor2.aimc.der(idq_rr[1])
 -1       0                       0                       0                
  2   280   # threePhaseMotor2.aimc.idq_rr[2]
  0       0                       0                       0                
  3   256   # threePhaseMotor2.aimc.der(idq_rr[2])
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.plug_sn.m
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.plug_sn.pin[1].v
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.aimc.rs.m
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.rs.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.rs.plug_n.m
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.rs.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.rs.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.rs.plug_n.pin[3].v
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.R[1]
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.R[2]
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.R[3]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.T_ref[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.T_ref[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.T_ref[3]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.alpha[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.alpha[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.alpha[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.aimc.rs.mh
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.rs.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.T[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.T[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.T[3]
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].v
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.rs.resistor[1].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].T
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[1].R_actual
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].v
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.rs.resistor[2].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].T
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[2].R_actual
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].alpha
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].v
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.rs.resistor[3].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].T
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].LossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.rs.resistor[3].R_actual
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.L[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.L[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.v_[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.v_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.i_[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.i_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.der(i_[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lssigma.der(i_[2])
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.lssigma.spacePhasor_a.v_[1]
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.lssigma.spacePhasor_a.v_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lszero.v
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lszero.i
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.lszero.der(i)
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.lszero.p.v
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.lszero.p.i
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.lszero.n.v
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.lszero.n.i
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.lszero.L
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.statorCore.coreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCore.coreParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCore.coreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCore.coreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor2.aimc.statorCore.coreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.statorCore.coreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.statorCore.coreParameters.wMin
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.statorCore.m
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.statorCore.turnsRatio
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.statorCore.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.statorCore.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.statorCore.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.statorCore.lossPower
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.statorCore.spacePhasor.i_[1]
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.statorCore.spacePhasor.i_[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.statorCore.Gc
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.statorCore.wLimit
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.spacePhasorS.m
  0       1                       0                       0                
  6   256   # threePhaseMotor2.aimc.spacePhasorS.turnsRatio
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.spacePhasorS.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.spacePhasorS.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.spacePhasorS.v[3]
  0  6.6666666666666663E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[1, 1]
  0 -3.3333333333333315E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[1, 2]
  0 -3.3333333333333359E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[1, 3]
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[2, 1]
  0  5.7735026918962573E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[2, 2]
  0 -5.7735026918962551E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.TransformationMatrix[2, 3]
  0       1                       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[1, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[1, 2]
  0 -4.9999999999999978E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[2, 1]
  0  8.6602540378443871E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[2, 2]
  0 -5.0000000000000044E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[3, 1]
  0 -8.6602540378443837E-01       0                       0                
  6  1280   # threePhaseMotor2.aimc.spacePhasorS.InverseTransformation[3, 2]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.spacePhasorS.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.spacePhasorS.plug_n.m
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.spacePhasorS.zero.v
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.spacePhasorS.zero.i
  0       0                       0                       0                
  6   260   # threePhaseMotor2.aimc.spacePhasorS.ground.v
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.spacePhasorS.ground.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.aimc.strayLoad.m
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.v[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.v[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.strayLoad.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.aimc.strayLoad.plug_n.m
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.strayLoad.flange.tau
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.strayLoad.support.tau
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.phi
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoad.strayLoadParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoad.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoad.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.strayLoad.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.strayLoadParameters.tauRef
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.strayLoad.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.strayLoad.heatPort.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.strayLoad.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.lossPower
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.strayLoad.iRMS
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.thermalAmbient.m
  0       0                       0                       0                
  6   257   # threePhaseMotor2.aimc.thermalAmbient.useTemperatureInputs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.TDefault
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Ts
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Q_flowStatorWinding
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Q_flowStatorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Q_flowRotorCore
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Q_flowStrayLoad
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Q_flowFriction
  0       3                       0                       0                
  6   262   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortFriction.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.thermalPort.heatPortFriction.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.temperatureStatorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.temperatureStatorCore.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.temperatureStatorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.temperatureRotorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.temperatureRotorCore.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.temperatureRotorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.temperatureStrayLoad.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.temperatureStrayLoad.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.temperatureStrayLoad.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.temperatureFriction.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # threePhaseMotor2.aimc.thermalAmbient.temperatureFriction.port.T
  0       0                       0                       0                
  6   388   # threePhaseMotor2.aimc.thermalAmbient.temperatureFriction.port.Q_flow
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.constTs.k
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.aimc.thermalAmbient.thermalCollectorStator.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Tr
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.thermalAmbient.Q_flowTotal
  0       1                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.thermalAmbient.constTr.k
  0  3.1415926535897931E+00       0                       0                
  6  1280   # threePhaseMotor2.aimc.pi
  0       3                       0                       0                
  6  1286   # threePhaseMotor2.aimc.internalThermalPort.m
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortStatorWinding[1].Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortStatorWinding[2].Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortStatorWinding[3].Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor2.aimc.internalThermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor2.aimc.internalThermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor2.aimc.internalThermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # threePhaseMotor2.aimc.internalThermalPort.heatPortFriction.T
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortFriction.Q_flow
  0       0                       0                       0                
  6  1412   # threePhaseMotor2.aimc.internalThermalPort.heatPortRotorWinding.Q_flow
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.Lm
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimc.airGapS.m
  0       1                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.aimc.airGapS.p
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.gamma
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(gamma)
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.psi_ms[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.psi_ms[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(psi_ms[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(psi_ms[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.psi_mr[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.psi_mr[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(psi_mr[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(psi_mr[2])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.RotationMatrix[1, 1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.RotationMatrix[1, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.RotationMatrix[2, 1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.RotationMatrix[2, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(RotationMatrix[1, 1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(RotationMatrix[1, 2])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(RotationMatrix[2, 1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(RotationMatrix[2, 2])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.i_ms[1]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.i_ms[2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(i_ms[1])
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.airGapS.der(i_ms[2])
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.airGapS.L[1, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.airGapS.L[1, 2]
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.airGapS.L[2, 1]
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.aimc.airGapS.L[2, 2]
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.Lm
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.Lrsigma
  0  4.0000000000000001E-02       0                       0                
  6   256   # threePhaseMotor2.aimc.Rr
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.TrRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.alpha20r
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimc.TrOperational
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.squirrelCageR.Lrsigma
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.squirrelCageR.Rr
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.squirrelCageR.T_ref
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.squirrelCageR.alpha
  0       1                       0                       0                
  6   769   # threePhaseMotor2.aimc.squirrelCageR.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimc.squirrelCageR.T
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimc.squirrelCageR.Rr_actual
  0       3                       0                       0                
  6   258   # threePhaseMotor2.terminalBox.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.terminalBox.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.terminalBox.plug_sn.m
  0       3                       1                 1.0000000000000000E+100
  6   258   # threePhaseMotor2.terminalBox.star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.terminalBox.star.plug_p.m
  0       0                       0                       0                
  6   388   # threePhaseMotor2.terminalBox.star.pin_n.i
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.terminalBox.plugSupply.m
  0       0                       0                       0                
  6   388   # threePhaseMotor2.terminalBox.starpoint.i
  0       0                       0                       0                
  6   388   # threePhaseMotor2.flange1.tau
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimcData.m
 -1  2.8999999999999998E-01       0                       0                
  1   280   # threePhaseMotor2.aimcData.Jr
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.Js
 -1       2                       1                 1.0000000000000000E+100
  1   282   # threePhaseMotor2.aimcData.p
 -1      50                       0                       0                
  1   280   # threePhaseMotor2.aimcData.fsNominal
 -1  2.9999999999999999E-02       0                       0                
  1   280   # threePhaseMotor2.aimcData.Rs
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimcData.TsRef
 -1       0                       0                       0                
  1   280   # threePhaseMotor2.aimcData.alpha20s
 -1       1                       0                       0                
  1   280   # threePhaseMotor2.aimcData.effectiveStatorTurns
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.Lszero
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.Lssigma
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimcData.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimcData.frictionParameters.wRef
 -1       2                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimcData.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # threePhaseMotor2.aimcData.frictionParameters.linear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.frictionParameters.tauLinear
  0       3                       0                       0                
  6   258   # threePhaseMotor2.aimcData.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimcData.statorCoreParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimcData.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimcData.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # threePhaseMotor2.aimcData.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimcData.strayLoadParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimcData.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # threePhaseMotor2.aimcData.strayLoadParameters.wRef
 -1       1                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimcData.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.Lm
  0       0                       0                       0                
  6   256   # threePhaseMotor2.aimcData.Lrsigma
 -1  4.0000000000000001E-02       0                       0                
  1   280   # threePhaseMotor2.aimcData.Rr
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # threePhaseMotor2.aimcData.TrRef
 -1       0                       0                       0                
  1   280   # threePhaseMotor2.aimcData.alpha20r
  0       3                       1                 1.0000000000000000E+100
  6   262   # threePhaseMotor2.plug_p1.m
  0       0                       0                       0                
  6  1280   # threePhaseMotor2.rpm
  0       0                       0                       0                
  6   257   # signalPWM5[1].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM5[1].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM5[1].f
 -1       0                       0                       0                
  1   280   # signalPWM5[1].startTime
 -1       1                       0                       0                
  1   280   # signalPWM5[1].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM5[1].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM5[1].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM5[1].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM5[1].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM5[1].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM5[1].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM5[1].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM5[1].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM5[1].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM5[1].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM5[1].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM5[1].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM5[1].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM5[1].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM5[1].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM5[1].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM5[1].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM5[1].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM5[1].sawtooth.count
  0       0                       0                       0                
  6   257   # signalPWM5[2].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM5[2].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM5[2].f
 -1       0                       0                       0                
  1   280   # signalPWM5[2].startTime
 -1       1                       0                       0                
  1   280   # signalPWM5[2].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM5[2].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM5[2].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM5[2].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM5[2].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM5[2].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM5[2].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM5[2].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM5[2].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM5[2].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM5[2].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM5[2].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM5[2].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM5[2].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM5[2].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM5[2].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM5[2].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM5[2].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM5[2].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM5[2].sawtooth.count
  0       0                       0                       0                
  6   257   # signalPWM5[3].useConstantDutyCycle
 -1       0                       0                       0                
  1   280   # signalPWM5[3].constantDutyCycle
 -1  100000                       0                       0                
  1   280   # signalPWM5[3].f
 -1       0                       0                       0                
  1   280   # signalPWM5[3].startTime
 -1       1                       0                       0                
  1   280   # signalPWM5[3].limiter.uMax
 -1       0                       0                       0                
  1   280   # signalPWM5[3].limiter.uMin
  0       0                       0                       0                
  6   257   # signalPWM5[3].limiter.strict
  0       2                       1                       4                
  6   258   # signalPWM5[3].limiter.homotopyType
  0       1                       0                       0                
  6   257   # signalPWM5[3].limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # signalPWM5[3].limiter.y
  0       0                       0                       0                
  6   256   # signalPWM5[3].greaterEqual.u1
  0       0                       0                       0                
  6   320   # signalPWM5[3].greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # signalPWM5[3].zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # signalPWM5[3].zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # signalPWM5[3].zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # signalPWM5[3].zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # signalPWM5[3].zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # signalPWM5[3].sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # signalPWM5[3].sawtooth.period
  0      -1                       0                       0                
  6   258   # signalPWM5[3].sawtooth.nperiod
  0       0                       0                       0                
  6   256   # signalPWM5[3].sawtooth.offset
  0       0                       0                       0                
  6   256   # signalPWM5[3].sawtooth.startTime
  0       0                       0                       0                
  6  1344   # signalPWM5[3].sawtooth.T_start
  0       0                       0                       0                
  6  1346   # signalPWM5[3].sawtooth.count
 -1       0                       0                       0                
  2   284   # variableSpeedDrive_ThreePhase2.speedSensor.flange.phi
  0       0                       0                       0                
  3   260   # variableSpeedDrive_ThreePhase2.speedSensor.flange.der(phi)
  0       0                       0                       0                
  6   388   # variableSpeedDrive_ThreePhase2.speedSensor.flange.tau
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase2.currentController.k
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # variableSpeedDrive_ThreePhase2.currentController.T
  0       2                       1                       4                
  6   258   # variableSpeedDrive_ThreePhase2.currentController.initType
 -1       0                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase2.currentController.x_start
 -1       0                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase2.currentController.y_start
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase2.currentController.u
 -1       0                       0                       0                
  2   272   # variableSpeedDrive_ThreePhase2.currentController.x
  0       0                       0                       0                
  3   256   # variableSpeedDrive_ThreePhase2.currentController.der(x)
  0       0                       0                       0                
  6   388   # variableSpeedDrive_ThreePhase2.flange1.tau
  0       0                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase2.y1[1]
  0       1                       0                       0                
  6   256   # variableSpeedDrive_ThreePhase2.const.k
 -1   41000                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase2.wref
 -1       1                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase2.T
 -1       1                       0                       0                
  1   280   # variableSpeedDrive_ThreePhase2.k
  0       0                       0                       0                
  6   388   # fan2.inertia.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # fan2.inertia.J
  0       3                       1                       5                
  6   770   # fan2.inertia.stateSelect
 -1       0                       0                       0                
  2   272   # fan2.inertia.w
  0       0                       0                       0                
  3   256   # fan2.inertia.der(w)
 -1       1                       0                       0                
  1   280   # fan2.J
 -1       0                       0                       0                
  1   280   # fan2.deltaPhi
 -1      10                       0                       0                
  1   280   # resistor.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # resistor.T_ref
 -1       0                       0                       0                
  1   280   # resistor.alpha
  0       0                       0                       0                
  6   256   # resistor.v
  0       0                       0                       0                
  6   769   # resistor.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.T
  0       0                       0                       0                
  6   256   # resistor.LossPower
  0       0                       0                       0                
  6   256   # resistor.R_actual
 -1      10                       0                       0                
  1   280   # resistor1.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # resistor1.T_ref
 -1       0                       0                       0                
  1   280   # resistor1.alpha
  0       0                       0                       0                
  6   256   # resistor1.v
  0       0                       0                       0                
  6   769   # resistor1.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor1.T
  0       0                       0                       0                
  6   256   # resistor1.LossPower
  0       0                       0                       0                
  6   256   # resistor1.R_actual
 -1     100                       0                       0                
  1   280   # hTS_exploss.temperature
 -1       1                       0                       0                
  1   280   # hTS_exploss.l
 -1  1.0000000000000000E-04       0                       0                
  1   280   # hTS_exploss.E_0
 -1       1                       0                       0                
  1   280   # hTS_exploss.n
 -1       1                       0                       0                
  1   280   # hTS_exploss.I_c
  0       0                       0                       0                
  6   256   # hTS_exploss.E
 -1     100                       0                       0                
  1   280   # hTS_exploss.R
 -1     100                       0                       0                
  1   280   # hTS_exploss1.temperature
 -1       1                       0                       0                
  1   280   # hTS_exploss1.l
 -1  1.0000000000000000E-04       0                       0                
  1   280   # hTS_exploss1.E_0
 -1       1                       0                       0                
  1   280   # hTS_exploss1.n
 -1       1                       0                       0                
  1   280   # hTS_exploss1.I_c
  0       0                       0                       0                
  6   256   # hTS_exploss1.E
 -1     100                       0                       0                
  1   280   # hTS_exploss1.R
  0       0                       0                       0                
  6   260   # batteryPack.core.sensors.signals.i_sns
  0       0                       0                       0                
  6   260   # batteryPack.core.sensors.signals.cell_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.sensors.signals.core_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.sensors.signals.core_p_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.sensors.signals.link_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.sensors.signals.link_p_sns
  0       0                       0                       0                
  6   388   # batteryPack.thermal.adaptAmbient.battery.ambient.Q_flow
  0       0                       0                       0                
  6   388   # batteryPack.thermal.adaptCellsLumped.battery.cellsLumped.Q_flow
  0       0                       0                       0                
  6   260   # batteryPack.thermal.sensors.signals.T_core_sns[1, 1]
  0       0                       0                       0                
  6   260   # batteryPack.controller.core[1, 1].cell_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.controller.core[1, 1].i_sns
  0       0                       0                       0                
  6   260   # batteryPack.core.signals.cell_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.core.signals.i_sns
  0       0                       0                       0                
  6   260   # batteryPack.controller.electrical.core_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.controller.electrical.core_p_sns
  0       0                       0                       0                
  6   260   # batteryPack.controller.electrical.link_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.controller.electrical.link_p_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.signals.core_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.signals.core_p_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.signals.link_i_sns
  0       0                       0                       0                
  6   260   # batteryPack.electrical.signals.link_p_sns
  0       0                       0                       0                
  6   260   # batteryPack.controller.thermal.T_core_sns[1, 1]
  0       0                       0                       0                
  6   260   # batteryPack.thermal.signals.T_core_sns[1, 1]


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(3121,139)

Number of phases [:#(type=Integer)]
Value of constant voltage [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Current flowing into the pin [A]
Impedance [Ohm]
Impedance [H]
Fuel cell voltage [V]
Value of constant voltage [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Current flowing into the pin [A]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Firing signals of positive potential transistors [:#(type=Boolean)]
Firing signals of positive potential transistors [:#(type=Boolean)]
Firing signals of positive potential transistors [:#(type=Boolean)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Diode closed resistance [Ohm]
Diode opened conductance [S]
Diode threshold voltage [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
DC voltage [V]
DC power [W]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
AC power [W]
AC power [W]
AC power [W]
AC total power [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Diode forward threshold voltage [V]
DC voltage side 1 [V]
DC power side 1 [W]
Potential at the pin [V]
DC voltages side 2 [V]
DC power side 2 [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Connector of Boolean output signal [:#(type=Boolean)]
Firing signal of positive potential transistor [:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz]
Start time [s]
Firing PWM signal [:#(type=Boolean)]
Constant output value
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal
Connector of first Real input signal
Connector of second Real input signal
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]

Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Number of phases [:#(type=Integer)]
[rev/min]
Number of phases [:#(type=Integer)]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Operational temperature of stator resistance [K|degC]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K|1/K]
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Rotor's moment of inertia [kg.m2]
Enable / disable (=fixed stator) support [:#(type=Boolean)]
Stator's moment of inertia [kg.m2]
Enable / disable (=fixed temperatures) thermal port [:#(type=Boolean)]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Mechanical angle of rotor against stator [rad|deg]
Electromagnetic torque [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Cut torque in the flange [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Electrical power (stator) [W]
Mechanical power [W]
Stator inertia power [W]
Rotor inertia power [W]
Total loss power [W]
Stator copper losses [W]
Stator core losses [W]
Rotor core losses [W]
Stray load losses [W]
Friction losses [W]
Rotor copper losses [W]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator zero-sequence current [A]
der(Stator zero-sequence current) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / stator fixed frame [A]
Rotor space phasor current / stator fixed frame [A]
der(Rotor space phasor current / stator fixed frame) [A/s]
der(Rotor space phasor current / stator fixed frame) [A/s]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Inductance of both axes [H]
Inductance of both axes [H]
[V]
[V]
[A]
[A]
[A/s]
[A/s]
1=real, 2=imaginary part [V]
1=real, 2=imaginary part [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Inductance [H]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Number of phases [:#(type=Integer)]
Effective number of stator turns / effective number of rotor turns (if used as rotor core)
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
1=real, 2=imaginary part [A]
1=real, 2=imaginary part [A]
Variable core loss conductance [S]
Limited angular velocity [rad/s]
Number of phases [:#(type=Integer)]
Turns ratio [1]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
[1]
[1]
[1]
[1]
[1]
[1]






Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
[A]
Number of stator phases [:#(type=Integer)]
If true, temperature inputs are used; else, temperatures are constant [:#(type=Boolean)]
Default temperature [K|degC]
Temperature of stator windings [K|degC]
Heat flow rate of stator windings [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stray load losses [W]
Heat flow rate of friction losses [W]
Number of stator phases [:#(type=Integer)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant output value [K]
Number of collected heat flows [:#(type=Integer)]
Temperature of rotor (squirrel cage) [K|degC]
[W]
Constant output value [K]

Number of stator phases [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Main field inductance [H]
Number of phases [:#(type=Integer)]
Number of pole pairs [:#(type=Integer)]
Rotor displacement angle [rad|deg]
der(Rotor displacement angle) [rad/s]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
Magnetizing current space phasor with respect to the stator fixed frame [A]
Magnetizing current space phasor with respect to the stator fixed frame [A]
der(Magnetizing current space phasor with respect to the stator fixed frame) [A/s]
der(Magnetizing current space phasor with respect to the stator fixed frame) [A/s]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Stator main field inductance per phase [H]
Rotor stray inductance per phase (equivalent three phase winding) [H]
Rotor resistance per phase (equivalent three phase winding) at TRef [Ohm]
Reference temperature of rotor resistance [K|degC]
Temperature coefficient of rotor resistance at 20 degC [1/K]
Operational temperature of rotor resistance [K|degC]
Rotor stray inductance per phase translated to stator [H]
Rotor resistance per phase translated to stator at T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance at T_ref [1/K]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Actual resistance = Rr*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia [kg.m2]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K]
Effective number of stator turns
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity [1]
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Stator main field inductance per phase [H]
Rotor stray inductance per phase (equivalent three phase winding) [H]
Rotor resistance per phase (equivalent three phase winding) at TRef [Ohm]
Reference temperature of rotor resistance [K|degC]
Temperature coefficient of rotor resistance at 20 degC [1/K]
Number of phases [:#(type=Integer)]
Reference speed of the generator [rad/s]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state [rad/s]
Initial value of output [rad/s]
Connector of Real input signal [rad/s]
State of block [rad/s]
der(State of block) [rad/s2]
Cut torque in the flange [N.m]
Connector of Real output signal [rad/s]
Constant output value [rad/s]
Constant output value [rad/s]
Time Constant (T>0 required) [s]
Gain [1]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Moment of inertia of the fan blades [kg.m2]
Fixed rotation of left flange with respect to right flange [rad|deg]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Firing signals of positive potential transistors [:#(type=Boolean)]
Firing signals of positive potential transistors [:#(type=Boolean)]
Firing signals of positive potential transistors [:#(type=Boolean)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Diode closed resistance [Ohm]
Diode opened conductance [S]
Diode threshold voltage [V]
Potential at the pin [V]
Potential at the pin [V]
DC voltage [V]
DC power [W]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
AC power [W]
AC power [W]
AC power [W]
AC total power [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Diode forward threshold voltage [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
DC current side 1 [A]
DC power side 1 [W]
Potential at the pin [V]
Potential at the pin [V]
DC power side 2 [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Connector of Boolean output signal [:#(type=Boolean)]
Firing signal of positive potential transistor [:#(type=Boolean)]
Potential at the pin [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz]
Start time [s]
Firing PWM signal [:#(type=Boolean)]
Constant output value
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal
Connector of first Real input signal
Connector of second Real input signal
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]

Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Number of phases [:#(type=Integer)]
[rev/min]
Number of phases [:#(type=Integer)]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Operational temperature of stator resistance [K|degC]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K|1/K]
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Rotor's moment of inertia [kg.m2]
Enable / disable (=fixed stator) support [:#(type=Boolean)]
Stator's moment of inertia [kg.m2]
Enable / disable (=fixed temperatures) thermal port [:#(type=Boolean)]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Mechanical angle of rotor against stator [rad|deg]
Electromagnetic torque [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Cut torque in the flange [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Electrical power (stator) [W]
Mechanical power [W]
Stator inertia power [W]
Rotor inertia power [W]
Total loss power [W]
Stator copper losses [W]
Stator core losses [W]
Rotor core losses [W]
Stray load losses [W]
Friction losses [W]
Rotor copper losses [W]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator zero-sequence current [A]
der(Stator zero-sequence current) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / stator fixed frame [A]
Rotor space phasor current / stator fixed frame [A]
der(Rotor space phasor current / stator fixed frame) [A/s]
der(Rotor space phasor current / stator fixed frame) [A/s]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Inductance of both axes [H]
Inductance of both axes [H]
[V]
[V]
[A]
[A]
[A/s]
[A/s]
1=real, 2=imaginary part [V]
1=real, 2=imaginary part [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Inductance [H]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Number of phases [:#(type=Integer)]
Effective number of stator turns / effective number of rotor turns (if used as rotor core)
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
1=real, 2=imaginary part [A]
1=real, 2=imaginary part [A]
Variable core loss conductance [S]
Limited angular velocity [rad/s]
Number of phases [:#(type=Integer)]
Turns ratio [1]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
[1]
[1]
[1]
[1]
[1]
[1]






Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
[A]
Number of stator phases [:#(type=Integer)]
If true, temperature inputs are used; else, temperatures are constant [:#(type=Boolean)]
Default temperature [K|degC]
Temperature of stator windings [K|degC]
Heat flow rate of stator windings [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stray load losses [W]
Heat flow rate of friction losses [W]
Number of stator phases [:#(type=Integer)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant output value [K]
Number of collected heat flows [:#(type=Integer)]
Temperature of rotor (squirrel cage) [K|degC]
[W]
Constant output value [K]

Number of stator phases [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Main field inductance [H]
Number of phases [:#(type=Integer)]
Number of pole pairs [:#(type=Integer)]
Rotor displacement angle [rad|deg]
der(Rotor displacement angle) [rad/s]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
Magnetizing current space phasor with respect to the stator fixed frame [A]
Magnetizing current space phasor with respect to the stator fixed frame [A]
der(Magnetizing current space phasor with respect to the stator fixed frame) [A/s]
der(Magnetizing current space phasor with respect to the stator fixed frame) [A/s]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Stator main field inductance per phase [H]
Rotor stray inductance per phase (equivalent three phase winding) [H]
Rotor resistance per phase (equivalent three phase winding) at TRef [Ohm]
Reference temperature of rotor resistance [K|degC]
Temperature coefficient of rotor resistance at 20 degC [1/K]
Operational temperature of rotor resistance [K|degC]
Rotor stray inductance per phase translated to stator [H]
Rotor resistance per phase translated to stator at T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance at T_ref [1/K]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Actual resistance = Rr*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia [kg.m2]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K]
Effective number of stator turns
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity [1]
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Stator main field inductance per phase [H]
Rotor stray inductance per phase (equivalent three phase winding) [H]
Rotor resistance per phase (equivalent three phase winding) at TRef [Ohm]
Reference temperature of rotor resistance [K|degC]
Temperature coefficient of rotor resistance at 20 degC [1/K]
Number of phases [:#(type=Integer)]
Reference speed of the generator [rad/s]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state [rad/s]
Initial value of output [rad/s]
Connector of Real input signal [rad/s]
State of block [rad/s]
der(State of block) [rad/s2]
Cut torque in the flange [N.m]
Connector of Real output signal [rad/s]
Constant output value [rad/s]
Constant output value [rad/s]
Time Constant (T>0 required) [s]
Gain [1]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Moment of inertia of the fan blades [kg.m2]
Fixed rotation of left flange with respect to right flange [rad|deg]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
=true, if heat is enabled [:#(type=Boolean)]
Enable internal reference to electrical ground [:#(type=Boolean)]
Display the component name in the diagram layer [:#(type=Boolean)]
Component identifier on the control system bus [:#(type=Integer)]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
[:#(type=Boolean)]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Lumped pack, individual cells, or custom group [:#(type=Electrification.Batteries.Utilities.Types.VirtualPackSize)]
Number of cell groups (cores) in series [:#(type=Integer)]
Number of cell groups (cores) in parallel [:#(type=Integer)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Nominal Battery capacity [C]
Initialize SoC from OCV_start [:#(type=Boolean)]
Initial state of charge (SoC) [0..1] [1]
Initial open circuit voltage (OCV) [V]
SoC [:#(type=Electrification.Utilities.Types.FaultAction)]
Voltage [:#(type=Electrification.Utilities.Types.FaultAction)]
Current [:#(type=Electrification.Utilities.Types.FaultAction)]
Power [:#(type=Electrification.Utilities.Types.FaultAction)]
Discharge power [:#(type=Electrification.Utilities.Types.FaultAction)]
SoC [s]
Voltage [s]
Current [s]
Power [s]
Discharge power [s]
Tolerance on discharge current (power limit) [A]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Current into positive pack terminal [A]
Power into pack terminals (charging > 0) [W]
Power out of pack terminals (discharging > 0) [W]
Internal pack current (charging > 0) [A]
Internal pack current (discharging > 0) [A]
Pack open circuit voltage [V]
Internal pack power (charging > 0) [W]
Internal pack power (discharging > 0) [W]
Current at maximum discharge power (steady) [A]
Maximum (steady) discharge power [W]
Pack actual charge capacity [C]
Pack charge content [C]
Heat flow rate from the core battery (excluding pack heat) [W]
Core current [A]
Core open circuit voltage [V]
Core impedance voltage drop [V]
Core maximum discharge resistance (steady) [Ohm]
Core charge content [C]
Core capacity [C]
Core self discharge current [A]
Pack SoC [1]
Pack nominal SoC [1]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
true to enable port for heat losses and external temperature [:#(type=Boolean)]
Internal fixed temperature [K|degC]
Initialize state of charge (SoC) based on OCV_start [:#(type=Boolean)]
Initial SoC [0..1] [1]
Initial OCV [V]
Nominal battery capacity [C]
Action when violating SoC limits [:#(type=Electrification.Utilities.Types.FaultAction)]
Maximum SoC
Minimum SoC
Epsilon tolerance on SoC level
Start monitoring SoC level at this time [s]
Action when violating voltage limits [:#(type=Electrification.Utilities.Types.FaultAction)]
Maximum cell voltage [V]
Minimum cell voltage [V]
Epsilon tolerance on cell voltage [V]
Start monitoring voltage level at this time [s]
Action when violating the current limits [:#(type=Electrification.Utilities.Types.FaultAction)]
Maximum cell discharging current [A]
Maximum cell charging current [A]
Epsilon tolerance on cell current [A]
Start monitoring cell current at this time [s]
Action when violating the power limits [:#(type=Electrification.Utilities.Types.FaultAction)]
Maximum cell discharging power [W]
Maximum cell charging power [W]
Epsilon tolerance on cell power [W]
Start monitoring cell power at this time [s]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Current [A]
Impedance voltage drop [V]
Self discharge current [A]
Cell current [A]
Cell open circuit voltage [V]
Cell impedance voltage drop [V]
Cell self discharge current [A]
Cell instantaneous charge content [C]
Cell charge capacity aged [C]
Maximum cell discharge resistance (steady) [Ohm]
Maximum cell charge resistance (steady) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Potential at the pin [V]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
True to initialize based on state of charge or charge content [:#(type=Boolean)]
True to initialize charge as SoC (% of charge capacity) [:#(type=Boolean)]
Initialize charge with aged capacity instead of nominal capacity [:#(type=Boolean)]
Initial SoC [0..1] [1]
Initial charge content [C]
True if heat port is enabled, otherwize the internal temperature is assumed to be contant TO [:#(type=Boolean)]
Internal fixed temperature [K|degC]
Nominal capacity of a single cell [C|Ah]
Scaling factor for cell capacity [1]
Combined nominal capacity (all cells in the virtual group) [C]
Action when violating SoC limits [:#(type=Electrification.Utilities.Types.FaultAction)]
Maximum SoC
Minimum SoC
Epsilon tolerance on SoC level
Start checking SoC level at this time [s]
Un-aged, instantaneous capacity of a single cell [C]
Un-aged, instantaneous combined capacity of all cells (sum of all cells) [C]
Heat flow rate (positive if flowing from outside into the component) [W]
Instantaneous, combined charge content (stored by all cells) [C]
der(Instantaneous, combined charge content (stored by all cells)) [A]
Charge/discharge rate, no including aging
discharge rate
factor for capacitance in R-C circuit [1]
factor for resistance in R-C circuit [1]
factor for series resistance [1]
capacity loss factor [1]
factor for self discharge resistance [1]
Value of Real output
Monitor limits for variable x [1]
Upper limit of x
Lower limit of x
Action when violating the condition [:#(type=Electrification.Utilities.Types.FaultAction)]
Use an explicit checking time (else use simulation start time) [:#(type=Boolean)]
Initial time to start checking limits [s]
Checking time [s]
Wait to start checking until the variable is within limits (else allow checking after t0)) [:#(type=Boolean)]
Status flag of upper limit checking [:#(type=Boolean)]
Status flag of lower limit checking [:#(type=Boolean)]
[:#(type=AssertionLevel)]
Heat flow rate (positive if flowing from outside into the component) [W]
Potential at the pin [V]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
True if heat port is enabled, otherwize the internal temperature is assumed to be contant TO [:#(type=Boolean)]
Internal fixed temperature [K|degC]
True to initialize charge (SoC) based on voltage [:#(type=Boolean)]
Initial voltage (OCV) [V]
Action when violating voltage limits [:#(type=Electrification.Utilities.Types.FaultAction)]
Maximum cell voltage [V]
Minimum cell voltage [V]
Epsilon tolerance on voltage level [V]
Start checking voltage level at this time [s]
Voltage factor (scale voltage value) [1]
OCV of a single cell [V]
Temperature [degC]
Heat flow rate (positive if flowing from outside into the component) [W]
discharge rate
Monitor limits for variable x [V]
Upper limit of x [V]
Lower limit of x [V]
Action when violating the condition [:#(type=Electrification.Utilities.Types.FaultAction)]
Use an explicit checking time (else use simulation start time) [:#(type=Boolean)]
Initial time to start checking limits [s]
Checking time [s]
Wait to start checking until the variable is within limits (else allow checking after t0)) [:#(type=Boolean)]
Status flag of upper limit checking [:#(type=Boolean)]
Status flag of lower limit checking [:#(type=Boolean)]
[:#(type=AssertionLevel)]
Heat flow rate (positive if flowing from outside into the component) [W]
Initial cell voltage [V]
Absolute temperature in degree Celsius as output signal [degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Maximum voltage (100 % SoC) [V]
Minimum voltage (0 % SoC) [V]
[V]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
True if heat port is enabled, otherwize the internal temperature is assumed to be contant TO [:#(type=Boolean)]
Internal fixed temperature if not enable_heatport [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
discharge rate
current through the battery [A]
power into the battery impedance [W]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort [W]
[Ohm]
Series resistance (single cell) at temperature T_ref [Ohm]
Resistance factor (scale series resistance)
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R * (1 + alpha*(T_heatPort - T_ref)) * k_R * ns / np [1/K]
Gain value multiplied with input signal [1]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
True if heat port is enabled, otherwize the internal temperature is assumed to be contant TO [:#(type=Boolean)]
Internal fixed temperature [K|degC]
Current flowing into pin p [A]
discharge rate
Current flowing from pin p to pin n [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Fixed heat flow rate at port [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Potential at the pin [V]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
True if heat port is enabled, otherwise the internal temperature is assumed to be contant TO [:#(type=Boolean)]
Internal fixed temperature [K|degC]
True if capacity aging should be used [:#(type=Boolean)]
True if series resistance aging should be used [:#(type=Boolean)]
True if dynamic resistance aging should be used [:#(type=Boolean)]
True if dynamic capacitance aging should be used [:#(type=Boolean)]
True if self discharge resistance aging should be used [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
discharge rate
Heat flow rate (positive if flowing from outside into the component) [W]

Constant output value [1]
current [A]
discharge rate
Constant output value [1]
Value of Real output [A]
Heat flow rate (positive if flowing from outside into the component) [W]
Monitor limits for variable x [V]
Upper limit of x [V]
Lower limit of x [V]
Action when violating the condition [:#(type=Electrification.Utilities.Types.FaultAction)]
Use an explicit checking time (else use simulation start time) [:#(type=Boolean)]
Initial time to start checking limits [s]
Checking time [s]
Wait to start checking until the variable is within limits (else allow checking after t0)) [:#(type=Boolean)]
Status flag of upper limit checking [:#(type=Boolean)]
Status flag of lower limit checking [:#(type=Boolean)]
[:#(type=AssertionLevel)]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
True if heat port is enabled, otherwize the internal temperature is assumed to be contant TO [:#(type=Boolean)]
Internal fixed temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
discharge rate
Core current [A]
Cell voltage [V]
Cell open circuit voltage [V]
Cell current [A]
Cell maximum discharge resistance (steady) [Ohm]
Value of Real output [A]
Value of Real output [A]
Heat flow rate (positive if flowing from outside into the component) [W]
Monitor limits for variable x [A]
Upper limit of x [A]
Lower limit of x [A]
Action when violating the condition [:#(type=Electrification.Utilities.Types.FaultAction)]
Use an explicit checking time (else use simulation start time) [:#(type=Boolean)]
Initial time to start checking limits [s]
Checking time [s]
Wait to start checking until the variable is within limits (else allow checking after t0)) [:#(type=Boolean)]
Status flag of upper limit checking [:#(type=Boolean)]
Status flag of lower limit checking [:#(type=Boolean)]
[:#(type=AssertionLevel)]
Monitor limits for variable x [W]
Upper limit of x [W]
Lower limit of x [W]
Action when violating the condition [:#(type=Electrification.Utilities.Types.FaultAction)]
Use an explicit checking time (else use simulation start time) [:#(type=Boolean)]
Initial time to start checking limits [s]
Checking time [s]
Wait to start checking until the variable is within limits (else allow checking after t0)) [:#(type=Boolean)]
Status flag of upper limit checking [:#(type=Boolean)]
Status flag of lower limit checking [:#(type=Boolean)]
[:#(type=AssertionLevel)]
Enable internal reference to ground potential [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Potential at the pin [V]
Current flowing into the pin [A]
Link current [A]
Core current [A]
Value of Real output [A]
Value of Real output [A]
Connector of Real input signal 2 [A]
Connector of Real output signal [W]
Connector of Real input signal 1 [A]
Connector of Real output signal [W]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current into positive link pin [A]
Current into positive core pin [A]
Electric power into component [W]
Electric power into core component [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
true to set a fixed temperature [:#(type=Boolean)]
true to retain the temperature as a state variable even when it is set to fixed [:#(type=Boolean)]
Initial or fixed temperature [K|degC]
enable external thermal connector [:#(type=Boolean)]
Enforce T0 as the start value if not fixed_temperature or if fixed_temperature and state_when_fixed [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
enable cell nodes in external thermal connector [:#(type=Boolean)]
Inlet (portA) dimensions [:#(type=Integer)]
Inlet (portA) dimensions [:#(type=Integer)]
Outlet (portB) dimensions [:#(type=Integer)]
Outlet (portB) dimensions [:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal discretization of individual cell [:#(type=Integer)]
Thermal conductance from ambient to pack [W/K]
Specify the heat capacity per cell (else specify the total heat capacity) [:#(type=Boolean)]
Total heat capacity of thermal mass (= cp*m) if not per_cell_capacity [J/K]
Per cell heat capacity of thermal mass (= cp*m) [J/K]
Heat capacity of thermal mass (= cp*m) if not per_cell_capacity [J/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant thermal conductance of material [W/K]
Heat capacity of element (= cp*m) [J/K]
true to fix temperature to T0 [:#(type=Boolean)]
true to retain the temperature as a state variable even when it is set to fixed [:#(type=Boolean)]
Fixed or initial temperature [K|degC]
Enforce T0 as the start value if not fixed_temperature or if fixed_temperature and state_when_fixed [:#(type=Boolean)]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Unique identifier of this controller [:#(type=Integer)]
Number of cells connected in series [:#(type=Integer)]
Number of cells connected in parallel [:#(type=Integer)]
Lumped grouping of cells in series (size of the array in the model only) [:#(type=Integer)]
Lumped grouping of cells in parallel (size of the array in the model only) [:#(type=Integer)]
Number of cells per lumped group in series [:#(type=Integer)]
Number of cells per lumped group in parallel [:#(type=Integer)]
Enable core domain connector [:#(type=Boolean)]
Enable electrical domain connector [:#(type=Boolean)]
Enable thermal domain connector [:#(type=Boolean)]
Monitor limits for variable x [A]
Upper limit of x [A]
Lower limit of x
Action when violating the condition [:#(type=Electrification.Utilities.Types.FaultAction)]
Use an explicit checking time (else use simulation start time) [:#(type=Boolean)]
Initial time to start checking limits [s]
Checking time [s]
Wait to start checking until the variable is within limits (else allow checking after t0)) [:#(type=Boolean)]
Status flag of upper limit checking [:#(type=Boolean)]
Status flag of lower limit checking [:#(type=Boolean)]
[:#(type=AssertionLevel)]
Potential at the pin [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Inductance [H]
Potential at the pin [V]
Line inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Line resistance at temperature T_ref [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Inductance [H]
Potential at the pin [V]
Line inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Line resistance at temperature T_ref [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
=true, if heatPort is enabled [:#(type=Boolean)]
Opened switch conductance [S]
Closed switch resistance [Ohm]
Constant output value
Reference overcurrent value
Reference overcurrent value
Potential at the pin [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
=true, if heatPort is enabled [:#(type=Boolean)]
Opened switch conductance [S]
Closed switch resistance [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Constant output value
Reference overcurrent value
Potential at the pin [V]
Reference overcurrent value
Voltage drop of the two pins (= p.v - n.v) [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
=true, if heatPort is enabled [:#(type=Boolean)]
Opened switch conductance [S]
Closed switch resistance [Ohm]
Constant output value
Reference overcurrent value
Reference overcurrent value
Voltage drop of the two pins (= p.v - n.v) [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
=true, if heatPort is enabled [:#(type=Boolean)]
Opened switch conductance [S]
Closed switch resistance [Ohm]
Constant output value
Reference overcurrent value
Reference overcurrent value
Value of constant voltage [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Current flowing into the pin [A]
Impedance [Ohm]
Impedance [H]
Fuel cell voltage [V]
Value of constant voltage [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Current flowing into the pin [A]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Firing signals of positive potential transistors [:#(type=Boolean)]
Firing signals of positive potential transistors [:#(type=Boolean)]
Firing signals of positive potential transistors [:#(type=Boolean)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Firing signals of negative potential transistors [:#(type=Boolean)]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Diode closed resistance [Ohm]
Diode opened conductance [S]
Diode threshold voltage [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
DC voltage [V]
DC power [W]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
AC power [W]
AC power [W]
AC power [W]
AC total power [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Closed thyristor resistance [Ohm]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Opened thyristor conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Diode forward threshold voltage [V]
DC voltage side 1 [V]
DC power side 1 [W]
Potential at the pin [V]
DC voltages side 2 [V]
DC power side 2 [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Connector of Boolean output signal [:#(type=Boolean)]
Firing signal of positive potential transistor [:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz]
Start time [s]
Firing PWM signal [:#(type=Boolean)]
Constant output value
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal
Connector of first Real input signal
Connector of second Real input signal
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]

Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Number of phases [:#(type=Integer)]
[rev/min]
Number of phases [:#(type=Integer)]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Operational temperature of stator resistance [K|degC]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K|1/K]
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Rotor's moment of inertia [kg.m2]
Enable / disable (=fixed stator) support [:#(type=Boolean)]
Stator's moment of inertia [kg.m2]
Enable / disable (=fixed temperatures) thermal port [:#(type=Boolean)]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Mechanical angle of rotor against stator [rad|deg]
Electromagnetic torque [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Cut torque in the flange [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Electrical power (stator) [W]
Mechanical power [W]
Stator inertia power [W]
Rotor inertia power [W]
Total loss power [W]
Stator copper losses [W]
Stator core losses [W]
Rotor core losses [W]
Stray load losses [W]
Friction losses [W]
Rotor copper losses [W]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator zero-sequence current [A]
der(Stator zero-sequence current) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / stator fixed frame [A]
Rotor space phasor current / stator fixed frame [A]
der(Rotor space phasor current / stator fixed frame) [A/s]
der(Rotor space phasor current / stator fixed frame) [A/s]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Inductance of both axes [H]
Inductance of both axes [H]
[V]
[V]
[A]
[A]
[A/s]
[A/s]
1=real, 2=imaginary part [V]
1=real, 2=imaginary part [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Inductance [H]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Number of phases [:#(type=Integer)]
Effective number of stator turns / effective number of rotor turns (if used as rotor core)
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
1=real, 2=imaginary part [A]
1=real, 2=imaginary part [A]
Variable core loss conductance [S]
Limited angular velocity [rad/s]
Number of phases [:#(type=Integer)]
Turns ratio [1]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
[1]
[1]
[1]
[1]
[1]
[1]






Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
[A]
Number of stator phases [:#(type=Integer)]
If true, temperature inputs are used; else, temperatures are constant [:#(type=Boolean)]
Default temperature [K|degC]
Temperature of stator windings [K|degC]
Heat flow rate of stator windings [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stray load losses [W]
Heat flow rate of friction losses [W]
Number of stator phases [:#(type=Integer)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant output value [K]
Number of collected heat flows [:#(type=Integer)]
Temperature of rotor (squirrel cage) [K|degC]
[W]
Constant output value [K]

Number of stator phases [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Main field inductance [H]
Number of phases [:#(type=Integer)]
Number of pole pairs [:#(type=Integer)]
Rotor displacement angle [rad|deg]
der(Rotor displacement angle) [rad/s]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
Magnetizing current space phasor with respect to the stator fixed frame [A]
Magnetizing current space phasor with respect to the stator fixed frame [A]
der(Magnetizing current space phasor with respect to the stator fixed frame) [A/s]
der(Magnetizing current space phasor with respect to the stator fixed frame) [A/s]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Stator main field inductance per phase [H]
Rotor stray inductance per phase (equivalent three phase winding) [H]
Rotor resistance per phase (equivalent three phase winding) at TRef [Ohm]
Reference temperature of rotor resistance [K|degC]
Temperature coefficient of rotor resistance at 20 degC [1/K]
Operational temperature of rotor resistance [K|degC]
Rotor stray inductance per phase translated to stator [H]
Rotor resistance per phase translated to stator at T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance at T_ref [1/K]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Actual resistance = Rr*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia [kg.m2]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K]
Effective number of stator turns
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity [1]
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Stator main field inductance per phase [H]
Rotor stray inductance per phase (equivalent three phase winding) [H]
Rotor resistance per phase (equivalent three phase winding) at TRef [Ohm]
Reference temperature of rotor resistance [K|degC]
Temperature coefficient of rotor resistance at 20 degC [1/K]
Number of phases [:#(type=Integer)]
Reference speed of the generator [rad/s]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz|kHz]
Start time [s]
Upper limits of input signals [rad/s]
Lower limits of input signals [rad/s]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [rad/s]
Connector of first Real input signal
Connector of second Real input signal [rad/s]
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]
[rad/s]
Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state [rad/s]
Initial value of output [rad/s]
Connector of Real input signal [rad/s]
State of block [rad/s]
der(State of block) [rad/s2]
Cut torque in the flange [N.m]
Connector of Real output signal [rad/s]
Constant output value [rad/s]
Constant output value [rad/s]
Time Constant (T>0 required) [s]
Gain [1]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Moment of inertia of the fan blades [kg.m2]
Fixed rotation of left flange with respect to right flange [rad|deg]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]

Length of wire [m]
Reference electric field [V/m]
Intrinstic value of the superconductor
corner current [A]
Electric field [V/m]
Resistance at temperature T_ref [Ohm]

Length of wire [m]
Reference electric field [V/m]
Intrinstic value of the superconductor
corner current [A]
Electric field [V/m]
Resistance at temperature T_ref [Ohm]
Value of Real output [A]
Value of Real output [A]
Value of Real output [A]
Connector of Real output signal [W]
Value of Real output [A]
Connector of Real output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Value of Real output
Value of Real output [A]
Value of Real output [A]
Value of Real output [A]
Value of Real output [A]
Value of Real output [A]
Connector of Real output signal [W]
Value of Real output [A]
Connector of Real output signal [W]
Value of Real output [A]
Connector of Real output signal [W]
Value of Real output [A]
Connector of Real output signal [W]
Value of Real output
Value of Real output

