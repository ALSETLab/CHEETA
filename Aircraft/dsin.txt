#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       1                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(696,79)
boeing747_SG.Data.Poles
boeing747_SG.Data.SNominal
boeing747_SG.Data.VsNominal
boeing747_SG.Data.IsNominal
boeing747_SG.Data.ZReference
boeing747_SG.Data.fsNominal
boeing747_SG.Data.omega
boeing747_SG.Data.IeOpenCircuit
boeing747_SG.Data.effectiveStatorTurns
boeing747_SG.Data.turnsRatio
boeing747_SG.Data.x0
boeing747_SG.Data.xd
boeing747_SG.Data.xq
boeing747_SG.Data.xdTransient
boeing747_SG.Data.xdSubtransient
boeing747_SG.Data.xqSubtransient
boeing747_SG.Data.Ta
boeing747_SG.Data.Td0Transient
boeing747_SG.Data.Td0Subtransient
boeing747_SG.Data.Tq0Subtransient
boeing747_SG.Data.TsSpecification
boeing747_SG.Data.TsRef
boeing747_SG.Data.alpha20s
boeing747_SG.Data.TrSpecification
boeing747_SG.Data.TrRef
boeing747_SG.Data.alpha20r
boeing747_SG.Data.TeSpecification
boeing747_SG.Data.TeRef
boeing747_SG.Data.alpha20e
boeing747_SG.Data.xmd
boeing747_SG.Data.xmq
boeing747_SG.Data.xe
boeing747_SG.Data.xrd
boeing747_SG.Data.xrq
boeing747_SG.Data.rs
boeing747_SG.Data.rrd
boeing747_SG.Data.rrq
boeing747_SG.Data.re
boeing747_SG.Data.Rs
boeing747_SG.Data.Lssigma
boeing747_SG.Data.Lmd
boeing747_SG.Data.Lmq
boeing747_SG.Data.Lrsigmad
boeing747_SG.Data.Lrsigmaq
boeing747_SG.Data.Rrd
boeing747_SG.Data.Rrq
boeing747_SG.Data.Re
boeing747_SG.Data.sigmae
boeing747_SG.smee.m
boeing747_SG.smee.p
boeing747_SG.smee.fsNominal
boeing747_SG.smee.TsOperational
boeing747_SG.smee.Rs
boeing747_SG.smee.TsRef
boeing747_SG.smee.alpha20s
boeing747_SG.smee.Lszero
boeing747_SG.smee.Lssigma
boeing747_SG.smee.Jr
boeing747_SG.smee.useSupport
boeing747_SG.smee.Js
boeing747_SG.smee.useThermalPort
boeing747_SG.smee.frictionParameters.PRef
boeing747_SG.smee.frictionParameters.wRef
boeing747_SG.smee.frictionParameters.power_w
boeing747_SG.smee.frictionParameters.tauRef
boeing747_SG.smee.frictionParameters.linear
boeing747_SG.smee.frictionParameters.wLinear
boeing747_SG.smee.frictionParameters.tauLinear
boeing747_SG.smee.phiMechanical
boeing747_SG.smee.tauElectrical
boeing747_SG.smee.tauShaft
boeing747_SG.smee.inertiaRotor.J
boeing747_SG.smee.inertiaRotor.stateSelect
boeing747_SG.smee.inertiaStator.flange_a.tau
boeing747_SG.smee.inertiaStator.flange_b.tau
boeing747_SG.smee.inertiaStator.J
boeing747_SG.smee.inertiaStator.stateSelect
boeing747_SG.smee.inertiaStator.der(phi)
boeing747_SG.smee.inertiaStator.w
boeing747_SG.smee.inertiaStator.der(w)
boeing747_SG.smee.inertiaStator.a
boeing747_SG.smee.fixed.phi0
boeing747_SG.smee.friction.flange.tau
boeing747_SG.smee.friction.support.tau
boeing747_SG.smee.friction.phi
boeing747_SG.smee.friction.tau
boeing747_SG.smee.friction.frictionParameters.PRef
boeing747_SG.smee.friction.frictionParameters.wRef
boeing747_SG.smee.friction.frictionParameters.power_w
boeing747_SG.smee.friction.frictionParameters.tauRef
boeing747_SG.smee.friction.frictionParameters.linear
boeing747_SG.smee.friction.frictionParameters.wLinear
boeing747_SG.smee.friction.frictionParameters.tauLinear
boeing747_SG.smee.friction.useHeatPort
boeing747_SG.smee.friction.heatPort.T
boeing747_SG.smee.friction.heatPort.Q_flow
boeing747_SG.smee.friction.lossPower
boeing747_SG.smee.internalSupport.tau
boeing747_SG.smee.statorCoreParameters.m
boeing747_SG.smee.statorCoreParameters.PRef
boeing747_SG.smee.statorCoreParameters.VRef
boeing747_SG.smee.statorCoreParameters.wRef
boeing747_SG.smee.statorCoreParameters.ratioHysteresis
boeing747_SG.smee.statorCoreParameters.GcRef
boeing747_SG.smee.statorCoreParameters.wMin
boeing747_SG.smee.strayLoadParameters.PRef
boeing747_SG.smee.strayLoadParameters.IRef
boeing747_SG.smee.strayLoadParameters.wRef
boeing747_SG.smee.strayLoadParameters.power_w
boeing747_SG.smee.strayLoadParameters.tauRef
boeing747_SG.smee.powerBalance.powerStator
boeing747_SG.smee.powerBalance.powerMechanical
boeing747_SG.smee.powerBalance.powerInertiaStator
boeing747_SG.smee.powerBalance.powerInertiaRotor
boeing747_SG.smee.powerBalance.lossPowerTotal
boeing747_SG.smee.powerBalance.lossPowerStatorWinding
boeing747_SG.smee.powerBalance.lossPowerStatorCore
boeing747_SG.smee.powerBalance.lossPowerRotorCore
boeing747_SG.smee.powerBalance.lossPowerStrayLoad
boeing747_SG.smee.powerBalance.lossPowerFriction
boeing747_SG.smee.powerBalance.lossPowerRotorWinding
boeing747_SG.smee.powerBalance.powerExcitation
boeing747_SG.smee.powerBalance.lossPowerExcitation
boeing747_SG.smee.powerBalance.lossPowerBrush
boeing747_SG.smee.vs[1]
boeing747_SG.smee.vs[2]
boeing747_SG.smee.vs[3]
boeing747_SG.smee.i_0_s
boeing747_SG.smee.der(i_0_s)
boeing747_SG.smee.idq_sr[1]
boeing747_SG.smee.der(idq_sr[1])
boeing747_SG.smee.idq_sr[2]
boeing747_SG.smee.der(idq_sr[2])
boeing747_SG.smee.idq_rs[1]
boeing747_SG.smee.idq_rs[2]
boeing747_SG.smee.idq_rr[1]
boeing747_SG.smee.idq_rr[2]
boeing747_SG.smee.der(idq_rr[2])
boeing747_SG.smee.der(idq_rr[1])
boeing747_SG.smee.plug_sp.m
boeing747_SG.smee.plug_sn.m
boeing747_SG.smee.plug_sn.pin[1].v
boeing747_SG.smee.rs.m
boeing747_SG.smee.rs.v[1]
boeing747_SG.smee.rs.v[2]
boeing747_SG.smee.rs.v[3]
boeing747_SG.smee.rs.plug_p.m
boeing747_SG.smee.rs.plug_n.m
boeing747_SG.smee.rs.plug_n.pin[1].v
boeing747_SG.smee.rs.plug_n.pin[2].v
boeing747_SG.smee.rs.plug_n.pin[3].v
boeing747_SG.smee.rs.R[1]
boeing747_SG.smee.rs.R[2]
boeing747_SG.smee.rs.R[3]
boeing747_SG.smee.rs.T_ref[1]
boeing747_SG.smee.rs.T_ref[2]
boeing747_SG.smee.rs.T_ref[3]
boeing747_SG.smee.rs.alpha[1]
boeing747_SG.smee.rs.alpha[2]
boeing747_SG.smee.rs.alpha[3]
boeing747_SG.smee.rs.mh
boeing747_SG.smee.rs.useHeatPort
boeing747_SG.smee.rs.T[1]
boeing747_SG.smee.rs.T[2]
boeing747_SG.smee.rs.T[3]
boeing747_SG.smee.rs.resistor[1].R
boeing747_SG.smee.rs.resistor[1].T_ref
boeing747_SG.smee.rs.resistor[1].alpha
boeing747_SG.smee.rs.resistor[1].v
boeing747_SG.smee.rs.resistor[1].useHeatPort
boeing747_SG.smee.rs.resistor[1].T
boeing747_SG.smee.rs.resistor[1].LossPower
boeing747_SG.smee.rs.resistor[1].R_actual
boeing747_SG.smee.rs.resistor[2].R
boeing747_SG.smee.rs.resistor[2].T_ref
boeing747_SG.smee.rs.resistor[2].alpha
boeing747_SG.smee.rs.resistor[2].v
boeing747_SG.smee.rs.resistor[2].useHeatPort
boeing747_SG.smee.rs.resistor[2].T
boeing747_SG.smee.rs.resistor[2].LossPower
boeing747_SG.smee.rs.resistor[2].R_actual
boeing747_SG.smee.rs.resistor[3].R
boeing747_SG.smee.rs.resistor[3].T_ref
boeing747_SG.smee.rs.resistor[3].alpha
boeing747_SG.smee.rs.resistor[3].v
boeing747_SG.smee.rs.resistor[3].useHeatPort
boeing747_SG.smee.rs.resistor[3].T
boeing747_SG.smee.rs.resistor[3].LossPower
boeing747_SG.smee.rs.resistor[3].R_actual
boeing747_SG.smee.lssigma.L[1]
boeing747_SG.smee.lssigma.L[2]
boeing747_SG.smee.lssigma.v_[1]
boeing747_SG.smee.lssigma.v_[2]
boeing747_SG.smee.lssigma.i_[1]
boeing747_SG.smee.lssigma.i_[2]
boeing747_SG.smee.lssigma.der(i_[1])
boeing747_SG.smee.lssigma.der(i_[2])
boeing747_SG.smee.lssigma.spacePhasor_a.v_[1]
boeing747_SG.smee.lssigma.spacePhasor_a.v_[2]
boeing747_SG.smee.lszero.v
boeing747_SG.smee.lszero.i
boeing747_SG.smee.lszero.der(i)
boeing747_SG.smee.lszero.p.v
boeing747_SG.smee.lszero.p.i
boeing747_SG.smee.lszero.n.v
boeing747_SG.smee.lszero.n.i
boeing747_SG.smee.lszero.L
boeing747_SG.smee.statorCore.coreParameters.m
boeing747_SG.smee.statorCore.coreParameters.PRef
boeing747_SG.smee.statorCore.coreParameters.VRef
boeing747_SG.smee.statorCore.coreParameters.wRef
boeing747_SG.smee.statorCore.coreParameters.ratioHysteresis
boeing747_SG.smee.statorCore.coreParameters.GcRef
boeing747_SG.smee.statorCore.coreParameters.wMin
boeing747_SG.smee.statorCore.m
boeing747_SG.smee.statorCore.turnsRatio
boeing747_SG.smee.statorCore.useHeatPort
boeing747_SG.smee.statorCore.heatPort.T
boeing747_SG.smee.statorCore.heatPort.Q_flow
boeing747_SG.smee.statorCore.lossPower
boeing747_SG.smee.statorCore.spacePhasor.i_[1]
boeing747_SG.smee.statorCore.spacePhasor.i_[2]
boeing747_SG.smee.statorCore.Gc
boeing747_SG.smee.statorCore.wLimit
boeing747_SG.smee.spacePhasorS.m
boeing747_SG.smee.spacePhasorS.turnsRatio
boeing747_SG.smee.spacePhasorS.v[1]
boeing747_SG.smee.spacePhasorS.v[2]
boeing747_SG.smee.spacePhasorS.v[3]
boeing747_SG.smee.spacePhasorS.TransformationMatrix[1, 1]
boeing747_SG.smee.spacePhasorS.TransformationMatrix[1, 2]
boeing747_SG.smee.spacePhasorS.TransformationMatrix[1, 3]
boeing747_SG.smee.spacePhasorS.TransformationMatrix[2, 1]
boeing747_SG.smee.spacePhasorS.TransformationMatrix[2, 2]
boeing747_SG.smee.spacePhasorS.TransformationMatrix[2, 3]
boeing747_SG.smee.spacePhasorS.InverseTransformation[1, 1]
boeing747_SG.smee.spacePhasorS.InverseTransformation[1, 2]
boeing747_SG.smee.spacePhasorS.InverseTransformation[2, 1]
boeing747_SG.smee.spacePhasorS.InverseTransformation[2, 2]
boeing747_SG.smee.spacePhasorS.InverseTransformation[3, 1]
boeing747_SG.smee.spacePhasorS.InverseTransformation[3, 2]
boeing747_SG.smee.spacePhasorS.plug_p.m
boeing747_SG.smee.spacePhasorS.plug_n.m
boeing747_SG.smee.spacePhasorS.zero.v
boeing747_SG.smee.spacePhasorS.zero.i
boeing747_SG.smee.spacePhasorS.ground.v
boeing747_SG.smee.spacePhasorS.ground.i
boeing747_SG.smee.strayLoad.m
boeing747_SG.smee.strayLoad.v[1]
boeing747_SG.smee.strayLoad.v[2]
boeing747_SG.smee.strayLoad.v[3]
boeing747_SG.smee.strayLoad.plug_p.m
boeing747_SG.smee.strayLoad.plug_n.m
boeing747_SG.smee.strayLoad.flange.tau
boeing747_SG.smee.strayLoad.support.tau
boeing747_SG.smee.strayLoad.phi
boeing747_SG.smee.strayLoad.tau
boeing747_SG.smee.strayLoad.strayLoadParameters.PRef
boeing747_SG.smee.strayLoad.strayLoadParameters.IRef
boeing747_SG.smee.strayLoad.strayLoadParameters.wRef
boeing747_SG.smee.strayLoad.strayLoadParameters.power_w
boeing747_SG.smee.strayLoad.strayLoadParameters.tauRef
boeing747_SG.smee.strayLoad.useHeatPort
boeing747_SG.smee.strayLoad.heatPort.T
boeing747_SG.smee.strayLoad.heatPort.Q_flow
boeing747_SG.smee.strayLoad.lossPower
boeing747_SG.smee.strayLoad.iRMS
boeing747_SG.smee.thermalAmbient.useDamperCage
boeing747_SG.smee.thermalAmbient.m
boeing747_SG.smee.thermalAmbient.useTemperatureInputs
boeing747_SG.smee.thermalAmbient.TDefault
boeing747_SG.smee.thermalAmbient.Ts
boeing747_SG.smee.thermalAmbient.Q_flowStatorWinding
boeing747_SG.smee.thermalAmbient.Q_flowStatorCore
boeing747_SG.smee.thermalAmbient.Q_flowRotorCore
boeing747_SG.smee.thermalAmbient.Q_flowStrayLoad
boeing747_SG.smee.thermalAmbient.Q_flowFriction
boeing747_SG.smee.thermalAmbient.thermalPort.m
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStatorCore.T
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortRotorCore.T
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStrayLoad.T
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortFriction.T
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortFriction.Q_flow
boeing747_SG.smee.thermalAmbient.thermalPort.useDamperCage
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortBrush.T
boeing747_SG.smee.thermalAmbient.thermalPort.heatPortBrush.Q_flow
boeing747_SG.smee.thermalAmbient.temperatureStatorCore.T
boeing747_SG.smee.thermalAmbient.temperatureStatorCore.port.T
boeing747_SG.smee.thermalAmbient.temperatureStatorCore.port.Q_flow
boeing747_SG.smee.thermalAmbient.temperatureRotorCore.T
boeing747_SG.smee.thermalAmbient.temperatureRotorCore.port.T
boeing747_SG.smee.thermalAmbient.temperatureRotorCore.port.Q_flow
boeing747_SG.smee.thermalAmbient.temperatureStrayLoad.T
boeing747_SG.smee.thermalAmbient.temperatureStrayLoad.port.T
boeing747_SG.smee.thermalAmbient.temperatureStrayLoad.port.Q_flow
boeing747_SG.smee.thermalAmbient.temperatureFriction.T
boeing747_SG.smee.thermalAmbient.temperatureFriction.port.T
boeing747_SG.smee.thermalAmbient.temperatureFriction.port.Q_flow
boeing747_SG.smee.thermalAmbient.constTs.k
boeing747_SG.smee.thermalAmbient.thermalCollectorStator.m
boeing747_SG.smee.thermalAmbient.Tr
boeing747_SG.smee.thermalAmbient.Te
boeing747_SG.smee.thermalAmbient.Q_flowTotal
boeing747_SG.smee.thermalAmbient.constTe.k
boeing747_SG.smee.thermalAmbient.temperatureBrush.T
boeing747_SG.smee.thermalAmbient.temperatureBrush.port.T
boeing747_SG.smee.thermalAmbient.temperatureBrush.port.Q_flow
boeing747_SG.smee.pi
boeing747_SG.smee.internalThermalPort.m
boeing747_SG.smee.internalThermalPort.heatPortStatorWinding[1].Q_flow
boeing747_SG.smee.internalThermalPort.heatPortStatorWinding[2].Q_flow
boeing747_SG.smee.internalThermalPort.heatPortStatorWinding[3].Q_flow
boeing747_SG.smee.internalThermalPort.heatPortStatorCore.T
boeing747_SG.smee.internalThermalPort.heatPortStatorCore.Q_flow
boeing747_SG.smee.internalThermalPort.heatPortRotorCore.T
boeing747_SG.smee.internalThermalPort.heatPortRotorCore.Q_flow
boeing747_SG.smee.internalThermalPort.heatPortStrayLoad.T
boeing747_SG.smee.internalThermalPort.heatPortStrayLoad.Q_flow
boeing747_SG.smee.internalThermalPort.heatPortFriction.T
boeing747_SG.smee.internalThermalPort.heatPortFriction.Q_flow
boeing747_SG.smee.internalThermalPort.useDamperCage
boeing747_SG.smee.internalThermalPort.heatPortExcitation.Q_flow
boeing747_SG.smee.internalThermalPort.heatPortBrush.T
boeing747_SG.smee.internalThermalPort.heatPortBrush.Q_flow
boeing747_SG.smee.airGapR.Lmd
boeing747_SG.smee.airGapR.Lmq
boeing747_SG.smee.airGapR.m
boeing747_SG.smee.airGapR.p
boeing747_SG.smee.airGapR.gamma
boeing747_SG.smee.airGapR.der(gamma)
boeing747_SG.smee.airGapR.psi_ms[1]
boeing747_SG.smee.airGapR.psi_ms[2]
boeing747_SG.smee.airGapR.der(psi_ms[1])
boeing747_SG.smee.airGapR.der(psi_ms[2])
boeing747_SG.smee.airGapR.psi_mr[1]
boeing747_SG.smee.airGapR.psi_mr[2]
boeing747_SG.smee.airGapR.der(psi_mr[1])
boeing747_SG.smee.airGapR.der(psi_mr[2])
boeing747_SG.smee.airGapR.RotationMatrix[1, 1]
boeing747_SG.smee.airGapR.RotationMatrix[1, 2]
boeing747_SG.smee.airGapR.RotationMatrix[2, 1]
boeing747_SG.smee.airGapR.RotationMatrix[2, 2]
boeing747_SG.smee.airGapR.der(RotationMatrix[1, 1])
boeing747_SG.smee.airGapR.der(RotationMatrix[1, 2])
boeing747_SG.smee.airGapR.der(RotationMatrix[2, 1])
boeing747_SG.smee.airGapR.der(RotationMatrix[2, 2])
boeing747_SG.smee.airGapR.i_mr[1]
boeing747_SG.smee.airGapR.i_mr[2]
boeing747_SG.smee.airGapR.der(i_mr[1])
boeing747_SG.smee.airGapR.der(i_mr[2])
boeing747_SG.smee.airGapR.L[1, 1]
boeing747_SG.smee.airGapR.L[1, 2]
boeing747_SG.smee.airGapR.L[2, 1]
boeing747_SG.smee.airGapR.L[2, 2]
boeing747_SG.smee.TrOperational
boeing747_SG.smee.Lmd
boeing747_SG.smee.Lmq
boeing747_SG.smee.useDamperCage
boeing747_SG.smee.Lrsigmad
boeing747_SG.smee.Lrsigmaq
boeing747_SG.smee.Rrd
boeing747_SG.smee.Rrq
boeing747_SG.smee.TrRef
boeing747_SG.smee.alpha20r
boeing747_SG.smee.VsNominal
boeing747_SG.smee.IeOpenCircuit
boeing747_SG.smee.Re
boeing747_SG.smee.TeRef
boeing747_SG.smee.alpha20e
boeing747_SG.smee.sigmae
boeing747_SG.smee.TeOperational
boeing747_SG.smee.brushParameters.V
boeing747_SG.smee.brushParameters.ILinear
boeing747_SG.smee.ve
boeing747_SG.smee.damperCage.Lrsigmad
boeing747_SG.smee.damperCage.Lrsigmaq
boeing747_SG.smee.damperCage.Rrd
boeing747_SG.smee.damperCage.Rrq
boeing747_SG.smee.damperCage.T_ref
boeing747_SG.smee.damperCage.alpha
boeing747_SG.smee.damperCage.useHeatPort
boeing747_SG.smee.damperCage.T
boeing747_SG.smee.damperCage.Rrd_actual
boeing747_SG.smee.damperCage.Rrq_actual
boeing747_SG.smee.electricalExcitation.turnsRatio
boeing747_SG.smee.electricalExcitation.ve
boeing747_SG.smee.electricalExcitation.spacePhasor_r.i_[1]
boeing747_SG.smee.electricalExcitation.spacePhasor_r.i_[2]
boeing747_SG.smee.electricalExcitation.spacePhasor_r.der(i_[1])
boeing747_SG.smee.electricalExcitation.pin_en.v
boeing747_SG.smee.re.R
boeing747_SG.smee.re.T_ref
boeing747_SG.smee.re.alpha
boeing747_SG.smee.re.v
boeing747_SG.smee.re.n.v
boeing747_SG.smee.re.useHeatPort
boeing747_SG.smee.re.T
boeing747_SG.smee.re.R_actual
boeing747_SG.smee.lesigma.v
boeing747_SG.smee.lesigma.i
boeing747_SG.smee.lesigma.der(i)
boeing747_SG.smee.lesigma.L
boeing747_SG.smee.pin_en.v
boeing747_SG.smee.brush.v
boeing747_SG.smee.brush.brushParameters.V
boeing747_SG.smee.brush.brushParameters.ILinear
boeing747_SG.smee.brush.useHeatPort
boeing747_SG.smee.brush.heatPort.T
boeing747_SG.smee.brush.heatPort.Q_flow
boeing747_SG.smee.brush.lossPower
boeing747_SG.smee.turnsRatio
boeing747_SG.smee.Lesigma
boeing747_SG.rotorDisplacementAngle.m
boeing747_SG.rotorDisplacementAngle.p
boeing747_SG.rotorDisplacementAngle.positiveRange
boeing747_SG.rotorDisplacementAngle.threshold
boeing747_SG.rotorDisplacementAngle.useSupport
boeing747_SG.rotorDisplacementAngle.rotorDisplacementAngle
boeing747_SG.rotorDisplacementAngle.plug_p.m
boeing747_SG.rotorDisplacementAngle.plug_p.pin[1].i
boeing747_SG.rotorDisplacementAngle.plug_p.pin[2].i
boeing747_SG.rotorDisplacementAngle.plug_p.pin[3].i
boeing747_SG.rotorDisplacementAngle.plug_n.m
boeing747_SG.rotorDisplacementAngle.plug_n.pin[1].i
boeing747_SG.rotorDisplacementAngle.plug_n.pin[2].i
boeing747_SG.rotorDisplacementAngle.plug_n.pin[3].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.m
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.m
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.pin[1].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.pin[2].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.pin[3].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.m
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.pin[1].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.pin[2].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.pin[3].i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.v[1]
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.v[2]
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.v[3]
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[1].p.i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[1].n.i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[2].p.i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[2].n.i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[3].p.i
boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[3].n.i
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.nin
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.nout
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.y[1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.y[2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.m
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.phi[1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.phi[2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.phi[3]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[1, 1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[1, 2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[1, 3]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[2, 1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[2, 2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[2, 3]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[1, 1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[1, 2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[2, 1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[2, 2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[3, 1]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[3, 2]
boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.zero
boeing747_SG.rotorDisplacementAngle.flange.tau
boeing747_SG.rotorDisplacementAngle.relativeAngleSensor.flange_a.tau
boeing747_SG.rotorDisplacementAngle.relativeAngleSensor.flange_b.tau
boeing747_SG.rotorDisplacementAngle.relativeAngleSensor.phi_rel
boeing747_SG.rotorDisplacementAngle.constant_.k
boeing747_SG.rotorDisplacementAngle.constant_.y
boeing747_SG.rotorDisplacementAngle.add.u2
boeing747_SG.rotorDisplacementAngle.add.y
boeing747_SG.rotorDisplacementAngle.add.k1
boeing747_SG.rotorDisplacementAngle.add.k2
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.n
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.y[1]
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.y[2]
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[1, 1]
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[1, 2]
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[2, 1]
boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[2, 2]
boeing747_SG.rotorDisplacementAngle.ToPolarVSR.n
boeing747_SG.rotorDisplacementAngle.ToPolarVSR.y[1]
boeing747_SG.rotorDisplacementAngle.ToPolarVSR.y[2]
boeing747_SG.rotorDisplacementAngle.ToPolarVSR.small
boeing747_SG.rotorDisplacementAngle.fixed.phi0
boeing747_SG.rotorDisplacementAngle.fixed.flange.tau
boeing747_SG.rotorDisplacementAngle.wrapAngle.u
boeing747_SG.rotorDisplacementAngle.wrapAngle.positiveRange
boeing747_SG.rotorDisplacementAngle.lessThreshold.nin
boeing747_SG.rotorDisplacementAngle.lessThreshold.threshold
boeing747_SG.groundExcitation.p.v
boeing747_SG.groundExcitation.p.i
boeing747_SG.mechanicalPowerSensor.useSupport
boeing747_SG.mechanicalPowerSensor.P
boeing747_SG.mechanicalPowerSensor.relSpeedSensor.flange_a.tau
boeing747_SG.mechanicalPowerSensor.relSpeedSensor.flange_b.tau
boeing747_SG.mechanicalPowerSensor.relSpeedSensor.phi_rel
boeing747_SG.mechanicalPowerSensor.fixed.phi0
boeing747_SG.mechanicalPowerSensor.fixed.flange.tau
boeing747_SG.terminalBox.m
boeing747_SG.terminalBox.plug_sp.m
boeing747_SG.terminalBox.plug_sn.m
boeing747_SG.terminalBox.star.m
boeing747_SG.terminalBox.star.plug_p.m
boeing747_SG.terminalBox.star.pin_n.i
boeing747_SG.terminalBox.plugSupply.m
boeing747_SG.terminalBox.starpoint.i
boeing747_SG.speed.useSupport
boeing747_SG.speed.phi_support
boeing747_SG.speed.exact
boeing747_SG.speed.f_crit
boeing747_SG.speed.phi
boeing747_SG.speed.der(phi)
boeing747_SG.speed.w
boeing747_SG.speed.der(w)
boeing747_SG.speed.w_crit
boeing747_SG.voltageSensor.m
boeing747_SG.voltageSensor.plug_p.m
boeing747_SG.voltageSensor.plug_p.pin[1].i
boeing747_SG.voltageSensor.plug_p.pin[2].i
boeing747_SG.voltageSensor.plug_p.pin[3].i
boeing747_SG.voltageSensor.plug_n.m
boeing747_SG.voltageSensor.plug_n.pin[1].i
boeing747_SG.voltageSensor.plug_n.pin[2].i
boeing747_SG.voltageSensor.plug_n.pin[3].i
boeing747_SG.voltageSensor.v[1]
boeing747_SG.voltageSensor.v[2]
boeing747_SG.voltageSensor.v[3]
boeing747_SG.voltageSensor.voltageSensor[1].p.i
boeing747_SG.voltageSensor.voltageSensor[1].n.i
boeing747_SG.voltageSensor.voltageSensor[2].p.i
boeing747_SG.voltageSensor.voltageSensor[2].n.i
boeing747_SG.voltageSensor.voltageSensor[3].p.i
boeing747_SG.voltageSensor.voltageSensor[3].n.i
boeing747_SG.rms.y
boeing747_SG.rms.m
boeing747_SG.iEEEtype1AVR.T_R
boeing747_SG.iEEEtype1AVR.T_C
boeing747_SG.iEEEtype1AVR.T_B
boeing747_SG.iEEEtype1AVR.K_A
boeing747_SG.iEEEtype1AVR.T_A
boeing747_SG.iEEEtype1AVR.K_E
boeing747_SG.iEEEtype1AVR.T_E
boeing747_SG.iEEEtype1AVR.K_F
boeing747_SG.iEEEtype1AVR.T_F
boeing747_SG.iEEEtype1AVR.Vmax
boeing747_SG.iEEEtype1AVR.Vmin
boeing747_SG.iEEEtype1AVR.Vref
boeing747_SG.iEEEtype1AVR.Vterm
boeing747_SG.iEEEtype1AVR.LeadLag.u
boeing747_SG.iEEEtype1AVR.LeadLag.y
boeing747_SG.iEEEtype1AVR.LeadLag.b[1]
boeing747_SG.iEEEtype1AVR.LeadLag.b[2]
boeing747_SG.iEEEtype1AVR.LeadLag.a[1]
boeing747_SG.iEEEtype1AVR.LeadLag.a[2]
boeing747_SG.iEEEtype1AVR.LeadLag.initType
boeing747_SG.iEEEtype1AVR.LeadLag.x_start[1]
boeing747_SG.iEEEtype1AVR.LeadLag.y_start
boeing747_SG.iEEEtype1AVR.LeadLag.na
boeing747_SG.iEEEtype1AVR.LeadLag.nb
boeing747_SG.iEEEtype1AVR.LeadLag.nx
boeing747_SG.iEEEtype1AVR.LeadLag.bb[1]
boeing747_SG.iEEEtype1AVR.LeadLag.bb[2]
boeing747_SG.iEEEtype1AVR.LeadLag.d
boeing747_SG.iEEEtype1AVR.LeadLag.a_end
boeing747_SG.iEEEtype1AVR.LeadLag.x_scaled[1]
boeing747_SG.iEEEtype1AVR.LeadLag.der(x_scaled[1])
boeing747_SG.iEEEtype1AVR.TGR.y
boeing747_SG.iEEEtype1AVR.TGR.b[1]
boeing747_SG.iEEEtype1AVR.TGR.b[2]
boeing747_SG.iEEEtype1AVR.TGR.a[1]
boeing747_SG.iEEEtype1AVR.TGR.a[2]
boeing747_SG.iEEEtype1AVR.TGR.initType
boeing747_SG.iEEEtype1AVR.TGR.x_start[1]
boeing747_SG.iEEEtype1AVR.TGR.y_start
boeing747_SG.iEEEtype1AVR.TGR.x[1]
boeing747_SG.iEEEtype1AVR.TGR.na
boeing747_SG.iEEEtype1AVR.TGR.nb
boeing747_SG.iEEEtype1AVR.TGR.nx
boeing747_SG.iEEEtype1AVR.TGR.bb[1]
boeing747_SG.iEEEtype1AVR.TGR.bb[2]
boeing747_SG.iEEEtype1AVR.TGR.d
boeing747_SG.iEEEtype1AVR.TGR.a_end
boeing747_SG.iEEEtype1AVR.TGR.x_scaled[1]
boeing747_SG.iEEEtype1AVR.TGR.der(x_scaled[1])
boeing747_SG.iEEEtype1AVR.limiter.uMax
boeing747_SG.iEEEtype1AVR.limiter.uMin
boeing747_SG.iEEEtype1AVR.limiter.strict
boeing747_SG.iEEEtype1AVR.limiter.homotopyType
boeing747_SG.iEEEtype1AVR.limiter.limitsAtInit
boeing747_SG.iEEEtype1AVR.limiter.y
boeing747_SG.iEEEtype1AVR.limiter.simplifiedExpr
boeing747_SG.iEEEtype1AVR.feedback1.y
boeing747_SG.iEEEtype1AVR.SUM.k1
boeing747_SG.iEEEtype1AVR.SUM.k2
boeing747_SG.iEEEtype1AVR.SUM.k3
boeing747_SG.iEEEtype1AVR.Reference.k
boeing747_SG.iEEEtype1AVR.Exciter.b[1]
boeing747_SG.iEEEtype1AVR.Exciter.a[1]
boeing747_SG.iEEEtype1AVR.Exciter.a[2]
boeing747_SG.iEEEtype1AVR.Exciter.initType
boeing747_SG.iEEEtype1AVR.Exciter.x_start[1]
boeing747_SG.iEEEtype1AVR.Exciter.y_start
boeing747_SG.iEEEtype1AVR.Exciter.x[1]
boeing747_SG.iEEEtype1AVR.Exciter.na
boeing747_SG.iEEEtype1AVR.Exciter.nb
boeing747_SG.iEEEtype1AVR.Exciter.nx
boeing747_SG.iEEEtype1AVR.Exciter.bb[1]
boeing747_SG.iEEEtype1AVR.Exciter.bb[2]
boeing747_SG.iEEEtype1AVR.Exciter.d
boeing747_SG.iEEEtype1AVR.Exciter.a_end
boeing747_SG.iEEEtype1AVR.Exciter.x_scaled[1]
boeing747_SG.iEEEtype1AVR.Exciter.der(x_scaled[1])
boeing747_SG.iEEEtype1AVR.LPF.k
boeing747_SG.iEEEtype1AVR.LPF.T
boeing747_SG.iEEEtype1AVR.LPF.initType
boeing747_SG.iEEEtype1AVR.LPF.y_start
boeing747_SG.iEEEtype1AVR.LPF.y
boeing747_SG.iEEEtype1AVR.LPF.der(y)
boeing747_SG.iEEEtype1AVR.Regulator.k
boeing747_SG.iEEEtype1AVR.Regulator.T
boeing747_SG.iEEEtype1AVR.Regulator.initType
boeing747_SG.iEEEtype1AVR.Regulator.y_start
boeing747_SG.iEEEtype1AVR.Regulator.y
boeing747_SG.iEEEtype1AVR.Regulator.der(y)
boeing747_SG.PerUnitConversion.k
boeing747_SG.signalVoltage.n.v
boeing747_SG.plugSupply.m
boeing747_SG.plugSupply.pin[1].v
boeing747_SG.plugSupply.pin[1].i
boeing747_SG.plugSupply.pin[2].v
boeing747_SG.plugSupply.pin[2].i
boeing747_SG.plugSupply.pin[3].v
boeing747_SG.plugSupply.pin[3].i
const.k
resistor.m
resistor.plug_p.m
resistor.plug_n.m
resistor.plug_n.pin[1].v
resistor.plug_n.pin[2].v
resistor.plug_n.pin[3].v
resistor.R[1]
resistor.R[2]
resistor.R[3]
resistor.T_ref[1]
resistor.T_ref[2]
resistor.T_ref[3]
resistor.alpha[1]
resistor.alpha[2]
resistor.alpha[3]
resistor.mh
resistor.useHeatPort
resistor.T[1]
resistor.T[2]
resistor.T[3]
resistor.resistor[1].R
resistor.resistor[1].T_ref
resistor.resistor[1].alpha
resistor.resistor[1].n.v
resistor.resistor[1].useHeatPort
resistor.resistor[1].T
resistor.resistor[1].LossPower
resistor.resistor[1].R_actual
resistor.resistor[2].R
resistor.resistor[2].T_ref
resistor.resistor[2].alpha
resistor.resistor[2].n.v
resistor.resistor[2].useHeatPort
resistor.resistor[2].T
resistor.resistor[2].LossPower
resistor.resistor[2].R_actual
resistor.resistor[3].R
resistor.resistor[3].T_ref
resistor.resistor[3].alpha
resistor.resistor[3].n.v
resistor.resistor[3].useHeatPort
resistor.resistor[3].T
resistor.resistor[3].LossPower
resistor.resistor[3].R_actual
star.m
star.plug_p.m
star.plug_p.pin[1].v
star.plug_p.pin[2].v
star.plug_p.pin[3].v
star.pin_n.v
star.pin_n.i
ground.p.v
boeing747_SG.smee.thermalAmbient.constTr.k
boeing747_SG.smee.internalThermalPort.heatPortRotorWinding.Q_flow
boeing747_SG.smee.idq_dr[1]
boeing747_SG.smee.der(idq_dr[1])

double initialValue(696,6)
 -1       2                       0                       0                
  1   280   # boeing747_SG.Data.Poles
 -1  100000                       0                       0                
  1   280   # boeing747_SG.Data.SNominal
 -1     115                       0                       0                
  1   280   # boeing747_SG.Data.VsNominal
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.IsNominal
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.ZReference
 -1     400                       0                       0                
  1   280   # boeing747_SG.Data.fsNominal
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.omega
 -1      10                       0                       0                
  1   280   # boeing747_SG.Data.IeOpenCircuit
 -1       1                       0                       0                
  1   280   # boeing747_SG.Data.effectiveStatorTurns
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.turnsRatio
 -1  1.4999999999999999E-01       0                       0                
  1   280   # boeing747_SG.Data.x0
 -1       2                       0                       0                
  1   280   # boeing747_SG.Data.xd
 -1  1.8999999999999999E+00       0                       0                
  1   280   # boeing747_SG.Data.xq
 -1  2.4500000000000000E-01       0                       0                
  1   280   # boeing747_SG.Data.xdTransient
 -1  2.0000000000000001E-01       0                       0                
  1   280   # boeing747_SG.Data.xdSubtransient
 -1  2.0000000000000001E-01       0                       0                
  1   280   # boeing747_SG.Data.xqSubtransient
 -1  1.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.Data.Ta
 -1       5                       0                       0                
  1   280   # boeing747_SG.Data.Td0Transient
 -1  3.1000000000000000E-02       0                       0                
  1   280   # boeing747_SG.Data.Td0Subtransient
 -1  6.0999999999999999E-02       0                       0                
  1   280   # boeing747_SG.Data.Tq0Subtransient
 -1  3.3314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.Data.TsSpecification
 -1  2.9814999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.Data.TsRef
 -1       0                       0                       0                
  1   280   # boeing747_SG.Data.alpha20s
 -1  3.3114999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.Data.TrSpecification
 -1  2.9814999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.Data.TrRef
 -1       0                       0                       0                
  1   280   # boeing747_SG.Data.alpha20r
 -1  3.3314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.Data.TeSpecification
 -1  2.9814999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.Data.TeRef
 -1       0                       0                       0                
  1   280   # boeing747_SG.Data.alpha20e
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.xmd
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.xmq
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.xe
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.xrd
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.xrq
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.rs
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.rrd
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.rrq
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.re
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Rs
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Lssigma
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Lmd
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Lmq
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Lrsigmad
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Lrsigmaq
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Rrd
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Rrq
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.Re
  0       0                       0                       0                
  6   256   # boeing747_SG.Data.sigmae
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.m
 -1       2                       1                 1.0000000000000000E+100
  1   282   # boeing747_SG.smee.p
  0      50                       0                       0                
  6   256   # boeing747_SG.smee.fsNominal
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.TsOperational
  0  2.9999999999999999E-02       0                       0                
  6   256   # boeing747_SG.smee.Rs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.TsRef
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.alpha20s
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Lszero
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Lssigma
 -1  2.8999999999999998E-01       0                       0                
  1   280   # boeing747_SG.smee.Jr
  0       0                       0                       0                
  6   257   # boeing747_SG.smee.useSupport
 -1  2.8999999999999998E-01       0                       0                
  1   280   # boeing747_SG.smee.Js
  0       0                       0                       0                
  6   257   # boeing747_SG.smee.useThermalPort
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.frictionParameters.wRef
 -1       2                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # boeing747_SG.smee.frictionParameters.linear
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.frictionParameters.tauLinear
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.phiMechanical
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.tauElectrical
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.tauShaft
  0       1                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.inertiaRotor.J
  0       3                       1                       5                
  6   770   # boeing747_SG.smee.inertiaRotor.stateSelect
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.inertiaStator.flange_a.tau
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.inertiaStator.flange_b.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.inertiaStator.J
  0       3                       1                       5                
  6   770   # boeing747_SG.smee.inertiaStator.stateSelect
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.inertiaStator.der(phi)
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.inertiaStator.w
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.inertiaStator.der(w)
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.inertiaStator.a
 -1       0                       0                       0                
  1   280   # boeing747_SG.smee.fixed.phi0
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.friction.flange.tau
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.friction.support.tau
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.friction.phi
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.friction.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.friction.frictionParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.friction.frictionParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.friction.frictionParameters.power_w
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.friction.frictionParameters.tauRef
  0  1.0000000000000000E-03       0                       0                
  6   256   # boeing747_SG.smee.friction.frictionParameters.linear
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.friction.frictionParameters.wLinear
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.friction.frictionParameters.tauLinear
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.friction.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.friction.heatPort.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.friction.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.friction.lossPower
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalSupport.tau
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.statorCoreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.statorCoreParameters.PRef
 -1     115                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.statorCoreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.statorCoreParameters.wRef
  0       0                       0                       1                
  6   256   # boeing747_SG.smee.statorCoreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.statorCoreParameters.GcRef
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.statorCoreParameters.wMin
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.strayLoadParameters.PRef
 -1     100                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.strayLoadParameters.wRef
 -1       1                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoadParameters.tauRef
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.powerStator
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.powerMechanical
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.powerInertiaStator
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.powerInertiaRotor
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerTotal
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerStatorWinding
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerStatorCore
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerRotorCore
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerStrayLoad
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerFriction
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerRotorWinding
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.powerExcitation
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerExcitation
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.powerBalance.lossPowerBrush
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.vs[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.vs[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.vs[3]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.i_0_s
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.der(i_0_s)
 -1       0                       0                       0                
  2   304   # boeing747_SG.smee.idq_sr[1]
  0       0                       0                       0                
  3   256   # boeing747_SG.smee.der(idq_sr[1])
 -1       0                       0                       0                
  2   280   # boeing747_SG.smee.idq_sr[2]
  0       0                       0                       0                
  3   256   # boeing747_SG.smee.der(idq_sr[2])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.idq_rs[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.idq_rs[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.idq_rr[1]
 -1       0                       0                       0                
  2   280   # boeing747_SG.smee.idq_rr[2]
  0       0                       0                       0                
  3   256   # boeing747_SG.smee.der(idq_rr[2])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.der(idq_rr[1])
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.plug_sn.m
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.plug_sn.pin[1].v
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.smee.rs.m
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.v[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.v[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.rs.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.rs.plug_n.m
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.rs.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.rs.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.rs.plug_n.pin[3].v
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.rs.R[1]
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.rs.R[2]
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.rs.R[3]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.T_ref[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.T_ref[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.T_ref[3]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.alpha[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.alpha[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.alpha[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.smee.rs.mh
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.rs.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.T[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.T[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.T[3]
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[1].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.resistor[1].T_ref
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[1].alpha
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[1].v
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.rs.resistor[1].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.resistor[1].T
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[1].LossPower
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[1].R_actual
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[2].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.resistor[2].T_ref
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[2].alpha
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[2].v
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.rs.resistor[2].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.resistor[2].T
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[2].LossPower
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[2].R_actual
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[3].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.resistor[3].T_ref
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[3].alpha
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[3].v
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.rs.resistor[3].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.rs.resistor[3].T
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[3].LossPower
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.rs.resistor[3].R_actual
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.L[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.L[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.v_[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.v_[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.i_[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.i_[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.der(i_[1])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lssigma.der(i_[2])
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.lssigma.spacePhasor_a.v_[1]
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.lssigma.spacePhasor_a.v_[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lszero.v
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lszero.i
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lszero.der(i)
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.lszero.p.v
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.lszero.p.i
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.lszero.n.v
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.lszero.n.i
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.lszero.L
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.statorCore.coreParameters.m
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.statorCore.coreParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.statorCore.coreParameters.VRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.statorCore.coreParameters.wRef
  0       0                       0                       1                
  6   256   # boeing747_SG.smee.statorCore.coreParameters.ratioHysteresis
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.statorCore.coreParameters.GcRef
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.statorCore.coreParameters.wMin
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.statorCore.m
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.statorCore.turnsRatio
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.statorCore.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.statorCore.heatPort.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.statorCore.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.statorCore.lossPower
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.statorCore.spacePhasor.i_[1]
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.statorCore.spacePhasor.i_[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.statorCore.Gc
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.statorCore.wLimit
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.spacePhasorS.m
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.spacePhasorS.turnsRatio
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.spacePhasorS.v[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.spacePhasorS.v[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.spacePhasorS.v[3]
  0  6.6666666666666663E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.TransformationMatrix[1, 1]
  0 -3.3333333333333315E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.TransformationMatrix[1, 2]
  0 -3.3333333333333359E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.TransformationMatrix[1, 3]
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.TransformationMatrix[2, 1]
  0  5.7735026918962573E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.TransformationMatrix[2, 2]
  0 -5.7735026918962562E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.TransformationMatrix[2, 3]
  0       1                       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.InverseTransformation[1, 1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.InverseTransformation[1, 2]
  0 -4.9999999999999978E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.InverseTransformation[2, 1]
  0  8.6602540378443871E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.InverseTransformation[2, 2]
  0 -5.0000000000000044E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.InverseTransformation[3, 1]
  0 -8.6602540378443849E-01       0                       0                
  6  1280   # boeing747_SG.smee.spacePhasorS.InverseTransformation[3, 2]
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.spacePhasorS.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.spacePhasorS.plug_n.m
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.spacePhasorS.zero.v
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.spacePhasorS.zero.i
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.spacePhasorS.ground.v
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.spacePhasorS.ground.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.smee.strayLoad.m
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.v[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.v[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.strayLoad.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.smee.strayLoad.plug_n.m
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.strayLoad.flange.tau
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.strayLoad.support.tau
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.phi
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.tau
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.strayLoad.strayLoadParameters.PRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.strayLoad.strayLoadParameters.IRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.strayLoad.strayLoadParameters.wRef
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.strayLoad.strayLoadParameters.power_w
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.strayLoadParameters.tauRef
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.strayLoad.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.strayLoad.heatPort.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.strayLoad.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.lossPower
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.strayLoad.iRMS
  0       1                       0                       0                
  6   257   # boeing747_SG.smee.thermalAmbient.useDamperCage
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.thermalAmbient.m
  0       0                       0                       0                
  6   257   # boeing747_SG.smee.thermalAmbient.useTemperatureInputs
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.TDefault
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.Ts
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.thermalAmbient.Q_flowStatorWinding
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.thermalAmbient.Q_flowStatorCore
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.thermalAmbient.Q_flowRotorCore
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.thermalAmbient.Q_flowStrayLoad
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.thermalAmbient.Q_flowFriction
  0       3                       0                       0                
  6   262   # boeing747_SG.smee.thermalAmbient.thermalPort.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortFriction.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortFriction.Q_flow
  0       1                       0                       0                
  6   261   # boeing747_SG.smee.thermalAmbient.thermalPort.useDamperCage
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortBrush.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.thermalPort.heatPortBrush.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.temperatureStatorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.temperatureStatorCore.port.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.temperatureStatorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.temperatureRotorCore.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.temperatureRotorCore.port.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.temperatureRotorCore.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.temperatureStrayLoad.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.temperatureStrayLoad.port.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.temperatureStrayLoad.port.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.temperatureFriction.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.temperatureFriction.port.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.temperatureFriction.port.Q_flow
  0       1                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.constTs.k
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.smee.thermalAmbient.thermalCollectorStator.m
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.Tr
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.Te
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.thermalAmbient.Q_flowTotal
  0       1                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.constTe.k
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.temperatureBrush.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.thermalAmbient.temperatureBrush.port.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.thermalAmbient.temperatureBrush.port.Q_flow
  0  3.1415926535897931E+00       0                       0                
  6  1280   # boeing747_SG.smee.pi
  0       3                       0                       0                
  6  1286   # boeing747_SG.smee.internalThermalPort.m
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortStatorWinding[1].Q_flow
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortStatorWinding[2].Q_flow
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortStatorWinding[3].Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # boeing747_SG.smee.internalThermalPort.heatPortStatorCore.T
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortStatorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # boeing747_SG.smee.internalThermalPort.heatPortRotorCore.T
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortRotorCore.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # boeing747_SG.smee.internalThermalPort.heatPortStrayLoad.T
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortStrayLoad.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # boeing747_SG.smee.internalThermalPort.heatPortFriction.T
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortFriction.Q_flow
  0       1                       0                       0                
  6  1285   # boeing747_SG.smee.internalThermalPort.useDamperCage
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortExcitation.Q_flow
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6  1284   # boeing747_SG.smee.internalThermalPort.heatPortBrush.T
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortBrush.Q_flow
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.Lmd
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.Lmq
  0       3                       0                       0                
  6   258   # boeing747_SG.smee.airGapR.m
  0       1                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.smee.airGapR.p
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.gamma
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(gamma)
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.psi_ms[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.psi_ms[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(psi_ms[1])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(psi_ms[2])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.psi_mr[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.psi_mr[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(psi_mr[1])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(psi_mr[2])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.RotationMatrix[1, 1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.RotationMatrix[1, 2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.RotationMatrix[2, 1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.RotationMatrix[2, 2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(RotationMatrix[1, 1])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(RotationMatrix[1, 2])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(RotationMatrix[2, 1])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(RotationMatrix[2, 2])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.i_mr[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.i_mr[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(i_mr[1])
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.airGapR.der(i_mr[2])
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.airGapR.L[1, 1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.airGapR.L[1, 2]
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.airGapR.L[2, 1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.airGapR.L[2, 2]
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.TrOperational
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Lmd
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Lmq
  0       1                       0                       0                
  6   257   # boeing747_SG.smee.useDamperCage
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Lrsigmad
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Lrsigmaq
  0  4.0000000000000001E-02       0                       0                
  6   256   # boeing747_SG.smee.Rrd
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.Rrq
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.TrRef
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.alpha20r
  0     100                       0                       0                
  6   256   # boeing747_SG.smee.VsNominal
  0      10                       0                       0                
  6   256   # boeing747_SG.smee.IeOpenCircuit
  0  2.5000000000000000E+00       0                       0                
  6   256   # boeing747_SG.smee.Re
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.TeRef
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.alpha20e
  0  2.5000000000000001E-02       0                  9.8999999999999999E-01
  6   256   # boeing747_SG.smee.sigmae
 -1  2.9314999999999998E+02       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.smee.TeOperational
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.brushParameters.V
 -1  1.0000000000000000E-02       0                       0                
  1   280   # boeing747_SG.smee.brushParameters.ILinear
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.ve
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.Lrsigmad
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.Lrsigmaq
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.Rrd
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.Rrq
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.damperCage.T_ref
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.alpha
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.damperCage.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.damperCage.T
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.Rrd_actual
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.damperCage.Rrq_actual
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.electricalExcitation.turnsRatio
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.electricalExcitation.ve
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.electricalExcitation.spacePhasor_r.i_[1]
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.electricalExcitation.spacePhasor_r.i_[2]
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.electricalExcitation.spacePhasor_r.der(i_[1])
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.electricalExcitation.pin_en.v
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.re.R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.re.T_ref
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.re.alpha
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.re.v
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.re.n.v
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.re.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.re.T
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.re.R_actual
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.lesigma.v
 -1       0                       0                       0                
  2   280   # boeing747_SG.smee.lesigma.i
  0       0                       0                       0                
  3   256   # boeing747_SG.smee.lesigma.der(i)
  0       1                       0                       0                
  6   256   # boeing747_SG.smee.lesigma.L
  0       0                       0                       0                
  6   260   # boeing747_SG.smee.pin_en.v
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.brush.v
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.brush.brushParameters.V
  0  1.0000000000000000E-02       0                       0                
  6   256   # boeing747_SG.smee.brush.brushParameters.ILinear
  0       1                       0                       0                
  6   769   # boeing747_SG.smee.brush.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   260   # boeing747_SG.smee.brush.heatPort.T
  0       0                       0                       0                
  6   388   # boeing747_SG.smee.brush.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # boeing747_SG.smee.brush.lossPower
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.turnsRatio
  0       0                       0                       0                
  6  1280   # boeing747_SG.smee.Lesigma
  0       3                       0                       0                
  6   258   # boeing747_SG.rotorDisplacementAngle.m
 -1       2                       1                 1.0000000000000000E+100
  1   282   # boeing747_SG.rotorDisplacementAngle.p
 -1       0                       0                       0                
  1   281   # boeing747_SG.rotorDisplacementAngle.positiveRange
 -1       0                       0                 1.0000000000000000E+100
  1   280   # boeing747_SG.rotorDisplacementAngle.threshold
  0       0                       0                       0                
  6   257   # boeing747_SG.rotorDisplacementAngle.useSupport
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.rotorDisplacementAngle
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.rotorDisplacementAngle.plug_p.m
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.plug_p.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.rotorDisplacementAngle.plug_n.m
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.plug_n.pin[1].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.plug_n.pin[2].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.plug_n.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.m
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_p.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.m
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.pin[1].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.pin[2].i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.plug_n.pin[3].i
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.v[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.v[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.v[3]
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[1].p.i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[1].n.i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[2].p.i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[2].n.i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[3].p.i
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.VoltageSensor1.voltageSensor[3].n.i
  0       3                       0                       0                
  6   258   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.nin
  0       2                       0                       0                
  6   258   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.nout
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.y[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.y[2]
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.m
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.phi[1]
  0  2.0943951023931953E+00       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.phi[2]
  0  4.1887902047863905E+00       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.phi[3]
  0  6.6666666666666663E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[1, 1]
  0 -3.3333333333333315E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[1, 2]
  0 -3.3333333333333359E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[1, 3]
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[2, 1]
  0  5.7735026918962573E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[2, 2]
  0 -5.7735026918962562E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.TransformationMatrix[2, 3]
  0       1                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[1, 1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[1, 2]
  0 -4.9999999999999978E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[2, 1]
  0  8.6602540378443871E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[2, 2]
  0 -5.0000000000000044E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[3, 1]
  0 -8.6602540378443849E-01       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.InverseTransformation[3, 2]
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.ToSpacePhasorVS.zero
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.flange.tau
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.relativeAngleSensor.flange_a.tau
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.relativeAngleSensor.flange_b.tau
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.relativeAngleSensor.phi_rel
  0  1.5707963267948966E+00       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.constant_.k
  0  1.5707963267948966E+00       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.constant_.y
  0  1.5707963267948966E+00       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.add.u2
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.add.y
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.add.k1
  0       1                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.add.k2
  0       2                       0                       0                
  6   258   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.n
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.y[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.y[2]
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[1, 1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[1, 2]
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[2, 1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.rotorDisplacementAngle.rotatorVS2R.RotationMatrix[2, 2]
  0       2                       0                       0                
  6   258   # boeing747_SG.rotorDisplacementAngle.ToPolarVSR.n
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.ToPolarVSR.y[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.ToPolarVSR.y[2]
  0  9.9999999999999997E-61       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.ToPolarVSR.small
 -1       0                       0                       0                
  1   280   # boeing747_SG.rotorDisplacementAngle.fixed.phi0
  0       0                       0                       0                
  6   388   # boeing747_SG.rotorDisplacementAngle.fixed.flange.tau
  0       0                       0                       0                
  6   256   # boeing747_SG.rotorDisplacementAngle.wrapAngle.u
  0       0                       0                       0                
  6   257   # boeing747_SG.rotorDisplacementAngle.wrapAngle.positiveRange
  0       2                       0                       0                
  6   258   # boeing747_SG.rotorDisplacementAngle.lessThreshold.nin
  0       0                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.rotorDisplacementAngle.lessThreshold.threshold
  0       0                       0                       0                
  6   260   # boeing747_SG.groundExcitation.p.v
  0       0                       0                       0                
  6   388   # boeing747_SG.groundExcitation.p.i
  0       0                       0                       0                
  6   257   # boeing747_SG.mechanicalPowerSensor.useSupport
  0       0                       0                       0                
  6   256   # boeing747_SG.mechanicalPowerSensor.P
  0       0                       0                       0                
  6   388   # boeing747_SG.mechanicalPowerSensor.relSpeedSensor.flange_a.tau
  0       0                       0                       0                
  6   388   # boeing747_SG.mechanicalPowerSensor.relSpeedSensor.flange_b.tau
  0       0                       0                       0                
  6   256   # boeing747_SG.mechanicalPowerSensor.relSpeedSensor.phi_rel
 -1       0                       0                       0                
  1   280   # boeing747_SG.mechanicalPowerSensor.fixed.phi0
  0       0                       0                       0                
  6   388   # boeing747_SG.mechanicalPowerSensor.fixed.flange.tau
  0       3                       0                       0                
  6   258   # boeing747_SG.terminalBox.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.terminalBox.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.terminalBox.plug_sn.m
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.terminalBox.star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.terminalBox.star.plug_p.m
  0       0                       0                       0                
  6   388   # boeing747_SG.terminalBox.star.pin_n.i
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.terminalBox.plugSupply.m
  0       0                       0                       0                
  6   388   # boeing747_SG.terminalBox.starpoint.i
  0       0                       0                       0                
  6   769   # boeing747_SG.speed.useSupport
  0       0                       0                       0                
  6  1280   # boeing747_SG.speed.phi_support
  0       0                       0                       0                
  6   257   # boeing747_SG.speed.exact
 -1      50                       0                       0                
  1   280   # boeing747_SG.speed.f_crit
 -1       0                       0                       0                
  2   280   # boeing747_SG.speed.phi
  0       0                       0                       0                
  3   256   # boeing747_SG.speed.der(phi)
 -1       0                       0                       0                
  2   272   # boeing747_SG.speed.w
  0       0                       0                       0                
  3   256   # boeing747_SG.speed.der(w)
  0       0                       0                       0                
  6  1280   # boeing747_SG.speed.w_crit
  0       3                       1                 1.0000000000000000E+100
  6   258   # boeing747_SG.voltageSensor.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.voltageSensor.plug_p.m
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.plug_p.pin[3].i
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.voltageSensor.plug_n.m
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.plug_n.pin[1].i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.plug_n.pin[2].i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.plug_n.pin[3].i
  0       0                       0                       0                
  6   256   # boeing747_SG.voltageSensor.v[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.voltageSensor.v[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.voltageSensor.v[3]
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.voltageSensor[1].p.i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.voltageSensor[1].n.i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.voltageSensor[2].p.i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.voltageSensor[2].n.i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.voltageSensor[3].p.i
  0       0                       0                       0                
  6   388   # boeing747_SG.voltageSensor.voltageSensor[3].n.i
  0       0                       0                       0                
  6   256   # boeing747_SG.rms.y
  0       3                       2                 1.0000000000000000E+100
  6   258   # boeing747_SG.rms.m
 -1  2.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.T_R
 -1  1.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.T_C
 -1  1.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.T_B
 -1     300                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.K_A
 -1  1.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.T_A
 -1       1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.K_E
 -1  1.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.T_E
 -1  1.0000000000000000E-03       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.K_F
 -1  1.0000000000000001E-01       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.T_F
 -1       7                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Vmax
 -1      -2                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Vmin
 -1       1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Vref
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Vterm
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LeadLag.u
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LeadLag.y
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LeadLag.b[1]
  0       1                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LeadLag.b[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LeadLag.a[1]
  0       1                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LeadLag.a[2]
  0       2                       1                       4                
  6   258   # boeing747_SG.iEEEtype1AVR.LeadLag.initType
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.LeadLag.x_start[1]
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.LeadLag.y_start
  0       2                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.LeadLag.na
  0       2                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.LeadLag.nb
  0       1                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.LeadLag.nx
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.LeadLag.bb[1]
  0       1                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.LeadLag.bb[2]
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.LeadLag.d
  0       1                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.LeadLag.a_end
 -1       0                       0                       0                
  2  1296   # boeing747_SG.iEEEtype1AVR.LeadLag.x_scaled[1]
  0       0                       0                       0                
  3  1280   # boeing747_SG.iEEEtype1AVR.LeadLag.der(x_scaled[1])
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.TGR.y
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.TGR.b[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.TGR.b[2]
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.TGR.a[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.TGR.a[2]
  0       2                       1                       4                
  6   258   # boeing747_SG.iEEEtype1AVR.TGR.initType
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.TGR.x_start[1]
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.TGR.y_start
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.TGR.x[1]
  0       2                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.TGR.na
  0       2                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.TGR.nb
  0       1                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.TGR.nx
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.TGR.bb[1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.TGR.bb[2]
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.TGR.d
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.TGR.a_end
 -1       0                       0                       0                
  2  1304   # boeing747_SG.iEEEtype1AVR.TGR.x_scaled[1]
  0       0                       0                       0                
  3  1280   # boeing747_SG.iEEEtype1AVR.TGR.der(x_scaled[1])
  0       1                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.limiter.uMax
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.limiter.uMin
  0       0                       0                       0                
  6   257   # boeing747_SG.iEEEtype1AVR.limiter.strict
  0       1                       1                       4                
  6   258   # boeing747_SG.iEEEtype1AVR.limiter.homotopyType
  0       1                       0                       0                
  6   257   # boeing747_SG.iEEEtype1AVR.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.limiter.y
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.limiter.simplifiedExpr
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.feedback1.y
 -1       1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.SUM.k1
 -1      -1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.SUM.k2
 -1      -1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.SUM.k3
  0       1                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Reference.k
 -1       1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Exciter.b[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Exciter.a[1]
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Exciter.a[2]
  0       2                       1                       4                
  6   258   # boeing747_SG.iEEEtype1AVR.Exciter.initType
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Exciter.x_start[1]
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Exciter.y_start
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Exciter.x[1]
  0       2                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.Exciter.na
  0       1                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.Exciter.nb
  0       1                       0                       0                
  6  1282   # boeing747_SG.iEEEtype1AVR.Exciter.nx
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.Exciter.bb[1]
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.Exciter.bb[2]
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.Exciter.d
  0       0                       0                       0                
  6  1280   # boeing747_SG.iEEEtype1AVR.Exciter.a_end
 -1       0                       0                       0                
  2  1296   # boeing747_SG.iEEEtype1AVR.Exciter.x_scaled[1]
  0       0                       0                       0                
  3  1280   # boeing747_SG.iEEEtype1AVR.Exciter.der(x_scaled[1])
 -1       1                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.LPF.k
  0       1                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.LPF.T
  0       2                       1                       4                
  6   258   # boeing747_SG.iEEEtype1AVR.LPF.initType
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.LPF.y_start
 -1       0                       0                       0                
  2   272   # boeing747_SG.iEEEtype1AVR.LPF.y
  0       0                       0                       0                
  3   256   # boeing747_SG.iEEEtype1AVR.LPF.der(y)
  0       0                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Regulator.k
  0       1                       0                       0                
  6   256   # boeing747_SG.iEEEtype1AVR.Regulator.T
  0       2                       1                       4                
  6   258   # boeing747_SG.iEEEtype1AVR.Regulator.initType
 -1       0                       0                       0                
  1   280   # boeing747_SG.iEEEtype1AVR.Regulator.y_start
 -1       0                       0                       0                
  2   272   # boeing747_SG.iEEEtype1AVR.Regulator.y
  0       0                       0                       0                
  3   256   # boeing747_SG.iEEEtype1AVR.Regulator.der(y)
  0       1                       0                       0                
  6   256   # boeing747_SG.PerUnitConversion.k
  0       0                       0                       0                
  6   260   # boeing747_SG.signalVoltage.n.v
  0       3                       1                 1.0000000000000000E+100
  6   262   # boeing747_SG.plugSupply.m
  0       0                       0                       0                
  6   260   # boeing747_SG.plugSupply.pin[1].v
  0       0                       0                       0                
  6   388   # boeing747_SG.plugSupply.pin[1].i
  0       0                       0                       0                
  6   260   # boeing747_SG.plugSupply.pin[2].v
  0       0                       0                       0                
  6   388   # boeing747_SG.plugSupply.pin[2].i
  0       0                       0                       0                
  6   260   # boeing747_SG.plugSupply.pin[3].v
  0       0                       0                       0                
  6   420   # boeing747_SG.plugSupply.pin[3].i
 -1      12                       0                       0                
  1   280   # const.k
  0       3                       1                 1.0000000000000000E+100
  6   258   # resistor.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # resistor.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # resistor.plug_n.m
  0       0                       0                       0                
  6   260   # resistor.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # resistor.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # resistor.plug_n.pin[3].v
 -1       1                       0                       0                
  1   280   # resistor.R[1]
 -1       1                       0                       0                
  1   280   # resistor.R[2]
 -1       1                       0                       0                
  1   280   # resistor.R[3]
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # resistor.T_ref[1]
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # resistor.T_ref[2]
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # resistor.T_ref[3]
 -1       0                       0                       0                
  1   280   # resistor.alpha[1]
 -1       0                       0                       0                
  1   280   # resistor.alpha[2]
 -1       0                       0                       0                
  1   280   # resistor.alpha[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # resistor.mh
  0       0                       0                       0                
  6   769   # resistor.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.T[1]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.T[2]
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.T[3]
  0       1                       0                       0                
  6   256   # resistor.resistor[1].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.resistor[1].T_ref
  0       0                       0                       0                
  6   256   # resistor.resistor[1].alpha
  0       0                       0                       0                
  6   260   # resistor.resistor[1].n.v
  0       0                       0                       0                
  6   769   # resistor.resistor[1].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.resistor[1].T
  0       0                       0                       0                
  6   256   # resistor.resistor[1].LossPower
  0       0                       0                       0                
  6   256   # resistor.resistor[1].R_actual
  0       1                       0                       0                
  6   256   # resistor.resistor[2].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.resistor[2].T_ref
  0       0                       0                       0                
  6   256   # resistor.resistor[2].alpha
  0       0                       0                       0                
  6   260   # resistor.resistor[2].n.v
  0       0                       0                       0                
  6   769   # resistor.resistor[2].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.resistor[2].T
  0       0                       0                       0                
  6   256   # resistor.resistor[2].LossPower
  0       0                       0                       0                
  6   256   # resistor.resistor[2].R_actual
  0       1                       0                       0                
  6   256   # resistor.resistor[3].R
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.resistor[3].T_ref
  0       0                       0                       0                
  6   256   # resistor.resistor[3].alpha
  0       0                       0                       0                
  6   260   # resistor.resistor[3].n.v
  0       0                       0                       0                
  6   769   # resistor.resistor[3].useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # resistor.resistor[3].T
  0       0                       0                       0                
  6   256   # resistor.resistor[3].LossPower
  0       0                       0                       0                
  6   256   # resistor.resistor[3].R_actual
  0       3                       1                 1.0000000000000000E+100
  6   258   # star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # star.plug_p.m
  0       0                       0                       0                
  6   260   # star.plug_p.pin[1].v
  0       0                       0                       0                
  6   260   # star.plug_p.pin[2].v
  0       0                       0                       0                
  6   260   # star.plug_p.pin[3].v
  0       0                       0                       0                
  6   260   # star.pin_n.v
  0       0                       0                       0                
  6   388   # star.pin_n.i
  0       0                       0                       0                
  6   260   # ground.p.v
  0       1                       0                 1.0000000000000000E+100
  6   256   # boeing747_SG.smee.thermalAmbient.constTr.k
  0       0                       0                       0                
  6  1412   # boeing747_SG.smee.internalThermalPort.heatPortRotorWinding.Q_flow
 -1       0                       0                       0                
  2   280   # boeing747_SG.smee.idq_dr[1]
  0       0                       0                       0                
  3   256   # boeing747_SG.smee.der(idq_dr[1])


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(696,139)
Number of Poles
Nominal apparent power [VA]
Nominal stator voltage per phase [V]
Nominal stator current per phase [A]
Reference impedance [Ohm]
Nominal stator frequency [Hz]
Nominal angular frequency [rad/s]
Open circuit excitation current @ nominal voltage and frequency [A]
Effective number of stator turns
Stator current / excitation current
Stator stray inductance per phase (approximately zero impedance) [pu] [rad]
Synchronous reactance per phase, d-axis [pu] [rad]
Synchronous reactance per phase, q-axis [pu] [rad]
Transient reactance per phase, d-axis [pu] [rad]
Subtransient reactance per phase, d-axis [pu] [rad]
Subtransient reactance per phase, q-axis [pu] [rad]
Armature time constant [s]
Open circuit field time constant Td0' [s]
Open circuit subtransient time constant Td0'', d-axis [s]
Open circuit subtransient time constant Tq0'', q-axis [s]
Specification temperature of stator resistance [K|degC]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K]
Specification temperature of (optional) damper cage [K|degC]
Reference temperature of damper resistances in d- and q-axis [K|degC]
Temperature coefficient of damper resistances in d- and q-axis [1/K]
Specification excitation temperature [K|degC]
Reference temperature of excitation resistance [K|degC]
Temperature coefficient of excitation resistance [1/K]
Main field reactance per phase, d-axis [pu] [rad]
Main field reactance per phase, q-axis [pu] [rad]
Excitation reactance [pu] [rad]
Damper reactance per phase, d-axis [pu] [rad]
Damper reactance per phase, d-axis [pu] [rad]
Stator resistance per phase at specification temperature [pu] [1]
Damper resistance per phase at specification temperature, d-axis [pu] [1]
Damper resistance per phase at specification temperature, q-axis [pu] [1]
Excitation resistance per phase at specification temperature [pu] [1]
Stator resistance per phase at TRef [Ohm]
Stator stray inductance per phase [H]
Main field inductance per phase in d-axis [H]
Main field inductance per phase in q-axis [H]
Damper stray inductance in d-axis [H]
Damper stray inductance in q-axis [H]
Damper resistance in d-axis at TRef [Ohm]
Damper resistance in q-axis at TRef [Ohm]
Excitation resistance at TRef [Ohm]
Stray fraction of total excitation inductance [1]
Number of phases [:#(type=Integer)]
Number of pole pairs (Integer) [:#(type=Integer)]
Nominal frequency [Hz]
Operational temperature of stator resistance [K|degC]
Stator resistance per phase at TRef [Ohm]
Reference temperature of stator resistance [K|degC]
Temperature coefficient of stator resistance at 20 degC [1/K]
Stator zero sequence inductance [H]
Stator stray inductance per phase [H]
Rotor's moment of inertia [kg.m2]
Enable / disable (=fixed stator) support [:#(type=Boolean)]
Stator's moment of inertia [kg.m2]
Enable / disable (=fixed temperatures) thermal port [:#(type=Boolean)]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity [1]
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
Mechanical angle of rotor against stator [rad|deg]
Electromagnetic torque [N.m]
Shaft torque [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference friction losses at wRef [W]
Reference angular velocity that the PRef refer to [rad/s|rev/min]
Exponent of friction torque w.r.t. angular velocity
Reference friction torque at reference angular velocity [N.m]
Linear angular velocity range with respect to reference angular velocity
Linear angular velocity range [rad/s]
Torque corresponding with linear angular velocity range [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Cut torque in the flange [N.m]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
Electrical power (stator) [W]
Mechanical power [W]
Stator inertia power [W]
Rotor inertia power [W]
Total loss power [W]
Stator copper losses [W]
Stator core losses [W]
Rotor core losses [W]
Stray load losses [W]
Friction losses [W]
Rotor copper losses [W]
Electrical excitation power [W]
Excitation losses [W]
Brush losses [W]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator instantaneous voltages [V]
Stator zero-sequence current [A]
der(Stator zero-sequence current) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Stator space phasor current / rotor fixed frame [A]
der(Stator space phasor current / rotor fixed frame) [A/s]
Rotor space phasor current / stator fixed frame [A]
Rotor space phasor current / stator fixed frame [A]
Rotor space phasor current / rotor fixed frame [A]
Rotor space phasor current / rotor fixed frame [A]
der(Rotor space phasor current / rotor fixed frame) [A/s]
der(Rotor space phasor current / rotor fixed frame) [A/s]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Inductance of both axes [H]
Inductance of both axes [H]
[V]
[V]
[A]
[A]
[A/s]
[A/s]
1=real, 2=imaginary part [V]
1=real, 2=imaginary part [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Inductance [H]
Number of phases (1 for DC, 3 for induction machines) [:#(type=Integer)]
Reference core losses at reference inner voltage VRef [W]
Reference inner RMS voltage that reference core losses PRef refer to [V]
Reference angular velocity that reference core losses PRef refer to [rad/s]
Ratio of hysteresis losses with respect to the total core losses at VRef and fRef
Reference conductance at reference frequency and voltage [S]
[rad/s]
Number of phases [:#(type=Integer)]
Effective number of stator turns / effective number of rotor turns (if used as rotor core)
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
1=real, 2=imaginary part [A]
1=real, 2=imaginary part [A]
Variable core loss conductance [S]
Limited angular velocity [rad/s]
Number of phases [:#(type=Integer)]
Turns ratio [1]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
Instantaneous phase voltages [V]
[1]
[1]
[1]
[1]
[1]
[1]






Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Angle between shaft and support [rad|deg]
Torque [N.m]
Reference stray load losses at IRef and wRef [W]
Reference RMS current that PRef refers to [A]
Reference angular velocity that PRef refers to [rad/s|rev/min]
Exponent of stray load loss torque w.r.t. angular velocity
Reference stray load torque at reference angular velocity and reference current [N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
[A]
Enable / disable damper cage [:#(type=Boolean)]
Number of stator phases [:#(type=Integer)]
If true, temperature inputs are used; else, temperatures are constant [:#(type=Boolean)]
Default temperature [K|degC]
Temperature of stator windings [K|degC]
Heat flow rate of stator windings [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stator core losses [W]
Heat flow rate of stray load losses [W]
Heat flow rate of friction losses [W]
Number of stator phases [:#(type=Integer)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Enable / disable damper cage [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant output value [K]
Number of collected heat flows [:#(type=Integer)]
Temperature of damper cage (optional) [K|degC]
Temperature of excitation [K|degC]
[W]
Constant output value [K]
Fixed temperature at port [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]

Number of stator phases [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Enable / disable damper cage [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Main field inductance d-axis [H]
Main field inductance q-axis [H]
Number of phases [:#(type=Integer)]
Number of pole pairs [:#(type=Integer)]
Rotor displacement angle [rad|deg]
der(Rotor displacement angle) [rad/s]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
Magnetizing flux phasor with respect to the stator fixed frame [Wb]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
der(Magnetizing flux phasor with respect to the stator fixed frame) [V]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
Magnetizing flux phasor with respect to the rotor fixed frame [Wb]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
der(Magnetizing flux phasor with respect to the rotor fixed frame) [V]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
Matrix of rotation from rotor to stator [1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
der(Matrix of rotation from rotor to stator) [s-1]
Magnetizing current space phasor with respect to the rotor fixed frame [A]
Magnetizing current space phasor with respect to the rotor fixed frame [A]
der(Magnetizing current space phasor with respect to the rotor fixed frame) [A/s]
der(Magnetizing current space phasor with respect to the rotor fixed frame) [A/s]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Inductance matrix [H]
Operational temperature of (optional) damper cage [K|degC]
Stator main field inductance per phase in d-axis [H]
Stator main field inductance per phase in q-axis [H]
Enable / disable damper cage [:#(type=Boolean)]
Damper stray inductance in d-axis [H]
Damper stray inductance in q-axis [H]
Damper resistance in d-axis at TRef [Ohm]
Damper resistance in q-axis at TRef [Ohm]
Reference temperature of damper resistances in d- and q-axis [K|degC]
Temperature coefficient of damper resistances in d- and q-axis [1/K]
Nominal stator RMS voltage per phase [V]
Open circuit excitation current @ nominal voltage and frequency [A]
Excitation resistance at TRef [Ohm]
Reference temperature of excitation resistance [K|degC]
Temperature coefficient of excitation resistance [1/K]
Stray fraction of total excitation inductance [1]
Operational excitation temperature [K|degC]
Total voltage drop of brushes for currents > ILinear [V]
Current indicating linear voltage region of brush voltage drop [A]
Excitation voltage [V]
Stray inductance in d-axis per phase translated to stator [H]
Stray inductance in q-axis per phase translated to stator [H]
Resistance in d-axis per phase translated to stator at T_ref [Ohm]
Resistance in q-axis per phase translated to stator at T_ref [Ohm]
Reference temperature of both resistances in d- and q-axis [K|degC]
Temperature coefficient of both resistances in d- and q-axis at T_ref [1/K]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Actual resistance = Rrd*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Actual resistance = Rrq*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Ratio stator current / excitation current
Excitation voltage [V]
1=real, 2=imaginary part [A]
1=real, 2=imaginary part [A]
der(1=real, 2=imaginary part) [A/s]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Potential at the pin [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Total voltage drop of brushes for currents > ILinear [V]
Current indicating linear voltage region of brush voltage drop [A]
=true, if heatPort is enabled [:#(type=Boolean)]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Stator current / excitation current
[H]
Number of phases [:#(type=Integer)]
Number of pole pairs [:#(type=Integer)]
Use only positive output range, if true [:#(type=Boolean)]
Below threshold the voltage is considered as zero
Use support or fixed housing [:#(type=Boolean)]
[rad]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of inputs [:#(type=Integer)]
Number of outputs [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals
Number of phases [:#(type=Integer)]
[rad|deg]
[rad|deg]
[rad|deg]












Zero sequence component
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Relative angle between two flanges (= flange_b.phi - flange_a.phi) as output signal [rad|deg]
Constant output value
Connector of Real output signal
Connector of Real input signal 2
Connector of Real output signal [rad]
Gain of input signal 1 [1]
Gain of input signal 2
Number of inputs (= number of outputs) [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals




Number of inputs (= number of outputs) [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals

Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Connector of Real input signal [rad]
Use only positive output range, if true [:#(type=Boolean)]
Number of inputs [:#(type=Integer)]
Threshold
Potential at the pin [V]
Current flowing into the pin [A]
Use support or fixed housing [:#(type=Boolean)]
[W]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Relative angle between two flanges (flange_b.phi - flange_a.phi) [rad|deg]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Is true/false for exact treatment/filtering of the input signal, respectively [:#(type=Boolean)]
If exact=false, critical frequency of filter to filter input signal [Hz]
Rotation angle of flange with respect to support [rad|deg]
der(Rotation angle of flange with respect to support) [rad/s]
Angular velocity of flange with respect to support [rad/s]
der(Angular velocity of flange with respect to support) [rad/s2]
Critical frequency [rad/s]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Connector of Real output signal
Number of phases [:#(type=Integer)]
Rate Filter Time Constant [s]

TGR Time Constants
Regulator Gain [1]
Regulator Time Constant [s]
Exciter Gain
Exciter Time Constant
Rate Feedback Gain
Rate Feedback Time Constant
Regulator Maximum Output
Regulator Minimum Output
Terminal Reference Voltage (pu)

Connector of Real input signal
Connector of Real output signal
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess values of states
Initial value of output (derivatives of y are zero up to nx-1-th derivative)
Size of Denominator of transfer function. [:#(type=Integer)]
Size of Numerator of transfer function. [:#(type=Integer)]
[:#(type=Integer)]




Scaled vector x
der(Scaled vector x)
Connector of Real output signal
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess values of states
Initial value of output (derivatives of y are zero up to nx-1-th derivative)
State of transfer function from controller canonical form
Size of Denominator of transfer function. [:#(type=Integer)]
Size of Numerator of transfer function. [:#(type=Integer)]
[:#(type=Integer)]




Scaled vector x
der(Scaled vector x)
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal [V]
Simplified expression for homotopy-based initialization
[V]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Constant output value
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess values of states
Initial value of output (derivatives of y are zero up to nx-1-th derivative) [V]
State of transfer function from controller canonical form
Size of Denominator of transfer function. [:#(type=Integer)]
Size of Numerator of transfer function. [:#(type=Integer)]
[:#(type=Integer)]


[1]

Scaled vector x
der(Scaled vector x)
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
Gain value multiplied with input signal [1]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Constant output value [rad/s]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Number of heatPorts=number of phases [:#(type=Integer)]
=true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Constant output value [K]
Heat flow rate (positive if flowing from outside into the component) [W]
Damper space phasor current / rotor fixed frame [A]
der(Damper space phasor current / rotor fixed frame) [A/s]

